// Code generated by wit-bindgen-go. DO NOT EDIT.

//go:build !wasip1

// Package monotonicclock represents the interface "wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18".
//
// WASI Monotonic Clock is a clock API intended to let users measure elapsed
// time.
//
// It is intended to be portable at least between Unix-family platforms and
// Windows.
//
// A monotonic clock is a clock which has an unspecified initial value, and
// successive reads of the clock will produce non-decreasing values.
//
// It is intended for measuring elapsed time.
package monotonicclock

import (
	poll "github.com/rajatjindal/wasip2-golang/wasi/io/poll/v0.2.0-rc-2023-10-18"
)

// Instant represents the type "wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18#instant".
//
// A timestamp in nanoseconds.
//
//	type instant = u64
type Instant uint64

// Pollable represents the resource "wasi:io/poll@0.2.0-rc-2023-10-18#pollable".
//
// See [poll.Pollable] for more information.
type Pollable = poll.Pollable

// Now represents function "wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18#now".
//
// Read the current value of the clock.
//
// The clock is monotonic, therefore calling this function repeatedly will
// produce a sequence of non-decreasing values.
//
//	now: func() -> instant
//
//go:nosplit
func Now() Instant {
	return wasmimport_Now()
}

//go:wasmimport wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18 now
//go:noescape
func wasmimport_Now() Instant

// Resolution represents function "wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18#resolution".
//
// Query the resolution of the clock.
//
//	resolution: func() -> instant
//
//go:nosplit
func Resolution() Instant {
	return wasmimport_Resolution()
}

//go:wasmimport wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18 resolution
//go:noescape
func wasmimport_Resolution() Instant

// Subscribe represents function "wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18#subscribe".
//
// Create a `pollable` which will resolve once the specified time has been
// reached.
//
//	subscribe: func(when: instant, absolute: bool) -> own<pollable>
//
//go:nosplit
func Subscribe(when Instant, absolute bool) Pollable {
	return wasmimport_Subscribe(when, absolute)
}

//go:wasmimport wasi:clocks/monotonic-clock@0.2.0-rc-2023-10-18 subscribe
//go:noescape
func wasmimport_Subscribe(when Instant, absolute bool) Pollable
