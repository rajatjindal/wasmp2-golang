// Code generated by wit-bindgen-go. DO NOT EDIT.

//go:build !wasip1

// Package mysql represents the interface "fermyon:spin/mysql@2.0.0".
package mysql

import (
	rdbmstypes "github.com/rajatjindal/wasip2-golang/fermyon/spin/rdbms-types/v2.0.0"
	"github.com/ydnar/wasm-tools-go/cm"
)

// Connection represents the resource "fermyon:spin/mysql@2.0.0#connection".
//
// A connection to a MySQL database.
//
//	resource connection
type Connection cm.Resource

// ResourceDrop represents the Canonical ABI function "resource-drop".
//
// Drops a resource handle.
//
//go:nosplit
func (self Connection) ResourceDrop() {
	self.wasmimport_ResourceDrop()
}

//go:wasmimport fermyon:spin/mysql@2.0.0 [resource-drop]connection
//go:noescape
func (self Connection) wasmimport_ResourceDrop()

// ConnectionOpen represents static function "open".
//
// Open a connection to the MySQL instance at `address`.
//
//	open: static func(address: string) -> result<own<connection>, error>
//
//go:nosplit
func ConnectionOpen(address string) cm.ErrResult[Connection, Error] {
	var result cm.ErrResult[Connection, Error]
	wasmimport_ConnectionOpen(address, &result)
	return result
}

//go:wasmimport fermyon:spin/mysql@2.0.0 [static]connection.open
//go:noescape
func wasmimport_ConnectionOpen(address string, result *cm.ErrResult[Connection, Error])

// Execute represents method "execute".
//
// execute command to the database: insert, update, delete
//
//	execute: func(statement: string, params: list<parameter-value>) -> result<_, error>
//
//go:nosplit
func (self Connection) Execute(statement string, params cm.List[ParameterValue]) cm.ErrResult[struct{}, Error] {
	var result cm.ErrResult[struct{}, Error]
	self.wasmimport_Execute(statement, params, &result)
	return result
}

//go:wasmimport fermyon:spin/mysql@2.0.0 [method]connection.execute
//go:noescape
func (self Connection) wasmimport_Execute(statement string, params cm.List[ParameterValue], result *cm.ErrResult[struct{}, Error])

// Query represents method "query".
//
// query the database: select
//
//	query: func(statement: string, params: list<parameter-value>) -> result<row-set,
//	error>
//
//go:nosplit
func (self Connection) Query(statement string, params cm.List[ParameterValue]) cm.OKResult[RowSet, Error] {
	var result cm.OKResult[RowSet, Error]
	self.wasmimport_Query(statement, params, &result)
	return result
}

//go:wasmimport fermyon:spin/mysql@2.0.0 [method]connection.query
//go:noescape
func (self Connection) wasmimport_Query(statement string, params cm.List[ParameterValue], result *cm.OKResult[RowSet, Error])

// Error represents the variant "fermyon:spin/rdbms-types@2.0.0#error".
//
// See [rdbmstypes.Error] for more information.
type Error = rdbmstypes.Error

// ParameterValue represents the variant "fermyon:spin/rdbms-types@2.0.0#parameter-value".
//
// See [rdbmstypes.ParameterValue] for more information.
type ParameterValue = rdbmstypes.ParameterValue

// RowSet represents the record "fermyon:spin/rdbms-types@2.0.0#row-set".
//
// See [rdbmstypes.RowSet] for more information.
type RowSet = rdbmstypes.RowSet
