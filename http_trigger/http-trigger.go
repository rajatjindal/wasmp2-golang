// Generated by `wit-bindgen` 0.23.0. DO NOT EDIT!
package http_trigger

// #include "http_trigger.h"
// #include <stdlib.h>
import "C"
import "unsafe"
import "fmt"
// Import functions from wasi:io/poll@0.2.0
// WasiIo0_2_0_PollPollable is a handle to imported resource pollable
type WasiIo0_2_0_PollPollable int32

//go:wasmimport wasi:io/poll@0.2.0 [resource-drop]pollable
func _WasiIo0_2_0_PollPollable_drop(self WasiIo0_2_0_PollPollable)

func (self WasiIo0_2_0_PollPollable) Drop() {
  _WasiIo0_2_0_PollPollable_drop(self)
}

func (self WasiIo0_2_0_PollPollable) Ready() bool {
  var lower_self C.wasi_io_0_2_0_poll_borrow_pollable_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_io_0_2_0_poll_method_pollable_ready(lower_self )
  lift_ret := ret
  return lift_ret
}

func (self WasiIo0_2_0_PollPollable) Block() {
  var lower_self C.wasi_io_0_2_0_poll_borrow_pollable_t
  lower_self.__handle = C.int32_t(self)
  C.wasi_io_0_2_0_poll_method_pollable_block(lower_self )
}

func WasiIo0_2_0_PollPoll(in []WasiIo0_2_0_PollPollable) []uint32 {
  var lower_in C.wasi_io_0_2_0_poll_list_borrow_pollable_t
  if len(in) == 0 {
    lower_in.ptr = nil
    lower_in.len = 0
  } else {
    var empty_lower_in C.wasi_io_0_2_0_poll_borrow_pollable_t
    lower_in.ptr = (*C.wasi_io_0_2_0_poll_borrow_pollable_t)(C.malloc(C.size_t(len(in)) * C.size_t(unsafe.Sizeof(empty_lower_in))))
    lower_in.len = C.size_t(len(in))
    for lower_in_i := range in {
      lower_in_ptr := (*C.wasi_io_0_2_0_poll_borrow_pollable_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_in.ptr)) +
      uintptr(lower_in_i)*unsafe.Sizeof(empty_lower_in)))
      var lower_in_ptr_value C.wasi_io_0_2_0_poll_borrow_pollable_t
      lower_in_ptr_value.__handle = C.int32_t(in[lower_in_i])
      *lower_in_ptr = lower_in_ptr_value
    }
  }
  var ret C.http_trigger_list_u32_t
  C.wasi_io_0_2_0_poll_poll(&lower_in , &ret )
  var lift_ret []uint32
  lift_ret = make([]uint32, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.uint32_t
      lift_ret_ptr := *(*C.uint32_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret uint32
      list_lift_ret = uint32(lift_ret_ptr)
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

// Import functions from wasi:clocks/monotonic-clock@0.2.0
type WasiClocks0_2_0_MonotonicClockPollable = WasiIo0_2_0_PollPollable
type WasiClocks0_2_0_MonotonicClockInstant = uint64
type WasiClocks0_2_0_MonotonicClockDuration = uint64
func WasiClocks0_2_0_MonotonicClockNow() WasiClocks0_2_0_MonotonicClockInstant {
  ret := C.wasi_clocks_0_2_0_monotonic_clock_now()
  var lift_ret WasiClocks0_2_0_MonotonicClockInstant
  var lift_ret_val uint64
  lift_ret_val = uint64(ret)
  lift_ret = lift_ret_val
  return lift_ret
}

func WasiClocks0_2_0_MonotonicClockResolution() WasiClocks0_2_0_MonotonicClockDuration {
  ret := C.wasi_clocks_0_2_0_monotonic_clock_resolution()
  var lift_ret WasiClocks0_2_0_MonotonicClockDuration
  var lift_ret_val uint64
  lift_ret_val = uint64(ret)
  lift_ret = lift_ret_val
  return lift_ret
}

func WasiClocks0_2_0_MonotonicClockSubscribeInstant(when WasiClocks0_2_0_MonotonicClockInstant) WasiClocks0_2_0_MonotonicClockPollable {
  var lower_when C.uint64_t
  lower_when_val := C.uint64_t(when)
  lower_when = lower_when_val
  ret := C.wasi_clocks_0_2_0_monotonic_clock_subscribe_instant(lower_when )
  var lift_ret WasiClocks0_2_0_MonotonicClockPollable
  lift_ret = WasiClocks0_2_0_MonotonicClockPollable(ret.__handle)

  return lift_ret
}

func WasiClocks0_2_0_MonotonicClockSubscribeDuration(when WasiClocks0_2_0_MonotonicClockDuration) WasiClocks0_2_0_MonotonicClockPollable {
  var lower_when C.uint64_t
  lower_when_val := C.uint64_t(when)
  lower_when = lower_when_val
  ret := C.wasi_clocks_0_2_0_monotonic_clock_subscribe_duration(lower_when )
  var lift_ret WasiClocks0_2_0_MonotonicClockPollable
  lift_ret = WasiClocks0_2_0_MonotonicClockPollable(ret.__handle)

  return lift_ret
}

// Import functions from wasi:io/error@0.2.0
// WasiIo0_2_0_ErrorError is a handle to imported resource error
type WasiIo0_2_0_ErrorError int32

//go:wasmimport wasi:io/error@0.2.0 [resource-drop]error
func _WasiIo0_2_0_ErrorError_drop(self WasiIo0_2_0_ErrorError)

func (self WasiIo0_2_0_ErrorError) Drop() {
  _WasiIo0_2_0_ErrorError_drop(self)
}

func (self WasiIo0_2_0_ErrorError) ToDebugString() string {
  var lower_self C.wasi_io_0_2_0_error_borrow_error_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_string_t
  C.wasi_io_0_2_0_error_method_error_to_debug_string(lower_self , &ret )
  var lift_ret string
  lift_ret = C.GoStringN((*C.char)(unsafe.Pointer(ret.ptr)), C.int(ret.len))
  return lift_ret
}

// Import functions from wasi:io/streams@0.2.0
type WasiIo0_2_0_StreamsError = WasiIo0_2_0_ErrorError
type WasiIo0_2_0_StreamsPollable = WasiIo0_2_0_PollPollable
type WasiIo0_2_0_StreamsStreamErrorKind int

const (
WasiIo0_2_0_StreamsStreamErrorKindLastOperationFailed WasiIo0_2_0_StreamsStreamErrorKind = iota
WasiIo0_2_0_StreamsStreamErrorKindClosed
)

type WasiIo0_2_0_StreamsStreamError struct {
  kind WasiIo0_2_0_StreamsStreamErrorKind
  val any
}

func (n WasiIo0_2_0_StreamsStreamError) Kind() WasiIo0_2_0_StreamsStreamErrorKind {
  return n.kind
}

func WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(v WasiIo0_2_0_StreamsError) WasiIo0_2_0_StreamsStreamError{
  return WasiIo0_2_0_StreamsStreamError{kind: WasiIo0_2_0_StreamsStreamErrorKindLastOperationFailed, val: v}
}

func (n WasiIo0_2_0_StreamsStreamError) GetLastOperationFailed() WasiIo0_2_0_StreamsError{
  if g, w := n.Kind(), WasiIo0_2_0_StreamsStreamErrorKindLastOperationFailed; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiIo0_2_0_StreamsError)
}

func (n *WasiIo0_2_0_StreamsStreamError) SetLastOperationFailed(v WasiIo0_2_0_StreamsError) {
  n.val = v
  n.kind = WasiIo0_2_0_StreamsStreamErrorKindLastOperationFailed
}

func WasiIo0_2_0_StreamsStreamErrorClosed() WasiIo0_2_0_StreamsStreamError{
  return WasiIo0_2_0_StreamsStreamError{kind: WasiIo0_2_0_StreamsStreamErrorKindClosed}
}

// WasiIo0_2_0_StreamsInputStream is a handle to imported resource input-stream
type WasiIo0_2_0_StreamsInputStream int32

//go:wasmimport wasi:io/streams@0.2.0 [resource-drop]input-stream
func _WasiIo0_2_0_StreamsInputStream_drop(self WasiIo0_2_0_StreamsInputStream)

func (self WasiIo0_2_0_StreamsInputStream) Drop() {
  _WasiIo0_2_0_StreamsInputStream_drop(self)
}

// WasiIo0_2_0_StreamsOutputStream is a handle to imported resource output-stream
type WasiIo0_2_0_StreamsOutputStream int32

//go:wasmimport wasi:io/streams@0.2.0 [resource-drop]output-stream
func _WasiIo0_2_0_StreamsOutputStream_drop(self WasiIo0_2_0_StreamsOutputStream)

func (self WasiIo0_2_0_StreamsOutputStream) Drop() {
  _WasiIo0_2_0_StreamsOutputStream_drop(self)
}

func (self WasiIo0_2_0_StreamsInputStream) Read(len uint64) Result[[]uint8, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_list_u8_stream_error_t
  C.wasi_io_0_2_0_streams_method_input_stream_read(lower_self , lower_len , &ret )
  var lift_ret Result[[]uint8, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_list_u8_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val []uint8
    lift_ret_val = make([]uint8, lift_ret_ptr.len)
    if lift_ret_ptr.len > 0 {
      for lift_ret_val_i := 0; lift_ret_val_i < int(lift_ret_ptr.len); lift_ret_val_i++ {
        var empty_lift_ret_val C.uint8_t
        lift_ret_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
        uintptr(lift_ret_val_i)*unsafe.Sizeof(empty_lift_ret_val)))
        var list_lift_ret_val uint8
        list_lift_ret_val = uint8(lift_ret_val_ptr)
        lift_ret_val[lift_ret_val_i] = list_lift_ret_val
      }
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsInputStream) BlockingRead(len uint64) Result[[]uint8, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_list_u8_stream_error_t
  C.wasi_io_0_2_0_streams_method_input_stream_blocking_read(lower_self , lower_len , &ret )
  var lift_ret Result[[]uint8, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_list_u8_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val []uint8
    lift_ret_val = make([]uint8, lift_ret_ptr.len)
    if lift_ret_ptr.len > 0 {
      for lift_ret_val_i := 0; lift_ret_val_i < int(lift_ret_ptr.len); lift_ret_val_i++ {
        var empty_lift_ret_val C.uint8_t
        lift_ret_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
        uintptr(lift_ret_val_i)*unsafe.Sizeof(empty_lift_ret_val)))
        var list_lift_ret_val uint8
        list_lift_ret_val = uint8(lift_ret_val_ptr)
        lift_ret_val[lift_ret_val_i] = list_lift_ret_val
      }
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsInputStream) Skip(len uint64) Result[uint64, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_u64_stream_error_t
  C.wasi_io_0_2_0_streams_method_input_stream_skip(lower_self , lower_len , &ret )
  var lift_ret Result[uint64, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsInputStream) BlockingSkip(len uint64) Result[uint64, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_u64_stream_error_t
  C.wasi_io_0_2_0_streams_method_input_stream_blocking_skip(lower_self , lower_len , &ret )
  var lift_ret Result[uint64, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsInputStream) Subscribe() WasiIo0_2_0_StreamsPollable {
  var lower_self C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_io_0_2_0_streams_method_input_stream_subscribe(lower_self )
  var lift_ret WasiIo0_2_0_StreamsPollable
  lift_ret = WasiIo0_2_0_StreamsPollable(ret.__handle)

  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) CheckWrite() Result[uint64, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_io_0_2_0_streams_result_u64_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_check_write(lower_self , &ret )
  var lift_ret Result[uint64, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) Write(contents []uint8) Result[struct{}, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var lower_contents C.http_trigger_list_u8_t
  if len(contents) == 0 {
    lower_contents.ptr = nil
    lower_contents.len = 0
  } else {
    var empty_lower_contents C.uint8_t
    lower_contents.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(contents)) * C.size_t(unsafe.Sizeof(empty_lower_contents))))
    lower_contents.len = C.size_t(len(contents))
    for lower_contents_i := range contents {
      lower_contents_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_contents.ptr)) +
      uintptr(lower_contents_i)*unsafe.Sizeof(empty_lower_contents)))
      lower_contents_ptr_value := C.uint8_t(contents[lower_contents_i])
      *lower_contents_ptr = lower_contents_ptr_value
    }
  }
  var ret C.wasi_io_0_2_0_streams_result_void_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_write(lower_self , &lower_contents , &ret )
  var lift_ret Result[struct{}, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) BlockingWriteAndFlush(contents []uint8) Result[struct{}, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var lower_contents C.http_trigger_list_u8_t
  if len(contents) == 0 {
    lower_contents.ptr = nil
    lower_contents.len = 0
  } else {
    var empty_lower_contents C.uint8_t
    lower_contents.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(contents)) * C.size_t(unsafe.Sizeof(empty_lower_contents))))
    lower_contents.len = C.size_t(len(contents))
    for lower_contents_i := range contents {
      lower_contents_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_contents.ptr)) +
      uintptr(lower_contents_i)*unsafe.Sizeof(empty_lower_contents)))
      lower_contents_ptr_value := C.uint8_t(contents[lower_contents_i])
      *lower_contents_ptr = lower_contents_ptr_value
    }
  }
  var ret C.wasi_io_0_2_0_streams_result_void_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_blocking_write_and_flush(lower_self , &lower_contents , &ret )
  var lift_ret Result[struct{}, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) Flush() Result[struct{}, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_io_0_2_0_streams_result_void_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_flush(lower_self , &ret )
  var lift_ret Result[struct{}, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) BlockingFlush() Result[struct{}, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_io_0_2_0_streams_result_void_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_blocking_flush(lower_self , &ret )
  var lift_ret Result[struct{}, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) Subscribe() WasiIo0_2_0_StreamsPollable {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_io_0_2_0_streams_method_output_stream_subscribe(lower_self )
  var lift_ret WasiIo0_2_0_StreamsPollable
  lift_ret = WasiIo0_2_0_StreamsPollable(ret.__handle)

  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) WriteZeroes(len uint64) Result[struct{}, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_void_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_write_zeroes(lower_self , lower_len , &ret )
  var lift_ret Result[struct{}, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) BlockingWriteZeroesAndFlush(len uint64) Result[struct{}, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_void_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_blocking_write_zeroes_and_flush(lower_self , lower_len , &ret )
  var lift_ret Result[struct{}, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) Splice(src WasiIo0_2_0_StreamsInputStream, len uint64) Result[uint64, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var lower_src C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_src.__handle = C.int32_t(src)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_u64_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_splice(lower_self , lower_src , lower_len , &ret )
  var lift_ret Result[uint64, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiIo0_2_0_StreamsOutputStream) BlockingSplice(src WasiIo0_2_0_StreamsInputStream, len uint64) Result[uint64, WasiIo0_2_0_StreamsStreamError] {
  var lower_self C.wasi_io_0_2_0_streams_borrow_output_stream_t
  lower_self.__handle = C.int32_t(self)
  var lower_src C.wasi_io_0_2_0_streams_borrow_input_stream_t
  lower_src.__handle = C.int32_t(src)
  lower_len := C.uint64_t(len)
  var ret C.wasi_io_0_2_0_streams_result_u64_stream_error_t
  C.wasi_io_0_2_0_streams_method_output_stream_blocking_splice(lower_self , lower_src , lower_len , &ret )
  var lift_ret Result[uint64, WasiIo0_2_0_StreamsStreamError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_io_0_2_0_streams_stream_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiIo0_2_0_StreamsStreamError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.wasi_io_0_2_0_streams_own_error_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiIo0_2_0_StreamsError
      lift_ret_val_val = WasiIo0_2_0_StreamsError(lift_ret_val_ptr.__handle)
      
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorLastOperationFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiIo0_2_0_StreamsStreamErrorClosed()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from wasi:http/types@0.2.0
type WasiHttp0_2_0_TypesDuration = WasiClocks0_2_0_MonotonicClockDuration
type WasiHttp0_2_0_TypesInputStream = WasiIo0_2_0_StreamsInputStream
type WasiHttp0_2_0_TypesOutputStream = WasiIo0_2_0_StreamsOutputStream
type WasiHttp0_2_0_TypesIoError = WasiIo0_2_0_ErrorError
type WasiHttp0_2_0_TypesPollable = WasiIo0_2_0_PollPollable
type WasiHttp0_2_0_TypesMethodKind int

const (
WasiHttp0_2_0_TypesMethodKindGet WasiHttp0_2_0_TypesMethodKind = iota
WasiHttp0_2_0_TypesMethodKindHead
WasiHttp0_2_0_TypesMethodKindPost
WasiHttp0_2_0_TypesMethodKindPut
WasiHttp0_2_0_TypesMethodKindDelete
WasiHttp0_2_0_TypesMethodKindConnect
WasiHttp0_2_0_TypesMethodKindOptions
WasiHttp0_2_0_TypesMethodKindTrace
WasiHttp0_2_0_TypesMethodKindPatch
WasiHttp0_2_0_TypesMethodKindOther
)

type WasiHttp0_2_0_TypesMethod struct {
  kind WasiHttp0_2_0_TypesMethodKind
  val any
}

func (n WasiHttp0_2_0_TypesMethod) Kind() WasiHttp0_2_0_TypesMethodKind {
  return n.kind
}

func WasiHttp0_2_0_TypesMethodGet() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindGet}
}

func WasiHttp0_2_0_TypesMethodHead() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindHead}
}

func WasiHttp0_2_0_TypesMethodPost() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindPost}
}

func WasiHttp0_2_0_TypesMethodPut() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindPut}
}

func WasiHttp0_2_0_TypesMethodDelete() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindDelete}
}

func WasiHttp0_2_0_TypesMethodConnect() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindConnect}
}

func WasiHttp0_2_0_TypesMethodOptions() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindOptions}
}

func WasiHttp0_2_0_TypesMethodTrace() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindTrace}
}

func WasiHttp0_2_0_TypesMethodPatch() WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindPatch}
}

func WasiHttp0_2_0_TypesMethodOther(v string) WasiHttp0_2_0_TypesMethod{
  return WasiHttp0_2_0_TypesMethod{kind: WasiHttp0_2_0_TypesMethodKindOther, val: v}
}

func (n WasiHttp0_2_0_TypesMethod) GetOther() string{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesMethodKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *WasiHttp0_2_0_TypesMethod) SetOther(v string) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesMethodKindOther
}

type WasiHttp0_2_0_TypesSchemeKind int

const (
WasiHttp0_2_0_TypesSchemeKindHttp WasiHttp0_2_0_TypesSchemeKind = iota
WasiHttp0_2_0_TypesSchemeKindHttps
WasiHttp0_2_0_TypesSchemeKindOther
)

type WasiHttp0_2_0_TypesScheme struct {
  kind WasiHttp0_2_0_TypesSchemeKind
  val any
}

func (n WasiHttp0_2_0_TypesScheme) Kind() WasiHttp0_2_0_TypesSchemeKind {
  return n.kind
}

func WasiHttp0_2_0_TypesSchemeHttp() WasiHttp0_2_0_TypesScheme{
  return WasiHttp0_2_0_TypesScheme{kind: WasiHttp0_2_0_TypesSchemeKindHttp}
}

func WasiHttp0_2_0_TypesSchemeHttps() WasiHttp0_2_0_TypesScheme{
  return WasiHttp0_2_0_TypesScheme{kind: WasiHttp0_2_0_TypesSchemeKindHttps}
}

func WasiHttp0_2_0_TypesSchemeOther(v string) WasiHttp0_2_0_TypesScheme{
  return WasiHttp0_2_0_TypesScheme{kind: WasiHttp0_2_0_TypesSchemeKindOther, val: v}
}

func (n WasiHttp0_2_0_TypesScheme) GetOther() string{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesSchemeKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *WasiHttp0_2_0_TypesScheme) SetOther(v string) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesSchemeKindOther
}

type WasiHttp0_2_0_TypesDnsErrorPayload struct {
  Rcode Option[string]
  InfoCode Option[uint16]
}

type WasiHttp0_2_0_TypesTlsAlertReceivedPayload struct {
  AlertId Option[uint8]
  AlertMessage Option[string]
}

type WasiHttp0_2_0_TypesFieldSizePayload struct {
  FieldName Option[string]
  FieldSize Option[uint32]
}

type WasiHttp0_2_0_TypesErrorCodeKind int

const (
WasiHttp0_2_0_TypesErrorCodeKindDnsTimeout WasiHttp0_2_0_TypesErrorCodeKind = iota
WasiHttp0_2_0_TypesErrorCodeKindDnsError
WasiHttp0_2_0_TypesErrorCodeKindDestinationNotFound
WasiHttp0_2_0_TypesErrorCodeKindDestinationUnavailable
WasiHttp0_2_0_TypesErrorCodeKindDestinationIpProhibited
WasiHttp0_2_0_TypesErrorCodeKindDestinationIpUnroutable
WasiHttp0_2_0_TypesErrorCodeKindConnectionRefused
WasiHttp0_2_0_TypesErrorCodeKindConnectionTerminated
WasiHttp0_2_0_TypesErrorCodeKindConnectionTimeout
WasiHttp0_2_0_TypesErrorCodeKindConnectionReadTimeout
WasiHttp0_2_0_TypesErrorCodeKindConnectionWriteTimeout
WasiHttp0_2_0_TypesErrorCodeKindConnectionLimitReached
WasiHttp0_2_0_TypesErrorCodeKindTlsProtocolError
WasiHttp0_2_0_TypesErrorCodeKindTlsCertificateError
WasiHttp0_2_0_TypesErrorCodeKindTlsAlertReceived
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestDenied
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestLengthRequired
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestBodySize
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestMethodInvalid
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestUriInvalid
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestUriTooLong
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSectionSize
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSize
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSectionSize
WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSize
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseIncomplete
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSectionSize
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSize
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseBodySize
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSectionSize
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSize
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTransferCoding
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseContentCoding
WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTimeout
WasiHttp0_2_0_TypesErrorCodeKindHttpUpgradeFailed
WasiHttp0_2_0_TypesErrorCodeKindHttpProtocolError
WasiHttp0_2_0_TypesErrorCodeKindLoopDetected
WasiHttp0_2_0_TypesErrorCodeKindConfigurationError
WasiHttp0_2_0_TypesErrorCodeKindInternalError
)

type WasiHttp0_2_0_TypesErrorCode struct {
  kind WasiHttp0_2_0_TypesErrorCodeKind
  val any
}

func (n WasiHttp0_2_0_TypesErrorCode) Kind() WasiHttp0_2_0_TypesErrorCodeKind {
  return n.kind
}

func WasiHttp0_2_0_TypesErrorCodeDnsTimeout() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindDnsTimeout}
}

func WasiHttp0_2_0_TypesErrorCodeDnsError(v WasiHttp0_2_0_TypesDnsErrorPayload) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindDnsError, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetDnsError() WasiHttp0_2_0_TypesDnsErrorPayload{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindDnsError; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiHttp0_2_0_TypesDnsErrorPayload)
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetDnsError(v WasiHttp0_2_0_TypesDnsErrorPayload) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindDnsError
}

func WasiHttp0_2_0_TypesErrorCodeDestinationNotFound() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindDestinationNotFound}
}

func WasiHttp0_2_0_TypesErrorCodeDestinationUnavailable() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindDestinationUnavailable}
}

func WasiHttp0_2_0_TypesErrorCodeDestinationIpProhibited() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindDestinationIpProhibited}
}

func WasiHttp0_2_0_TypesErrorCodeDestinationIpUnroutable() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindDestinationIpUnroutable}
}

func WasiHttp0_2_0_TypesErrorCodeConnectionRefused() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConnectionRefused}
}

func WasiHttp0_2_0_TypesErrorCodeConnectionTerminated() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConnectionTerminated}
}

func WasiHttp0_2_0_TypesErrorCodeConnectionTimeout() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConnectionTimeout}
}

func WasiHttp0_2_0_TypesErrorCodeConnectionReadTimeout() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConnectionReadTimeout}
}

func WasiHttp0_2_0_TypesErrorCodeConnectionWriteTimeout() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConnectionWriteTimeout}
}

func WasiHttp0_2_0_TypesErrorCodeConnectionLimitReached() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConnectionLimitReached}
}

func WasiHttp0_2_0_TypesErrorCodeTlsProtocolError() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindTlsProtocolError}
}

func WasiHttp0_2_0_TypesErrorCodeTlsCertificateError() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindTlsCertificateError}
}

func WasiHttp0_2_0_TypesErrorCodeTlsAlertReceived(v WasiHttp0_2_0_TypesTlsAlertReceivedPayload) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindTlsAlertReceived, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetTlsAlertReceived() WasiHttp0_2_0_TypesTlsAlertReceivedPayload{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindTlsAlertReceived; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiHttp0_2_0_TypesTlsAlertReceivedPayload)
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetTlsAlertReceived(v WasiHttp0_2_0_TypesTlsAlertReceivedPayload) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindTlsAlertReceived
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestDenied() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestDenied}
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestLengthRequired() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestLengthRequired}
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestBodySize(v Option[uint64]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestBodySize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpRequestBodySize() Option[uint64]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpRequestBodySize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[uint64])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpRequestBodySize(v Option[uint64]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpRequestBodySize
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestMethodInvalid() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestMethodInvalid}
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestUriInvalid() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestUriInvalid}
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestUriTooLong() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestUriTooLong}
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSectionSize(v Option[uint32]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSectionSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpRequestHeaderSectionSize() Option[uint32]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSectionSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[uint32])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpRequestHeaderSectionSize(v Option[uint32]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSectionSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSize(v Option[WasiHttp0_2_0_TypesFieldSizePayload]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpRequestHeaderSize() Option[WasiHttp0_2_0_TypesFieldSizePayload]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[WasiHttp0_2_0_TypesFieldSizePayload])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpRequestHeaderSize(v Option[WasiHttp0_2_0_TypesFieldSizePayload]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSectionSize(v Option[uint32]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSectionSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpRequestTrailerSectionSize() Option[uint32]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSectionSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[uint32])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpRequestTrailerSectionSize(v Option[uint32]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSectionSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSize(v WasiHttp0_2_0_TypesFieldSizePayload) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpRequestTrailerSize() WasiHttp0_2_0_TypesFieldSizePayload{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiHttp0_2_0_TypesFieldSizePayload)
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpRequestTrailerSize(v WasiHttp0_2_0_TypesFieldSizePayload) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseIncomplete() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseIncomplete}
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSectionSize(v Option[uint32]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSectionSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseHeaderSectionSize() Option[uint32]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSectionSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[uint32])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseHeaderSectionSize(v Option[uint32]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSectionSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSize(v WasiHttp0_2_0_TypesFieldSizePayload) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseHeaderSize() WasiHttp0_2_0_TypesFieldSizePayload{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiHttp0_2_0_TypesFieldSizePayload)
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseHeaderSize(v WasiHttp0_2_0_TypesFieldSizePayload) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseBodySize(v Option[uint64]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseBodySize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseBodySize() Option[uint64]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseBodySize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[uint64])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseBodySize(v Option[uint64]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseBodySize
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSectionSize(v Option[uint32]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSectionSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseTrailerSectionSize() Option[uint32]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSectionSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[uint32])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseTrailerSectionSize(v Option[uint32]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSectionSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSize(v WasiHttp0_2_0_TypesFieldSizePayload) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSize, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseTrailerSize() WasiHttp0_2_0_TypesFieldSizePayload{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSize; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiHttp0_2_0_TypesFieldSizePayload)
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseTrailerSize(v WasiHttp0_2_0_TypesFieldSizePayload) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSize
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseTransferCoding(v Option[string]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTransferCoding, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseTransferCoding() Option[string]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTransferCoding; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[string])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseTransferCoding(v Option[string]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTransferCoding
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseContentCoding(v Option[string]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseContentCoding, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetHttpResponseContentCoding() Option[string]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindHttpResponseContentCoding; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[string])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetHttpResponseContentCoding(v Option[string]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindHttpResponseContentCoding
}

func WasiHttp0_2_0_TypesErrorCodeHttpResponseTimeout() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTimeout}
}

func WasiHttp0_2_0_TypesErrorCodeHttpUpgradeFailed() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpUpgradeFailed}
}

func WasiHttp0_2_0_TypesErrorCodeHttpProtocolError() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindHttpProtocolError}
}

func WasiHttp0_2_0_TypesErrorCodeLoopDetected() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindLoopDetected}
}

func WasiHttp0_2_0_TypesErrorCodeConfigurationError() WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindConfigurationError}
}

func WasiHttp0_2_0_TypesErrorCodeInternalError(v Option[string]) WasiHttp0_2_0_TypesErrorCode{
  return WasiHttp0_2_0_TypesErrorCode{kind: WasiHttp0_2_0_TypesErrorCodeKindInternalError, val: v}
}

func (n WasiHttp0_2_0_TypesErrorCode) GetInternalError() Option[string]{
  if g, w := n.Kind(), WasiHttp0_2_0_TypesErrorCodeKindInternalError; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(Option[string])
}

func (n *WasiHttp0_2_0_TypesErrorCode) SetInternalError(v Option[string]) {
  n.val = v
  n.kind = WasiHttp0_2_0_TypesErrorCodeKindInternalError
}

type WasiHttp0_2_0_TypesHeaderErrorKind int

const (
WasiHttp0_2_0_TypesHeaderErrorKindInvalidSyntax WasiHttp0_2_0_TypesHeaderErrorKind = iota
WasiHttp0_2_0_TypesHeaderErrorKindForbidden
WasiHttp0_2_0_TypesHeaderErrorKindImmutable
)

type WasiHttp0_2_0_TypesHeaderError struct {
  kind WasiHttp0_2_0_TypesHeaderErrorKind
  val any
}

func (n WasiHttp0_2_0_TypesHeaderError) Kind() WasiHttp0_2_0_TypesHeaderErrorKind {
  return n.kind
}

func WasiHttp0_2_0_TypesHeaderErrorInvalidSyntax() WasiHttp0_2_0_TypesHeaderError{
  return WasiHttp0_2_0_TypesHeaderError{kind: WasiHttp0_2_0_TypesHeaderErrorKindInvalidSyntax}
}

func WasiHttp0_2_0_TypesHeaderErrorForbidden() WasiHttp0_2_0_TypesHeaderError{
  return WasiHttp0_2_0_TypesHeaderError{kind: WasiHttp0_2_0_TypesHeaderErrorKindForbidden}
}

func WasiHttp0_2_0_TypesHeaderErrorImmutable() WasiHttp0_2_0_TypesHeaderError{
  return WasiHttp0_2_0_TypesHeaderError{kind: WasiHttp0_2_0_TypesHeaderErrorKindImmutable}
}

type WasiHttp0_2_0_TypesFieldKey = string
type WasiHttp0_2_0_TypesFieldValue = uint8
// WasiHttp0_2_0_TypesFields is a handle to imported resource fields
type WasiHttp0_2_0_TypesFields int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]fields
func _WasiHttp0_2_0_TypesFields_drop(self WasiHttp0_2_0_TypesFields)

func (self WasiHttp0_2_0_TypesFields) Drop() {
  _WasiHttp0_2_0_TypesFields_drop(self)
}

type WasiHttp0_2_0_TypesHeaders = WasiHttp0_2_0_TypesFields
type WasiHttp0_2_0_TypesTrailers = WasiHttp0_2_0_TypesFields
// WasiHttp0_2_0_TypesIncomingRequest is a handle to imported resource incoming-request
type WasiHttp0_2_0_TypesIncomingRequest int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]incoming-request
func _WasiHttp0_2_0_TypesIncomingRequest_drop(self WasiHttp0_2_0_TypesIncomingRequest)

func (self WasiHttp0_2_0_TypesIncomingRequest) Drop() {
  _WasiHttp0_2_0_TypesIncomingRequest_drop(self)
}

// WasiHttp0_2_0_TypesOutgoingRequest is a handle to imported resource outgoing-request
type WasiHttp0_2_0_TypesOutgoingRequest int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]outgoing-request
func _WasiHttp0_2_0_TypesOutgoingRequest_drop(self WasiHttp0_2_0_TypesOutgoingRequest)

func (self WasiHttp0_2_0_TypesOutgoingRequest) Drop() {
  _WasiHttp0_2_0_TypesOutgoingRequest_drop(self)
}

// WasiHttp0_2_0_TypesRequestOptions is a handle to imported resource request-options
type WasiHttp0_2_0_TypesRequestOptions int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]request-options
func _WasiHttp0_2_0_TypesRequestOptions_drop(self WasiHttp0_2_0_TypesRequestOptions)

func (self WasiHttp0_2_0_TypesRequestOptions) Drop() {
  _WasiHttp0_2_0_TypesRequestOptions_drop(self)
}

// WasiHttp0_2_0_TypesResponseOutparam is a handle to imported resource response-outparam
type WasiHttp0_2_0_TypesResponseOutparam int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]response-outparam
func _WasiHttp0_2_0_TypesResponseOutparam_drop(self WasiHttp0_2_0_TypesResponseOutparam)

func (self WasiHttp0_2_0_TypesResponseOutparam) Drop() {
  _WasiHttp0_2_0_TypesResponseOutparam_drop(self)
}

type WasiHttp0_2_0_TypesStatusCode = uint16
// WasiHttp0_2_0_TypesIncomingResponse is a handle to imported resource incoming-response
type WasiHttp0_2_0_TypesIncomingResponse int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]incoming-response
func _WasiHttp0_2_0_TypesIncomingResponse_drop(self WasiHttp0_2_0_TypesIncomingResponse)

func (self WasiHttp0_2_0_TypesIncomingResponse) Drop() {
  _WasiHttp0_2_0_TypesIncomingResponse_drop(self)
}

// WasiHttp0_2_0_TypesIncomingBody is a handle to imported resource incoming-body
type WasiHttp0_2_0_TypesIncomingBody int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]incoming-body
func _WasiHttp0_2_0_TypesIncomingBody_drop(self WasiHttp0_2_0_TypesIncomingBody)

func (self WasiHttp0_2_0_TypesIncomingBody) Drop() {
  _WasiHttp0_2_0_TypesIncomingBody_drop(self)
}

// WasiHttp0_2_0_TypesFutureTrailers is a handle to imported resource future-trailers
type WasiHttp0_2_0_TypesFutureTrailers int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]future-trailers
func _WasiHttp0_2_0_TypesFutureTrailers_drop(self WasiHttp0_2_0_TypesFutureTrailers)

func (self WasiHttp0_2_0_TypesFutureTrailers) Drop() {
  _WasiHttp0_2_0_TypesFutureTrailers_drop(self)
}

// WasiHttp0_2_0_TypesOutgoingResponse is a handle to imported resource outgoing-response
type WasiHttp0_2_0_TypesOutgoingResponse int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]outgoing-response
func _WasiHttp0_2_0_TypesOutgoingResponse_drop(self WasiHttp0_2_0_TypesOutgoingResponse)

func (self WasiHttp0_2_0_TypesOutgoingResponse) Drop() {
  _WasiHttp0_2_0_TypesOutgoingResponse_drop(self)
}

// WasiHttp0_2_0_TypesOutgoingBody is a handle to imported resource outgoing-body
type WasiHttp0_2_0_TypesOutgoingBody int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]outgoing-body
func _WasiHttp0_2_0_TypesOutgoingBody_drop(self WasiHttp0_2_0_TypesOutgoingBody)

func (self WasiHttp0_2_0_TypesOutgoingBody) Drop() {
  _WasiHttp0_2_0_TypesOutgoingBody_drop(self)
}

// WasiHttp0_2_0_TypesFutureIncomingResponse is a handle to imported resource future-incoming-response
type WasiHttp0_2_0_TypesFutureIncomingResponse int32

//go:wasmimport wasi:http/types@0.2.0 [resource-drop]future-incoming-response
func _WasiHttp0_2_0_TypesFutureIncomingResponse_drop(self WasiHttp0_2_0_TypesFutureIncomingResponse)

func (self WasiHttp0_2_0_TypesFutureIncomingResponse) Drop() {
  _WasiHttp0_2_0_TypesFutureIncomingResponse_drop(self)
}

type WasiHttp0_2_0_TypesTuple2FieldKeyFieldValueT struct {
  F0 WasiHttp0_2_0_TypesFieldKey
  F1 []uint8
}

func WasiHttp0_2_0_TypesHttpErrorCode(err WasiHttp0_2_0_TypesIoError) Option[WasiHttp0_2_0_TypesErrorCode] {
  var lower_err C.wasi_http_0_2_0_types_borrow_io_error_t
  lower_err.__handle = C.int32_t(err)
  var ret C.wasi_http_0_2_0_types_option_error_code_t
  C.wasi_http_0_2_0_types_http_error_code(lower_err , &ret )
  var lift_ret Option[WasiHttp0_2_0_TypesErrorCode]
  if ret.is_some {
    var lift_ret_val WasiHttp0_2_0_TypesErrorCode
    if ret.val.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDnsTimeout()
    }
    if ret.val.tag == 1 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_dns_error_payload_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesDnsErrorPayload
      var lift_ret_val_val_Rcode Option[string]
      if lift_ret_val_ptr.rcode.is_some {
        var lift_ret_val_val_Rcode_val string
        lift_ret_val_val_Rcode_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.rcode.val.ptr)), C.int(lift_ret_val_ptr.rcode.val.len))
        lift_ret_val_val_Rcode.Set(lift_ret_val_val_Rcode_val)
      } else {
        lift_ret_val_val_Rcode.Unset()
      }
      lift_ret_val_val.Rcode = lift_ret_val_val_Rcode
      var lift_ret_val_val_InfoCode Option[uint16]
      if lift_ret_val_ptr.info_code.is_some {
        var lift_ret_val_val_InfoCode_val uint16
        lift_ret_val_val_InfoCode_val = uint16(lift_ret_val_ptr.info_code.val)
        lift_ret_val_val_InfoCode.Set(lift_ret_val_val_InfoCode_val)
      } else {
        lift_ret_val_val_InfoCode.Unset()
      }
      lift_ret_val_val.InfoCode = lift_ret_val_val_InfoCode
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDnsError(lift_ret_val_val)
    }
    if ret.val.tag == 2 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationNotFound()
    }
    if ret.val.tag == 3 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationUnavailable()
    }
    if ret.val.tag == 4 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpProhibited()
    }
    if ret.val.tag == 5 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpUnroutable()
    }
    if ret.val.tag == 6 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionRefused()
    }
    if ret.val.tag == 7 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionTerminated()
    }
    if ret.val.tag == 8 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionTimeout()
    }
    if ret.val.tag == 9 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionReadTimeout()
    }
    if ret.val.tag == 10 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionWriteTimeout()
    }
    if ret.val.tag == 11 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionLimitReached()
    }
    if ret.val.tag == 12 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeTlsProtocolError()
    }
    if ret.val.tag == 13 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeTlsCertificateError()
    }
    if ret.val.tag == 14 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_tls_alert_received_payload_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesTlsAlertReceivedPayload
      var lift_ret_val_val_AlertId Option[uint8]
      if lift_ret_val_ptr.alert_id.is_some {
        var lift_ret_val_val_AlertId_val uint8
        lift_ret_val_val_AlertId_val = uint8(lift_ret_val_ptr.alert_id.val)
        lift_ret_val_val_AlertId.Set(lift_ret_val_val_AlertId_val)
      } else {
        lift_ret_val_val_AlertId.Unset()
      }
      lift_ret_val_val.AlertId = lift_ret_val_val_AlertId
      var lift_ret_val_val_AlertMessage Option[string]
      if lift_ret_val_ptr.alert_message.is_some {
        var lift_ret_val_val_AlertMessage_val string
        lift_ret_val_val_AlertMessage_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.alert_message.val.ptr)), C.int(lift_ret_val_ptr.alert_message.val.len))
        lift_ret_val_val_AlertMessage.Set(lift_ret_val_val_AlertMessage_val)
      } else {
        lift_ret_val_val_AlertMessage.Unset()
      }
      lift_ret_val_val.AlertMessage = lift_ret_val_val_AlertMessage
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeTlsAlertReceived(lift_ret_val_val)
    }
    if ret.val.tag == 15 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestDenied()
    }
    if ret.val.tag == 16 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestLengthRequired()
    }
    if ret.val.tag == 17 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[uint64]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint64
        lift_ret_val_val_val = uint64(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestBodySize(lift_ret_val_val)
    }
    if ret.val.tag == 18 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestMethodInvalid()
    }
    if ret.val.tag == 19 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriInvalid()
    }
    if ret.val.tag == 20 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriTooLong()
    }
    if ret.val.tag == 21 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSectionSize(lift_ret_val_val)
    }
    if ret.val.tag == 22 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_option_field_size_payload_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[WasiHttp0_2_0_TypesFieldSizePayload]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
        var lift_ret_val_val_val_FieldName Option[string]
        if lift_ret_val_ptr.val.field_name.is_some {
          var lift_ret_val_val_val_FieldName_val string
          lift_ret_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.field_name.val.ptr)), C.int(lift_ret_val_ptr.val.field_name.val.len))
          lift_ret_val_val_val_FieldName.Set(lift_ret_val_val_val_FieldName_val)
        } else {
          lift_ret_val_val_val_FieldName.Unset()
        }
        lift_ret_val_val_val.FieldName = lift_ret_val_val_val_FieldName
        var lift_ret_val_val_val_FieldSize Option[uint32]
        if lift_ret_val_ptr.val.field_size.is_some {
          var lift_ret_val_val_val_FieldSize_val uint32
          lift_ret_val_val_val_FieldSize_val = uint32(lift_ret_val_ptr.val.field_size.val)
          lift_ret_val_val_val_FieldSize.Set(lift_ret_val_val_val_FieldSize_val)
        } else {
          lift_ret_val_val_val_FieldSize.Unset()
        }
        lift_ret_val_val_val.FieldSize = lift_ret_val_val_val_FieldSize
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSize(lift_ret_val_val)
    }
    if ret.val.tag == 23 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSectionSize(lift_ret_val_val)
    }
    if ret.val.tag == 24 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_FieldName Option[string]
      if lift_ret_val_ptr.field_name.is_some {
        var lift_ret_val_val_FieldName_val string
        lift_ret_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_ptr.field_name.val.len))
        lift_ret_val_val_FieldName.Set(lift_ret_val_val_FieldName_val)
      } else {
        lift_ret_val_val_FieldName.Unset()
      }
      lift_ret_val_val.FieldName = lift_ret_val_val_FieldName
      var lift_ret_val_val_FieldSize Option[uint32]
      if lift_ret_val_ptr.field_size.is_some {
        var lift_ret_val_val_FieldSize_val uint32
        lift_ret_val_val_FieldSize_val = uint32(lift_ret_val_ptr.field_size.val)
        lift_ret_val_val_FieldSize.Set(lift_ret_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_FieldSize.Unset()
      }
      lift_ret_val_val.FieldSize = lift_ret_val_val_FieldSize
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSize(lift_ret_val_val)
    }
    if ret.val.tag == 25 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseIncomplete()
    }
    if ret.val.tag == 26 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSectionSize(lift_ret_val_val)
    }
    if ret.val.tag == 27 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_FieldName Option[string]
      if lift_ret_val_ptr.field_name.is_some {
        var lift_ret_val_val_FieldName_val string
        lift_ret_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_ptr.field_name.val.len))
        lift_ret_val_val_FieldName.Set(lift_ret_val_val_FieldName_val)
      } else {
        lift_ret_val_val_FieldName.Unset()
      }
      lift_ret_val_val.FieldName = lift_ret_val_val_FieldName
      var lift_ret_val_val_FieldSize Option[uint32]
      if lift_ret_val_ptr.field_size.is_some {
        var lift_ret_val_val_FieldSize_val uint32
        lift_ret_val_val_FieldSize_val = uint32(lift_ret_val_ptr.field_size.val)
        lift_ret_val_val_FieldSize.Set(lift_ret_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_FieldSize.Unset()
      }
      lift_ret_val_val.FieldSize = lift_ret_val_val_FieldSize
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSize(lift_ret_val_val)
    }
    if ret.val.tag == 28 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[uint64]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint64
        lift_ret_val_val_val = uint64(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseBodySize(lift_ret_val_val)
    }
    if ret.val.tag == 29 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSectionSize(lift_ret_val_val)
    }
    if ret.val.tag == 30 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_FieldName Option[string]
      if lift_ret_val_ptr.field_name.is_some {
        var lift_ret_val_val_FieldName_val string
        lift_ret_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_ptr.field_name.val.len))
        lift_ret_val_val_FieldName.Set(lift_ret_val_val_FieldName_val)
      } else {
        lift_ret_val_val_FieldName.Unset()
      }
      lift_ret_val_val.FieldName = lift_ret_val_val_FieldName
      var lift_ret_val_val_FieldSize Option[uint32]
      if lift_ret_val_ptr.field_size.is_some {
        var lift_ret_val_val_FieldSize_val uint32
        lift_ret_val_val_FieldSize_val = uint32(lift_ret_val_ptr.field_size.val)
        lift_ret_val_val_FieldSize.Set(lift_ret_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_FieldSize.Unset()
      }
      lift_ret_val_val.FieldSize = lift_ret_val_val_FieldSize
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSize(lift_ret_val_val)
    }
    if ret.val.tag == 31 {
      lift_ret_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[string]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val string
        lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.ptr)), C.int(lift_ret_val_ptr.val.len))
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTransferCoding(lift_ret_val_val)
    }
    if ret.val.tag == 32 {
      lift_ret_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[string]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val string
        lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.ptr)), C.int(lift_ret_val_ptr.val.len))
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseContentCoding(lift_ret_val_val)
    }
    if ret.val.tag == 33 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTimeout()
    }
    if ret.val.tag == 34 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpUpgradeFailed()
    }
    if ret.val.tag == 35 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpProtocolError()
    }
    if ret.val.tag == 36 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeLoopDetected()
    }
    if ret.val.tag == 37 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConfigurationError()
    }
    if ret.val.tag == 38 {
      lift_ret_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Option[string]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val string
        lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.ptr)), C.int(lift_ret_val_ptr.val.len))
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeInternalError(lift_ret_val_val)
    }
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func NewFields() WasiHttp0_2_0_TypesFields {
  ret := C.wasi_http_0_2_0_types_constructor_fields()
  var lift_ret WasiHttp0_2_0_TypesFields
  lift_ret = WasiHttp0_2_0_TypesFields(ret.__handle)

  return lift_ret
}

func StaticFieldsFromList(entries []WasiHttp0_2_0_TypesTuple2FieldKeyFieldValueT) Result[WasiHttp0_2_0_TypesFields, WasiHttp0_2_0_TypesHeaderError] {
  var lower_entries C.http_trigger_list_tuple2_field_key_field_value_t
  if len(entries) == 0 {
    lower_entries.ptr = nil
    lower_entries.len = 0
  } else {
    var empty_lower_entries C.http_trigger_tuple2_field_key_field_value_t
    lower_entries.ptr = (*C.http_trigger_tuple2_field_key_field_value_t)(C.malloc(C.size_t(len(entries)) * C.size_t(unsafe.Sizeof(empty_lower_entries))))
    lower_entries.len = C.size_t(len(entries))
    for lower_entries_i := range entries {
      lower_entries_ptr := (*C.http_trigger_tuple2_field_key_field_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_entries.ptr)) +
      uintptr(lower_entries_i)*unsafe.Sizeof(empty_lower_entries)))
      var lower_entries_ptr_value C.http_trigger_tuple2_field_key_field_value_t
      var lower_entries_ptr_value_f0 C.http_trigger_string_t
      var lower_entries_ptr_value_f0_val C.http_trigger_string_t

      // use unsafe.Pointer to avoid copy
      lower_entries_ptr_value_f0_val.ptr = (*uint8)(unsafe.Pointer(C.CString(entries[lower_entries_i].F0)))
      lower_entries_ptr_value_f0_val.len = C.size_t(len(entries[lower_entries_i].F0))
      lower_entries_ptr_value_f0 = lower_entries_ptr_value_f0_val
      lower_entries_ptr_value.f0 = lower_entries_ptr_value_f0
      var lower_entries_ptr_value_f1 C.wasi_http_0_2_0_types_field_value_t
      if len(entries[lower_entries_i].F1) == 0 {
        lower_entries_ptr_value_f1.ptr = nil
        lower_entries_ptr_value_f1.len = 0
      } else {
        var empty_lower_entries_ptr_value_f1 C.uint8_t
        lower_entries_ptr_value_f1.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(entries[lower_entries_i].F1)) * C.size_t(unsafe.Sizeof(empty_lower_entries_ptr_value_f1))))
        lower_entries_ptr_value_f1.len = C.size_t(len(entries[lower_entries_i].F1))
        for lower_entries_ptr_value_f1_i := range entries[lower_entries_i].F1 {
          lower_entries_ptr_value_f1_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_entries_ptr_value_f1.ptr)) +
          uintptr(lower_entries_ptr_value_f1_i)*unsafe.Sizeof(empty_lower_entries_ptr_value_f1)))
          lower_entries_ptr_value_f1_ptr_value := C.uint8_t(entries[lower_entries_i].F1[lower_entries_ptr_value_f1_i])
          *lower_entries_ptr_value_f1_ptr = lower_entries_ptr_value_f1_ptr_value
        }
      }
      lower_entries_ptr_value.f1 = lower_entries_ptr_value_f1
      *lower_entries_ptr = lower_entries_ptr_value
    }
  }
  var ret C.wasi_http_0_2_0_types_result_own_fields_header_error_t
  C.wasi_http_0_2_0_types_static_fields_from_list(&lower_entries , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesFields, WasiHttp0_2_0_TypesHeaderError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_header_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesHeaderError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorInvalidSyntax()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorForbidden()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorImmutable()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_fields_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesFields
    lift_ret_val = WasiHttp0_2_0_TypesFields(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Get(name WasiHttp0_2_0_TypesFieldKey) [][]uint8 {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  var lower_name C.http_trigger_string_t
  var lower_name_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name_val.len = C.size_t(len(name))
  lower_name = lower_name_val
  var ret C.http_trigger_list_field_value_t
  C.wasi_http_0_2_0_types_method_fields_get(lower_self , &lower_name , &ret )
  var lift_ret [][]uint8
  lift_ret = make([][]uint8, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.wasi_http_0_2_0_types_field_value_t
      lift_ret_ptr := *(*C.wasi_http_0_2_0_types_field_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret []uint8
      list_lift_ret = make([]uint8, lift_ret_ptr.len)
      if lift_ret_ptr.len > 0 {
        for list_lift_ret_i := 0; list_lift_ret_i < int(lift_ret_ptr.len); list_lift_ret_i++ {
          var empty_list_lift_ret C.uint8_t
          list_lift_ret_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
          uintptr(list_lift_ret_i)*unsafe.Sizeof(empty_list_lift_ret)))
          var list_list_lift_ret uint8
          list_list_lift_ret = uint8(list_lift_ret_ptr)
          list_lift_ret[list_lift_ret_i] = list_list_lift_ret
        }
      }
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Has(name WasiHttp0_2_0_TypesFieldKey) bool {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  var lower_name C.http_trigger_string_t
  var lower_name_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name_val.len = C.size_t(len(name))
  lower_name = lower_name_val
  ret := C.wasi_http_0_2_0_types_method_fields_has(lower_self , &lower_name )
  lift_ret := ret
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Set(name WasiHttp0_2_0_TypesFieldKey, value [][]uint8) Result[struct{}, WasiHttp0_2_0_TypesHeaderError] {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  var lower_name C.http_trigger_string_t
  var lower_name_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name_val.len = C.size_t(len(name))
  lower_name = lower_name_val
  var lower_value C.http_trigger_list_field_value_t
  if len(value) == 0 {
    lower_value.ptr = nil
    lower_value.len = 0
  } else {
    var empty_lower_value C.wasi_http_0_2_0_types_field_value_t
    lower_value.ptr = (*C.wasi_http_0_2_0_types_field_value_t)(C.malloc(C.size_t(len(value)) * C.size_t(unsafe.Sizeof(empty_lower_value))))
    lower_value.len = C.size_t(len(value))
    for lower_value_i := range value {
      lower_value_ptr := (*C.wasi_http_0_2_0_types_field_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_value.ptr)) +
      uintptr(lower_value_i)*unsafe.Sizeof(empty_lower_value)))
      if len(value[lower_value_i]) == 0 {
        lower_value_ptr.ptr = nil
        lower_value_ptr.len = 0
      } else {
        var empty_lower_value_ptr C.uint8_t
        lower_value_ptr.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(value[lower_value_i])) * C.size_t(unsafe.Sizeof(empty_lower_value_ptr))))
        lower_value_ptr.len = C.size_t(len(value[lower_value_i]))
        for lower_value_ptr_i := range value[lower_value_i] {
          lower_value_ptr_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_value_ptr.ptr)) +
          uintptr(lower_value_ptr_i)*unsafe.Sizeof(empty_lower_value_ptr)))
          lower_value_ptr_ptr_value := C.uint8_t(value[lower_value_i][lower_value_ptr_i])
          *lower_value_ptr_ptr = lower_value_ptr_ptr_value
        }
      }
    }
  }
  var ret C.wasi_http_0_2_0_types_result_void_header_error_t
  C.wasi_http_0_2_0_types_method_fields_set(lower_self , &lower_name , &lower_value , &ret )
  var lift_ret Result[struct{}, WasiHttp0_2_0_TypesHeaderError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_header_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesHeaderError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorInvalidSyntax()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorForbidden()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorImmutable()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Delete(name WasiHttp0_2_0_TypesFieldKey) Result[struct{}, WasiHttp0_2_0_TypesHeaderError] {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  var lower_name C.http_trigger_string_t
  var lower_name_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name_val.len = C.size_t(len(name))
  lower_name = lower_name_val
  var ret C.wasi_http_0_2_0_types_result_void_header_error_t
  C.wasi_http_0_2_0_types_method_fields_delete(lower_self , &lower_name , &ret )
  var lift_ret Result[struct{}, WasiHttp0_2_0_TypesHeaderError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_header_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesHeaderError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorInvalidSyntax()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorForbidden()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorImmutable()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Append(name WasiHttp0_2_0_TypesFieldKey, value []uint8) Result[struct{}, WasiHttp0_2_0_TypesHeaderError] {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  var lower_name C.http_trigger_string_t
  var lower_name_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name_val.len = C.size_t(len(name))
  lower_name = lower_name_val
  var lower_value C.wasi_http_0_2_0_types_field_value_t
  if len(value) == 0 {
    lower_value.ptr = nil
    lower_value.len = 0
  } else {
    var empty_lower_value C.uint8_t
    lower_value.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(value)) * C.size_t(unsafe.Sizeof(empty_lower_value))))
    lower_value.len = C.size_t(len(value))
    for lower_value_i := range value {
      lower_value_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_value.ptr)) +
      uintptr(lower_value_i)*unsafe.Sizeof(empty_lower_value)))
      lower_value_ptr_value := C.uint8_t(value[lower_value_i])
      *lower_value_ptr = lower_value_ptr_value
    }
  }
  var ret C.wasi_http_0_2_0_types_result_void_header_error_t
  C.wasi_http_0_2_0_types_method_fields_append(lower_self , &lower_name , &lower_value , &ret )
  var lift_ret Result[struct{}, WasiHttp0_2_0_TypesHeaderError]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_header_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesHeaderError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorInvalidSyntax()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorForbidden()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = WasiHttp0_2_0_TypesHeaderErrorImmutable()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Entries() []WasiHttp0_2_0_TypesTuple2FieldKeyFieldValueT {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_list_tuple2_field_key_field_value_t
  C.wasi_http_0_2_0_types_method_fields_entries(lower_self , &ret )
  var lift_ret []WasiHttp0_2_0_TypesTuple2FieldKeyFieldValueT
  lift_ret = make([]WasiHttp0_2_0_TypesTuple2FieldKeyFieldValueT, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.http_trigger_tuple2_field_key_field_value_t
      lift_ret_ptr := *(*C.http_trigger_tuple2_field_key_field_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret WasiHttp0_2_0_TypesTuple2FieldKeyFieldValueT
      var list_lift_ret_F0 WasiHttp0_2_0_TypesFieldKey
      var list_lift_ret_F0_val string
      list_lift_ret_F0_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.f0.ptr)), C.int(lift_ret_ptr.f0.len))
      list_lift_ret_F0 = list_lift_ret_F0_val
      list_lift_ret.F0 = list_lift_ret_F0
      var list_lift_ret_F1 []uint8
      list_lift_ret_F1 = make([]uint8, lift_ret_ptr.f1.len)
      if lift_ret_ptr.f1.len > 0 {
        for list_lift_ret_F1_i := 0; list_lift_ret_F1_i < int(lift_ret_ptr.f1.len); list_lift_ret_F1_i++ {
          var empty_list_lift_ret_F1 C.uint8_t
          list_lift_ret_F1_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.f1.ptr)) +
          uintptr(list_lift_ret_F1_i)*unsafe.Sizeof(empty_list_lift_ret_F1)))
          var list_list_lift_ret_F1 uint8
          list_list_lift_ret_F1 = uint8(list_lift_ret_F1_ptr)
          list_lift_ret_F1[list_lift_ret_F1_i] = list_list_lift_ret_F1
        }
      }
      list_lift_ret.F1 = list_lift_ret_F1
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFields) Clone() WasiHttp0_2_0_TypesFields {
  var lower_self C.wasi_http_0_2_0_types_borrow_fields_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_fields_clone(lower_self )
  var lift_ret WasiHttp0_2_0_TypesFields
  lift_ret = WasiHttp0_2_0_TypesFields(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingRequest) Method() WasiHttp0_2_0_TypesMethod {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_method_t
  C.wasi_http_0_2_0_types_method_incoming_request_method(lower_self , &ret )
  var lift_ret WasiHttp0_2_0_TypesMethod
  if ret.tag == 0 {
    lift_ret = WasiHttp0_2_0_TypesMethodGet()
  }
  if ret.tag == 1 {
    lift_ret = WasiHttp0_2_0_TypesMethodHead()
  }
  if ret.tag == 2 {
    lift_ret = WasiHttp0_2_0_TypesMethodPost()
  }
  if ret.tag == 3 {
    lift_ret = WasiHttp0_2_0_TypesMethodPut()
  }
  if ret.tag == 4 {
    lift_ret = WasiHttp0_2_0_TypesMethodDelete()
  }
  if ret.tag == 5 {
    lift_ret = WasiHttp0_2_0_TypesMethodConnect()
  }
  if ret.tag == 6 {
    lift_ret = WasiHttp0_2_0_TypesMethodOptions()
  }
  if ret.tag == 7 {
    lift_ret = WasiHttp0_2_0_TypesMethodTrace()
  }
  if ret.tag == 8 {
    lift_ret = WasiHttp0_2_0_TypesMethodPatch()
  }
  if ret.tag == 9 {
    lift_ret_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.ptr)), C.int(lift_ret_ptr.len))
    lift_ret = WasiHttp0_2_0_TypesMethodOther(lift_ret_val)
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingRequest) PathWithQuery() Option[string] {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_string_t
  C.wasi_http_0_2_0_types_method_incoming_request_path_with_query(lower_self , &ret )
  var lift_ret Option[string]
  if ret.is_some {
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(ret.val.ptr)), C.int(ret.val.len))
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingRequest) Scheme() Option[WasiHttp0_2_0_TypesScheme] {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_option_scheme_t
  C.wasi_http_0_2_0_types_method_incoming_request_scheme(lower_self , &ret )
  var lift_ret Option[WasiHttp0_2_0_TypesScheme]
  if ret.is_some {
    var lift_ret_val WasiHttp0_2_0_TypesScheme
    if ret.val.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesSchemeHttp()
    }
    if ret.val.tag == 1 {
      lift_ret_val = WasiHttp0_2_0_TypesSchemeHttps()
    }
    if ret.val.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = WasiHttp0_2_0_TypesSchemeOther(lift_ret_val_val)
    }
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingRequest) Authority() Option[string] {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_string_t
  C.wasi_http_0_2_0_types_method_incoming_request_authority(lower_self , &ret )
  var lift_ret Option[string]
  if ret.is_some {
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(ret.val.ptr)), C.int(ret.val.len))
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingRequest) Headers() WasiHttp0_2_0_TypesHeaders {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_request_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_incoming_request_headers(lower_self )
  var lift_ret WasiHttp0_2_0_TypesHeaders
  lift_ret = WasiHttp0_2_0_TypesHeaders(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingRequest) Consume() Result[WasiHttp0_2_0_TypesIncomingBody, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_result_own_incoming_body_void_t
  C.wasi_http_0_2_0_types_method_incoming_request_consume(lower_self , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesIncomingBody, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_incoming_body_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesIncomingBody
    lift_ret_val = WasiHttp0_2_0_TypesIncomingBody(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func NewOutgoingRequest(headers WasiHttp0_2_0_TypesHeaders) WasiHttp0_2_0_TypesOutgoingRequest {
  var lower_headers C.wasi_http_0_2_0_types_own_headers_t
  lower_headers.__handle = C.int32_t(headers)
  ret := C.wasi_http_0_2_0_types_constructor_outgoing_request(lower_headers )
  var lift_ret WasiHttp0_2_0_TypesOutgoingRequest
  lift_ret = WasiHttp0_2_0_TypesOutgoingRequest(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) Body() Result[WasiHttp0_2_0_TypesOutgoingBody, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_result_own_outgoing_body_void_t
  C.wasi_http_0_2_0_types_method_outgoing_request_body(lower_self , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesOutgoingBody, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_outgoing_body_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesOutgoingBody
    lift_ret_val = WasiHttp0_2_0_TypesOutgoingBody(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) Method() WasiHttp0_2_0_TypesMethod {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_method_t
  C.wasi_http_0_2_0_types_method_outgoing_request_method(lower_self , &ret )
  var lift_ret WasiHttp0_2_0_TypesMethod
  if ret.tag == 0 {
    lift_ret = WasiHttp0_2_0_TypesMethodGet()
  }
  if ret.tag == 1 {
    lift_ret = WasiHttp0_2_0_TypesMethodHead()
  }
  if ret.tag == 2 {
    lift_ret = WasiHttp0_2_0_TypesMethodPost()
  }
  if ret.tag == 3 {
    lift_ret = WasiHttp0_2_0_TypesMethodPut()
  }
  if ret.tag == 4 {
    lift_ret = WasiHttp0_2_0_TypesMethodDelete()
  }
  if ret.tag == 5 {
    lift_ret = WasiHttp0_2_0_TypesMethodConnect()
  }
  if ret.tag == 6 {
    lift_ret = WasiHttp0_2_0_TypesMethodOptions()
  }
  if ret.tag == 7 {
    lift_ret = WasiHttp0_2_0_TypesMethodTrace()
  }
  if ret.tag == 8 {
    lift_ret = WasiHttp0_2_0_TypesMethodPatch()
  }
  if ret.tag == 9 {
    lift_ret_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.ptr)), C.int(lift_ret_ptr.len))
    lift_ret = WasiHttp0_2_0_TypesMethodOther(lift_ret_val)
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) SetMethod(method WasiHttp0_2_0_TypesMethod) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var lower_method C.wasi_http_0_2_0_types_method_t
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindGet {
    lower_method.tag = 0
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindHead {
    lower_method.tag = 1
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindPost {
    lower_method.tag = 2
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindPut {
    lower_method.tag = 3
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindDelete {
    lower_method.tag = 4
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindConnect {
    lower_method.tag = 5
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindOptions {
    lower_method.tag = 6
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindTrace {
    lower_method.tag = 7
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindPatch {
    lower_method.tag = 8
  }
  if method.Kind() == WasiHttp0_2_0_TypesMethodKindOther {

    lower_method.tag = 9
    lower_method_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_method.val))
    var lower_method_val C.http_trigger_string_t

    // use unsafe.Pointer to avoid copy
    lower_method_val.ptr = (*uint8)(unsafe.Pointer(C.CString(method.GetOther())))
    lower_method_val.len = C.size_t(len(method.GetOther()))
    *lower_method_ptr = lower_method_val
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_outgoing_request_set_method(lower_self , &lower_method , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) PathWithQuery() Option[string] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_string_t
  C.wasi_http_0_2_0_types_method_outgoing_request_path_with_query(lower_self , &ret )
  var lift_ret Option[string]
  if ret.is_some {
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(ret.val.ptr)), C.int(ret.val.len))
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) SetPathWithQuery(path_with_query Option[string]) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var lower_path_with_query C.http_trigger_option_string_t
  if path_with_query.IsSome() {
    var lower_path_with_query_val C.http_trigger_string_t

    // use unsafe.Pointer to avoid copy
    lower_path_with_query_val.ptr = (*uint8)(unsafe.Pointer(C.CString(path_with_query.Unwrap())))
    lower_path_with_query_val.len = C.size_t(len(path_with_query.Unwrap()))
    lower_path_with_query.val = lower_path_with_query_val
    lower_path_with_query.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_outgoing_request_set_path_with_query(lower_self , &lower_path_with_query , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) Scheme() Option[WasiHttp0_2_0_TypesScheme] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_option_scheme_t
  C.wasi_http_0_2_0_types_method_outgoing_request_scheme(lower_self , &ret )
  var lift_ret Option[WasiHttp0_2_0_TypesScheme]
  if ret.is_some {
    var lift_ret_val WasiHttp0_2_0_TypesScheme
    if ret.val.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesSchemeHttp()
    }
    if ret.val.tag == 1 {
      lift_ret_val = WasiHttp0_2_0_TypesSchemeHttps()
    }
    if ret.val.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = WasiHttp0_2_0_TypesSchemeOther(lift_ret_val_val)
    }
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) SetScheme(scheme Option[WasiHttp0_2_0_TypesScheme]) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var lower_scheme C.wasi_http_0_2_0_types_option_scheme_t
  if scheme.IsSome() {
    var lower_scheme_val C.wasi_http_0_2_0_types_scheme_t
    if scheme.Unwrap().Kind() == WasiHttp0_2_0_TypesSchemeKindHttp {
      lower_scheme_val.tag = 0
    }
    if scheme.Unwrap().Kind() == WasiHttp0_2_0_TypesSchemeKindHttps {
      lower_scheme_val.tag = 1
    }
    if scheme.Unwrap().Kind() == WasiHttp0_2_0_TypesSchemeKindOther {

      lower_scheme_val.tag = 2
      lower_scheme_val_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_scheme_val.val))
      var lower_scheme_val_val C.http_trigger_string_t

      // use unsafe.Pointer to avoid copy
      lower_scheme_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(scheme.Unwrap().GetOther())))
      lower_scheme_val_val.len = C.size_t(len(scheme.Unwrap().GetOther()))
      *lower_scheme_val_ptr = lower_scheme_val_val
    }
    lower_scheme.val = lower_scheme_val
    lower_scheme.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_outgoing_request_set_scheme(lower_self , &lower_scheme , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) Authority() Option[string] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_string_t
  C.wasi_http_0_2_0_types_method_outgoing_request_authority(lower_self , &ret )
  var lift_ret Option[string]
  if ret.is_some {
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(ret.val.ptr)), C.int(ret.val.len))
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) SetAuthority(authority Option[string]) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  var lower_authority C.http_trigger_option_string_t
  if authority.IsSome() {
    var lower_authority_val C.http_trigger_string_t

    // use unsafe.Pointer to avoid copy
    lower_authority_val.ptr = (*uint8)(unsafe.Pointer(C.CString(authority.Unwrap())))
    lower_authority_val.len = C.size_t(len(authority.Unwrap()))
    lower_authority.val = lower_authority_val
    lower_authority.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_outgoing_request_set_authority(lower_self , &lower_authority , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingRequest) Headers() WasiHttp0_2_0_TypesHeaders {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_request_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_outgoing_request_headers(lower_self )
  var lift_ret WasiHttp0_2_0_TypesHeaders
  lift_ret = WasiHttp0_2_0_TypesHeaders(ret.__handle)

  return lift_ret
}

func NewRequestOptions() WasiHttp0_2_0_TypesRequestOptions {
  ret := C.wasi_http_0_2_0_types_constructor_request_options()
  var lift_ret WasiHttp0_2_0_TypesRequestOptions
  lift_ret = WasiHttp0_2_0_TypesRequestOptions(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesRequestOptions) ConnectTimeout() Option[WasiHttp0_2_0_TypesDuration] {
  var lower_self C.wasi_http_0_2_0_types_borrow_request_options_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_duration_t
  C.wasi_http_0_2_0_types_method_request_options_connect_timeout(lower_self , &ret )
  var lift_ret Option[WasiHttp0_2_0_TypesDuration]
  if ret.is_some {
    var lift_ret_val WasiHttp0_2_0_TypesDuration
    var lift_ret_val_val WasiClocks0_2_0_MonotonicClockDuration
    var lift_ret_val_val_val uint64
    lift_ret_val_val_val = uint64(ret.val)
    lift_ret_val_val = lift_ret_val_val_val
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesRequestOptions) SetConnectTimeout(duration Option[WasiHttp0_2_0_TypesDuration]) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_request_options_t
  lower_self.__handle = C.int32_t(self)
  var lower_duration C.http_trigger_option_duration_t
  if duration.IsSome() {
    var lower_duration_val C.wasi_clocks_0_2_0_monotonic_clock_duration_t
    var lower_duration_val_val C.uint64_t
    lower_duration_val_val_val := C.uint64_t(duration.Unwrap())
    lower_duration_val_val = lower_duration_val_val_val
    lower_duration_val = lower_duration_val_val
    lower_duration.val = lower_duration_val
    lower_duration.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_request_options_set_connect_timeout(lower_self , &lower_duration , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesRequestOptions) FirstByteTimeout() Option[WasiHttp0_2_0_TypesDuration] {
  var lower_self C.wasi_http_0_2_0_types_borrow_request_options_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_duration_t
  C.wasi_http_0_2_0_types_method_request_options_first_byte_timeout(lower_self , &ret )
  var lift_ret Option[WasiHttp0_2_0_TypesDuration]
  if ret.is_some {
    var lift_ret_val WasiHttp0_2_0_TypesDuration
    var lift_ret_val_val WasiClocks0_2_0_MonotonicClockDuration
    var lift_ret_val_val_val uint64
    lift_ret_val_val_val = uint64(ret.val)
    lift_ret_val_val = lift_ret_val_val_val
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesRequestOptions) SetFirstByteTimeout(duration Option[WasiHttp0_2_0_TypesDuration]) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_request_options_t
  lower_self.__handle = C.int32_t(self)
  var lower_duration C.http_trigger_option_duration_t
  if duration.IsSome() {
    var lower_duration_val C.wasi_clocks_0_2_0_monotonic_clock_duration_t
    var lower_duration_val_val C.uint64_t
    lower_duration_val_val_val := C.uint64_t(duration.Unwrap())
    lower_duration_val_val = lower_duration_val_val_val
    lower_duration_val = lower_duration_val_val
    lower_duration.val = lower_duration_val
    lower_duration.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_request_options_set_first_byte_timeout(lower_self , &lower_duration , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesRequestOptions) BetweenBytesTimeout() Option[WasiHttp0_2_0_TypesDuration] {
  var lower_self C.wasi_http_0_2_0_types_borrow_request_options_t
  lower_self.__handle = C.int32_t(self)
  var ret C.http_trigger_option_duration_t
  C.wasi_http_0_2_0_types_method_request_options_between_bytes_timeout(lower_self , &ret )
  var lift_ret Option[WasiHttp0_2_0_TypesDuration]
  if ret.is_some {
    var lift_ret_val WasiHttp0_2_0_TypesDuration
    var lift_ret_val_val WasiClocks0_2_0_MonotonicClockDuration
    var lift_ret_val_val_val uint64
    lift_ret_val_val_val = uint64(ret.val)
    lift_ret_val_val = lift_ret_val_val_val
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesRequestOptions) SetBetweenBytesTimeout(duration Option[WasiHttp0_2_0_TypesDuration]) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_request_options_t
  lower_self.__handle = C.int32_t(self)
  var lower_duration C.http_trigger_option_duration_t
  if duration.IsSome() {
    var lower_duration_val C.wasi_clocks_0_2_0_monotonic_clock_duration_t
    var lower_duration_val_val C.uint64_t
    lower_duration_val_val_val := C.uint64_t(duration.Unwrap())
    lower_duration_val_val = lower_duration_val_val_val
    lower_duration_val = lower_duration_val_val
    lower_duration.val = lower_duration_val
    lower_duration.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_request_options_set_between_bytes_timeout(lower_self , &lower_duration , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func StaticResponseOutparamSet(param WasiHttp0_2_0_TypesResponseOutparam, response Result[WasiHttp0_2_0_TypesOutgoingResponse, WasiHttp0_2_0_TypesErrorCode]) {
  var lower_param C.wasi_http_0_2_0_types_own_response_outparam_t
  lower_param.__handle = C.int32_t(param)
  var lower_response C.wasi_http_0_2_0_types_result_own_outgoing_response_error_code_t
  lower_response.is_err = response.IsErr()
  if response.IsOk() {
    lower_response_ptr := (*C.wasi_http_0_2_0_types_own_outgoing_response_t)(unsafe.Pointer(&lower_response.val))
    var lower_response_val C.wasi_http_0_2_0_types_own_outgoing_response_t
    lower_response_val.__handle = C.int32_t(response.Unwrap())
    *lower_response_ptr = lower_response_val
  } else {
    lower_response_ptr := (*C.wasi_http_0_2_0_types_error_code_t)(unsafe.Pointer(&lower_response.val))
    var lower_response_val C.wasi_http_0_2_0_types_error_code_t
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindDnsTimeout {
      lower_response_val.tag = 0
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindDnsError {

      lower_response_val.tag = 1
      lower_response_val_ptr := (*C.wasi_http_0_2_0_types_dns_error_payload_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.wasi_http_0_2_0_types_dns_error_payload_t
      var lower_response_val_val_rcode C.http_trigger_option_string_t
      if response.UnwrapErr().GetDnsError().Rcode.IsSome() {
        var lower_response_val_val_rcode_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_rcode_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetDnsError().Rcode.Unwrap())))
        lower_response_val_val_rcode_val.len = C.size_t(len(response.UnwrapErr().GetDnsError().Rcode.Unwrap()))
        lower_response_val_val_rcode.val = lower_response_val_val_rcode_val
        lower_response_val_val_rcode.is_some = true
      }
      lower_response_val_val.rcode = lower_response_val_val_rcode
      var lower_response_val_val_info_code C.http_trigger_option_u16_t
      if response.UnwrapErr().GetDnsError().InfoCode.IsSome() {
        lower_response_val_val_info_code_val := C.uint16_t(response.UnwrapErr().GetDnsError().InfoCode.Unwrap())
        lower_response_val_val_info_code.val = lower_response_val_val_info_code_val
        lower_response_val_val_info_code.is_some = true
      }
      lower_response_val_val.info_code = lower_response_val_val_info_code
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindDestinationNotFound {
      lower_response_val.tag = 2
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindDestinationUnavailable {
      lower_response_val.tag = 3
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindDestinationIpProhibited {
      lower_response_val.tag = 4
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindDestinationIpUnroutable {
      lower_response_val.tag = 5
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConnectionRefused {
      lower_response_val.tag = 6
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConnectionTerminated {
      lower_response_val.tag = 7
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConnectionTimeout {
      lower_response_val.tag = 8
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConnectionReadTimeout {
      lower_response_val.tag = 9
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConnectionWriteTimeout {
      lower_response_val.tag = 10
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConnectionLimitReached {
      lower_response_val.tag = 11
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindTlsProtocolError {
      lower_response_val.tag = 12
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindTlsCertificateError {
      lower_response_val.tag = 13
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindTlsAlertReceived {

      lower_response_val.tag = 14
      lower_response_val_ptr := (*C.wasi_http_0_2_0_types_tls_alert_received_payload_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.wasi_http_0_2_0_types_tls_alert_received_payload_t
      var lower_response_val_val_alert_id C.http_trigger_option_u8_t
      if response.UnwrapErr().GetTlsAlertReceived().AlertId.IsSome() {
        lower_response_val_val_alert_id_val := C.uint8_t(response.UnwrapErr().GetTlsAlertReceived().AlertId.Unwrap())
        lower_response_val_val_alert_id.val = lower_response_val_val_alert_id_val
        lower_response_val_val_alert_id.is_some = true
      }
      lower_response_val_val.alert_id = lower_response_val_val_alert_id
      var lower_response_val_val_alert_message C.http_trigger_option_string_t
      if response.UnwrapErr().GetTlsAlertReceived().AlertMessage.IsSome() {
        var lower_response_val_val_alert_message_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_alert_message_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetTlsAlertReceived().AlertMessage.Unwrap())))
        lower_response_val_val_alert_message_val.len = C.size_t(len(response.UnwrapErr().GetTlsAlertReceived().AlertMessage.Unwrap()))
        lower_response_val_val_alert_message.val = lower_response_val_val_alert_message_val
        lower_response_val_val_alert_message.is_some = true
      }
      lower_response_val_val.alert_message = lower_response_val_val_alert_message
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestDenied {
      lower_response_val.tag = 15
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestLengthRequired {
      lower_response_val.tag = 16
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestBodySize {

      lower_response_val.tag = 17
      lower_response_val_ptr := (*C.http_trigger_option_u64_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_u64_t
      if response.UnwrapErr().GetHttpRequestBodySize().IsSome() {
        lower_response_val_val_val := C.uint64_t(response.UnwrapErr().GetHttpRequestBodySize().Unwrap())
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestMethodInvalid {
      lower_response_val.tag = 18
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestUriInvalid {
      lower_response_val.tag = 19
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestUriTooLong {
      lower_response_val.tag = 20
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSectionSize {

      lower_response_val.tag = 21
      lower_response_val_ptr := (*C.http_trigger_option_u32_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpRequestHeaderSectionSize().IsSome() {
        lower_response_val_val_val := C.uint32_t(response.UnwrapErr().GetHttpRequestHeaderSectionSize().Unwrap())
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestHeaderSize {

      lower_response_val.tag = 22
      lower_response_val_ptr := (*C.wasi_http_0_2_0_types_option_field_size_payload_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.wasi_http_0_2_0_types_option_field_size_payload_t
      if response.UnwrapErr().GetHttpRequestHeaderSize().IsSome() {
        var lower_response_val_val_val C.wasi_http_0_2_0_types_field_size_payload_t
        var lower_response_val_val_val_field_name C.http_trigger_option_string_t
        if response.UnwrapErr().GetHttpRequestHeaderSize().Unwrap().FieldName.IsSome() {
          var lower_response_val_val_val_field_name_val C.http_trigger_string_t

          // use unsafe.Pointer to avoid copy
          lower_response_val_val_val_field_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetHttpRequestHeaderSize().Unwrap().FieldName.Unwrap())))
          lower_response_val_val_val_field_name_val.len = C.size_t(len(response.UnwrapErr().GetHttpRequestHeaderSize().Unwrap().FieldName.Unwrap()))
          lower_response_val_val_val_field_name.val = lower_response_val_val_val_field_name_val
          lower_response_val_val_val_field_name.is_some = true
        }
        lower_response_val_val_val.field_name = lower_response_val_val_val_field_name
        var lower_response_val_val_val_field_size C.http_trigger_option_u32_t
        if response.UnwrapErr().GetHttpRequestHeaderSize().Unwrap().FieldSize.IsSome() {
          lower_response_val_val_val_field_size_val := C.uint32_t(response.UnwrapErr().GetHttpRequestHeaderSize().Unwrap().FieldSize.Unwrap())
          lower_response_val_val_val_field_size.val = lower_response_val_val_val_field_size_val
          lower_response_val_val_val_field_size.is_some = true
        }
        lower_response_val_val_val.field_size = lower_response_val_val_val_field_size
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSectionSize {

      lower_response_val.tag = 23
      lower_response_val_ptr := (*C.http_trigger_option_u32_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpRequestTrailerSectionSize().IsSome() {
        lower_response_val_val_val := C.uint32_t(response.UnwrapErr().GetHttpRequestTrailerSectionSize().Unwrap())
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpRequestTrailerSize {

      lower_response_val.tag = 24
      lower_response_val_ptr := (*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.wasi_http_0_2_0_types_field_size_payload_t
      var lower_response_val_val_field_name C.http_trigger_option_string_t
      if response.UnwrapErr().GetHttpRequestTrailerSize().FieldName.IsSome() {
        var lower_response_val_val_field_name_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_field_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetHttpRequestTrailerSize().FieldName.Unwrap())))
        lower_response_val_val_field_name_val.len = C.size_t(len(response.UnwrapErr().GetHttpRequestTrailerSize().FieldName.Unwrap()))
        lower_response_val_val_field_name.val = lower_response_val_val_field_name_val
        lower_response_val_val_field_name.is_some = true
      }
      lower_response_val_val.field_name = lower_response_val_val_field_name
      var lower_response_val_val_field_size C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpRequestTrailerSize().FieldSize.IsSome() {
        lower_response_val_val_field_size_val := C.uint32_t(response.UnwrapErr().GetHttpRequestTrailerSize().FieldSize.Unwrap())
        lower_response_val_val_field_size.val = lower_response_val_val_field_size_val
        lower_response_val_val_field_size.is_some = true
      }
      lower_response_val_val.field_size = lower_response_val_val_field_size
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseIncomplete {
      lower_response_val.tag = 25
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSectionSize {

      lower_response_val.tag = 26
      lower_response_val_ptr := (*C.http_trigger_option_u32_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpResponseHeaderSectionSize().IsSome() {
        lower_response_val_val_val := C.uint32_t(response.UnwrapErr().GetHttpResponseHeaderSectionSize().Unwrap())
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseHeaderSize {

      lower_response_val.tag = 27
      lower_response_val_ptr := (*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.wasi_http_0_2_0_types_field_size_payload_t
      var lower_response_val_val_field_name C.http_trigger_option_string_t
      if response.UnwrapErr().GetHttpResponseHeaderSize().FieldName.IsSome() {
        var lower_response_val_val_field_name_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_field_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetHttpResponseHeaderSize().FieldName.Unwrap())))
        lower_response_val_val_field_name_val.len = C.size_t(len(response.UnwrapErr().GetHttpResponseHeaderSize().FieldName.Unwrap()))
        lower_response_val_val_field_name.val = lower_response_val_val_field_name_val
        lower_response_val_val_field_name.is_some = true
      }
      lower_response_val_val.field_name = lower_response_val_val_field_name
      var lower_response_val_val_field_size C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpResponseHeaderSize().FieldSize.IsSome() {
        lower_response_val_val_field_size_val := C.uint32_t(response.UnwrapErr().GetHttpResponseHeaderSize().FieldSize.Unwrap())
        lower_response_val_val_field_size.val = lower_response_val_val_field_size_val
        lower_response_val_val_field_size.is_some = true
      }
      lower_response_val_val.field_size = lower_response_val_val_field_size
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseBodySize {

      lower_response_val.tag = 28
      lower_response_val_ptr := (*C.http_trigger_option_u64_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_u64_t
      if response.UnwrapErr().GetHttpResponseBodySize().IsSome() {
        lower_response_val_val_val := C.uint64_t(response.UnwrapErr().GetHttpResponseBodySize().Unwrap())
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSectionSize {

      lower_response_val.tag = 29
      lower_response_val_ptr := (*C.http_trigger_option_u32_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpResponseTrailerSectionSize().IsSome() {
        lower_response_val_val_val := C.uint32_t(response.UnwrapErr().GetHttpResponseTrailerSectionSize().Unwrap())
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTrailerSize {

      lower_response_val.tag = 30
      lower_response_val_ptr := (*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.wasi_http_0_2_0_types_field_size_payload_t
      var lower_response_val_val_field_name C.http_trigger_option_string_t
      if response.UnwrapErr().GetHttpResponseTrailerSize().FieldName.IsSome() {
        var lower_response_val_val_field_name_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_field_name_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetHttpResponseTrailerSize().FieldName.Unwrap())))
        lower_response_val_val_field_name_val.len = C.size_t(len(response.UnwrapErr().GetHttpResponseTrailerSize().FieldName.Unwrap()))
        lower_response_val_val_field_name.val = lower_response_val_val_field_name_val
        lower_response_val_val_field_name.is_some = true
      }
      lower_response_val_val.field_name = lower_response_val_val_field_name
      var lower_response_val_val_field_size C.http_trigger_option_u32_t
      if response.UnwrapErr().GetHttpResponseTrailerSize().FieldSize.IsSome() {
        lower_response_val_val_field_size_val := C.uint32_t(response.UnwrapErr().GetHttpResponseTrailerSize().FieldSize.Unwrap())
        lower_response_val_val_field_size.val = lower_response_val_val_field_size_val
        lower_response_val_val_field_size.is_some = true
      }
      lower_response_val_val.field_size = lower_response_val_val_field_size
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTransferCoding {

      lower_response_val.tag = 31
      lower_response_val_ptr := (*C.http_trigger_option_string_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_string_t
      if response.UnwrapErr().GetHttpResponseTransferCoding().IsSome() {
        var lower_response_val_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetHttpResponseTransferCoding().Unwrap())))
        lower_response_val_val_val.len = C.size_t(len(response.UnwrapErr().GetHttpResponseTransferCoding().Unwrap()))
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseContentCoding {

      lower_response_val.tag = 32
      lower_response_val_ptr := (*C.http_trigger_option_string_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_string_t
      if response.UnwrapErr().GetHttpResponseContentCoding().IsSome() {
        var lower_response_val_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetHttpResponseContentCoding().Unwrap())))
        lower_response_val_val_val.len = C.size_t(len(response.UnwrapErr().GetHttpResponseContentCoding().Unwrap()))
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpResponseTimeout {
      lower_response_val.tag = 33
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpUpgradeFailed {
      lower_response_val.tag = 34
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindHttpProtocolError {
      lower_response_val.tag = 35
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindLoopDetected {
      lower_response_val.tag = 36
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindConfigurationError {
      lower_response_val.tag = 37
    }
    if response.UnwrapErr().Kind() == WasiHttp0_2_0_TypesErrorCodeKindInternalError {

      lower_response_val.tag = 38
      lower_response_val_ptr := (*C.http_trigger_option_string_t)(unsafe.Pointer(&lower_response_val.val))
      var lower_response_val_val C.http_trigger_option_string_t
      if response.UnwrapErr().GetInternalError().IsSome() {
        var lower_response_val_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_response_val_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(response.UnwrapErr().GetInternalError().Unwrap())))
        lower_response_val_val_val.len = C.size_t(len(response.UnwrapErr().GetInternalError().Unwrap()))
        lower_response_val_val.val = lower_response_val_val_val
        lower_response_val_val.is_some = true
      }
      *lower_response_val_ptr = lower_response_val_val
    }
    *lower_response_ptr = lower_response_val
  }
  C.wasi_http_0_2_0_types_static_response_outparam_set(lower_param , &lower_response )
}

func (self WasiHttp0_2_0_TypesIncomingResponse) Status() WasiHttp0_2_0_TypesStatusCode {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_response_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_incoming_response_status(lower_self )
  var lift_ret WasiHttp0_2_0_TypesStatusCode
  var lift_ret_val uint16
  lift_ret_val = uint16(ret)
  lift_ret = lift_ret_val
  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingResponse) Headers() WasiHttp0_2_0_TypesHeaders {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_response_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_incoming_response_headers(lower_self )
  var lift_ret WasiHttp0_2_0_TypesHeaders
  lift_ret = WasiHttp0_2_0_TypesHeaders(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingResponse) Consume() Result[WasiHttp0_2_0_TypesIncomingBody, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_response_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_result_own_incoming_body_void_t
  C.wasi_http_0_2_0_types_method_incoming_response_consume(lower_self , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesIncomingBody, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_incoming_body_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesIncomingBody
    lift_ret_val = WasiHttp0_2_0_TypesIncomingBody(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesIncomingBody) Stream() Result[WasiHttp0_2_0_TypesInputStream, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_incoming_body_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_result_own_input_stream_void_t
  C.wasi_http_0_2_0_types_method_incoming_body_stream(lower_self , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesInputStream, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_input_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesInputStream
    lift_ret_val = WasiHttp0_2_0_TypesInputStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func StaticIncomingBodyFinish(this WasiHttp0_2_0_TypesIncomingBody) WasiHttp0_2_0_TypesFutureTrailers {
  var lower_this C.wasi_http_0_2_0_types_own_incoming_body_t
  lower_this.__handle = C.int32_t(this)
  ret := C.wasi_http_0_2_0_types_static_incoming_body_finish(lower_this )
  var lift_ret WasiHttp0_2_0_TypesFutureTrailers
  lift_ret = WasiHttp0_2_0_TypesFutureTrailers(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesFutureTrailers) Subscribe() WasiHttp0_2_0_TypesPollable {
  var lower_self C.wasi_http_0_2_0_types_borrow_future_trailers_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_future_trailers_subscribe(lower_self )
  var lift_ret WasiHttp0_2_0_TypesPollable
  lift_ret = WasiHttp0_2_0_TypesPollable(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesFutureTrailers) Get() Option[Result[Result[Option[WasiHttp0_2_0_TypesTrailers], WasiHttp0_2_0_TypesErrorCode], struct{}]] {
  var lower_self C.wasi_http_0_2_0_types_borrow_future_trailers_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_option_result_result_option_own_trailers_error_code_void_t
  C.wasi_http_0_2_0_types_method_future_trailers_get(lower_self , &ret )
  var lift_ret Option[Result[Result[Option[WasiHttp0_2_0_TypesTrailers], WasiHttp0_2_0_TypesErrorCode], struct{}]]
  if ret.is_some {
    var lift_ret_val Result[Result[Option[WasiHttp0_2_0_TypesTrailers], WasiHttp0_2_0_TypesErrorCode], struct{}]
    if ret.val.is_err {
      lift_ret_val.SetErr(struct{}{})
    } else {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_result_option_own_trailers_error_code_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Result[Option[WasiHttp0_2_0_TypesTrailers], WasiHttp0_2_0_TypesErrorCode]
      if lift_ret_val_ptr.is_err {
        lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_error_code_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
        var lift_ret_val_val_val WasiHttp0_2_0_TypesErrorCode
        if lift_ret_val_val_ptr.tag == 0 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDnsTimeout()
        }
        if lift_ret_val_val_ptr.tag == 1 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_dns_error_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesDnsErrorPayload
          var lift_ret_val_val_val_val_Rcode Option[string]
          if lift_ret_val_val_val_ptr.rcode.is_some {
            var lift_ret_val_val_val_val_Rcode_val string
            lift_ret_val_val_val_val_Rcode_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.rcode.val.ptr)), C.int(lift_ret_val_val_val_ptr.rcode.val.len))
            lift_ret_val_val_val_val_Rcode.Set(lift_ret_val_val_val_val_Rcode_val)
          } else {
            lift_ret_val_val_val_val_Rcode.Unset()
          }
          lift_ret_val_val_val_val.Rcode = lift_ret_val_val_val_val_Rcode
          var lift_ret_val_val_val_val_InfoCode Option[uint16]
          if lift_ret_val_val_val_ptr.info_code.is_some {
            var lift_ret_val_val_val_val_InfoCode_val uint16
            lift_ret_val_val_val_val_InfoCode_val = uint16(lift_ret_val_val_val_ptr.info_code.val)
            lift_ret_val_val_val_val_InfoCode.Set(lift_ret_val_val_val_val_InfoCode_val)
          } else {
            lift_ret_val_val_val_val_InfoCode.Unset()
          }
          lift_ret_val_val_val_val.InfoCode = lift_ret_val_val_val_val_InfoCode
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDnsError(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 2 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationNotFound()
        }
        if lift_ret_val_val_ptr.tag == 3 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationUnavailable()
        }
        if lift_ret_val_val_ptr.tag == 4 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpProhibited()
        }
        if lift_ret_val_val_ptr.tag == 5 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpUnroutable()
        }
        if lift_ret_val_val_ptr.tag == 6 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionRefused()
        }
        if lift_ret_val_val_ptr.tag == 7 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionTerminated()
        }
        if lift_ret_val_val_ptr.tag == 8 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionTimeout()
        }
        if lift_ret_val_val_ptr.tag == 9 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionReadTimeout()
        }
        if lift_ret_val_val_ptr.tag == 10 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionWriteTimeout()
        }
        if lift_ret_val_val_ptr.tag == 11 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionLimitReached()
        }
        if lift_ret_val_val_ptr.tag == 12 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeTlsProtocolError()
        }
        if lift_ret_val_val_ptr.tag == 13 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeTlsCertificateError()
        }
        if lift_ret_val_val_ptr.tag == 14 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_tls_alert_received_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesTlsAlertReceivedPayload
          var lift_ret_val_val_val_val_AlertId Option[uint8]
          if lift_ret_val_val_val_ptr.alert_id.is_some {
            var lift_ret_val_val_val_val_AlertId_val uint8
            lift_ret_val_val_val_val_AlertId_val = uint8(lift_ret_val_val_val_ptr.alert_id.val)
            lift_ret_val_val_val_val_AlertId.Set(lift_ret_val_val_val_val_AlertId_val)
          } else {
            lift_ret_val_val_val_val_AlertId.Unset()
          }
          lift_ret_val_val_val_val.AlertId = lift_ret_val_val_val_val_AlertId
          var lift_ret_val_val_val_val_AlertMessage Option[string]
          if lift_ret_val_val_val_ptr.alert_message.is_some {
            var lift_ret_val_val_val_val_AlertMessage_val string
            lift_ret_val_val_val_val_AlertMessage_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.alert_message.val.ptr)), C.int(lift_ret_val_val_val_ptr.alert_message.val.len))
            lift_ret_val_val_val_val_AlertMessage.Set(lift_ret_val_val_val_val_AlertMessage_val)
          } else {
            lift_ret_val_val_val_val_AlertMessage.Unset()
          }
          lift_ret_val_val_val_val.AlertMessage = lift_ret_val_val_val_val_AlertMessage
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeTlsAlertReceived(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 15 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestDenied()
        }
        if lift_ret_val_val_ptr.tag == 16 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestLengthRequired()
        }
        if lift_ret_val_val_ptr.tag == 17 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint64]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint64
            lift_ret_val_val_val_val_val = uint64(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestBodySize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 18 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestMethodInvalid()
        }
        if lift_ret_val_val_ptr.tag == 19 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriInvalid()
        }
        if lift_ret_val_val_ptr.tag == 20 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriTooLong()
        }
        if lift_ret_val_val_ptr.tag == 21 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 22 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_option_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[WasiHttp0_2_0_TypesFieldSizePayload]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
            var lift_ret_val_val_val_val_val_FieldName Option[string]
            if lift_ret_val_val_val_ptr.val.field_name.is_some {
              var lift_ret_val_val_val_val_val_FieldName_val string
              lift_ret_val_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.field_name.val.len))
              lift_ret_val_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_val_FieldName_val)
            } else {
              lift_ret_val_val_val_val_val_FieldName.Unset()
            }
            lift_ret_val_val_val_val_val.FieldName = lift_ret_val_val_val_val_val_FieldName
            var lift_ret_val_val_val_val_val_FieldSize Option[uint32]
            if lift_ret_val_val_val_ptr.val.field_size.is_some {
              var lift_ret_val_val_val_val_val_FieldSize_val uint32
              lift_ret_val_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.val.field_size.val)
              lift_ret_val_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_val_FieldSize_val)
            } else {
              lift_ret_val_val_val_val_val_FieldSize.Unset()
            }
            lift_ret_val_val_val_val_val.FieldSize = lift_ret_val_val_val_val_val_FieldSize
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 23 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 24 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
          var lift_ret_val_val_val_val_FieldName Option[string]
          if lift_ret_val_val_val_ptr.field_name.is_some {
            var lift_ret_val_val_val_val_FieldName_val string
            lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.field_name.val.len))
            lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
          } else {
            lift_ret_val_val_val_val_FieldName.Unset()
          }
          lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
          var lift_ret_val_val_val_val_FieldSize Option[uint32]
          if lift_ret_val_val_val_ptr.field_size.is_some {
            var lift_ret_val_val_val_val_FieldSize_val uint32
            lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.field_size.val)
            lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
          } else {
            lift_ret_val_val_val_val_FieldSize.Unset()
          }
          lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 25 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseIncomplete()
        }
        if lift_ret_val_val_ptr.tag == 26 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 27 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
          var lift_ret_val_val_val_val_FieldName Option[string]
          if lift_ret_val_val_val_ptr.field_name.is_some {
            var lift_ret_val_val_val_val_FieldName_val string
            lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.field_name.val.len))
            lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
          } else {
            lift_ret_val_val_val_val_FieldName.Unset()
          }
          lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
          var lift_ret_val_val_val_val_FieldSize Option[uint32]
          if lift_ret_val_val_val_ptr.field_size.is_some {
            var lift_ret_val_val_val_val_FieldSize_val uint32
            lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.field_size.val)
            lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
          } else {
            lift_ret_val_val_val_val_FieldSize.Unset()
          }
          lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 28 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint64]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint64
            lift_ret_val_val_val_val_val = uint64(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseBodySize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 29 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 30 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
          var lift_ret_val_val_val_val_FieldName Option[string]
          if lift_ret_val_val_val_ptr.field_name.is_some {
            var lift_ret_val_val_val_val_FieldName_val string
            lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.field_name.val.len))
            lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
          } else {
            lift_ret_val_val_val_val_FieldName.Unset()
          }
          lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
          var lift_ret_val_val_val_val_FieldSize Option[uint32]
          if lift_ret_val_val_val_ptr.field_size.is_some {
            var lift_ret_val_val_val_val_FieldSize_val uint32
            lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.field_size.val)
            lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
          } else {
            lift_ret_val_val_val_val_FieldSize.Unset()
          }
          lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 31 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[string]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val string
            lift_ret_val_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.len))
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTransferCoding(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 32 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[string]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val string
            lift_ret_val_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.len))
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseContentCoding(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 33 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTimeout()
        }
        if lift_ret_val_val_ptr.tag == 34 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpUpgradeFailed()
        }
        if lift_ret_val_val_ptr.tag == 35 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpProtocolError()
        }
        if lift_ret_val_val_ptr.tag == 36 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeLoopDetected()
        }
        if lift_ret_val_val_ptr.tag == 37 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConfigurationError()
        }
        if lift_ret_val_val_ptr.tag == 38 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[string]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val string
            lift_ret_val_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.len))
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeInternalError(lift_ret_val_val_val_val)
        }
        lift_ret_val_val.SetErr(lift_ret_val_val_val)
      } else {
        lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_option_own_trailers_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
        var lift_ret_val_val_val Option[WasiHttp0_2_0_TypesTrailers]
        if lift_ret_val_val_ptr.is_some {
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesTrailers
          lift_ret_val_val_val_val = WasiHttp0_2_0_TypesTrailers(lift_ret_val_val_ptr.val.__handle)
          
          lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
        } else {
          lift_ret_val_val_val.Unset()
        }
        lift_ret_val_val.Set(lift_ret_val_val_val)
      }
      lift_ret_val.Set(lift_ret_val_val)
    }
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

func NewOutgoingResponse(headers WasiHttp0_2_0_TypesHeaders) WasiHttp0_2_0_TypesOutgoingResponse {
  var lower_headers C.wasi_http_0_2_0_types_own_headers_t
  lower_headers.__handle = C.int32_t(headers)
  ret := C.wasi_http_0_2_0_types_constructor_outgoing_response(lower_headers )
  var lift_ret WasiHttp0_2_0_TypesOutgoingResponse
  lift_ret = WasiHttp0_2_0_TypesOutgoingResponse(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingResponse) StatusCode() WasiHttp0_2_0_TypesStatusCode {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_response_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_outgoing_response_status_code(lower_self )
  var lift_ret WasiHttp0_2_0_TypesStatusCode
  var lift_ret_val uint16
  lift_ret_val = uint16(ret)
  lift_ret = lift_ret_val
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingResponse) SetStatusCode(status_code WasiHttp0_2_0_TypesStatusCode) Result[struct{}, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_response_t
  lower_self.__handle = C.int32_t(self)
  var lower_status_code C.uint16_t
  lower_status_code_val := C.uint16_t(status_code)
  lower_status_code = lower_status_code_val
  var ret C.wasi_http_0_2_0_types_result_void_void_t
  C.wasi_http_0_2_0_types_method_outgoing_response_set_status_code(lower_self , lower_status_code , &ret )
  var lift_ret Result[struct{}, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingResponse) Headers() WasiHttp0_2_0_TypesHeaders {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_response_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_outgoing_response_headers(lower_self )
  var lift_ret WasiHttp0_2_0_TypesHeaders
  lift_ret = WasiHttp0_2_0_TypesHeaders(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingResponse) Body() Result[WasiHttp0_2_0_TypesOutgoingBody, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_response_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_result_own_outgoing_body_void_t
  C.wasi_http_0_2_0_types_method_outgoing_response_body(lower_self , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesOutgoingBody, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_outgoing_body_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesOutgoingBody
    lift_ret_val = WasiHttp0_2_0_TypesOutgoingBody(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesOutgoingBody) Write() Result[WasiHttp0_2_0_TypesOutputStream, struct{}] {
  var lower_self C.wasi_http_0_2_0_types_borrow_outgoing_body_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_result_own_output_stream_void_t
  C.wasi_http_0_2_0_types_method_outgoing_body_write(lower_self , &ret )
  var lift_ret Result[WasiHttp0_2_0_TypesOutputStream, struct{}]
  if ret.is_err {
    lift_ret.SetErr(struct{}{})
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_own_output_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesOutputStream
    lift_ret_val = WasiHttp0_2_0_TypesOutputStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func StaticOutgoingBodyFinish(this WasiHttp0_2_0_TypesOutgoingBody, trailers Option[WasiHttp0_2_0_TypesTrailers]) Result[struct{}, WasiHttp0_2_0_TypesErrorCode] {
  var lower_this C.wasi_http_0_2_0_types_own_outgoing_body_t
  lower_this.__handle = C.int32_t(this)
  var lower_trailers C.wasi_http_0_2_0_types_option_own_trailers_t
  if trailers.IsSome() {
    var lower_trailers_val C.wasi_http_0_2_0_types_own_trailers_t
    lower_trailers_val.__handle = C.int32_t(trailers.Unwrap())
    lower_trailers.val = lower_trailers_val
    lower_trailers.is_some = true
  }
  var ret C.wasi_http_0_2_0_types_result_void_error_code_t
  C.wasi_http_0_2_0_types_static_outgoing_body_finish(lower_this , &lower_trailers , &ret )
  var lift_ret Result[struct{}, WasiHttp0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_TypesErrorCode
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDnsTimeout()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_dns_error_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesDnsErrorPayload
      var lift_ret_val_val_Rcode Option[string]
      if lift_ret_val_ptr.rcode.is_some {
        var lift_ret_val_val_Rcode_val string
        lift_ret_val_val_Rcode_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.rcode.val.ptr)), C.int(lift_ret_val_ptr.rcode.val.len))
        lift_ret_val_val_Rcode.Set(lift_ret_val_val_Rcode_val)
      } else {
        lift_ret_val_val_Rcode.Unset()
      }
      lift_ret_val_val.Rcode = lift_ret_val_val_Rcode
      var lift_ret_val_val_InfoCode Option[uint16]
      if lift_ret_val_ptr.info_code.is_some {
        var lift_ret_val_val_InfoCode_val uint16
        lift_ret_val_val_InfoCode_val = uint16(lift_ret_val_ptr.info_code.val)
        lift_ret_val_val_InfoCode.Set(lift_ret_val_val_InfoCode_val)
      } else {
        lift_ret_val_val_InfoCode.Unset()
      }
      lift_ret_val_val.InfoCode = lift_ret_val_val_InfoCode
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDnsError(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationNotFound()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationUnavailable()
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpProhibited()
    }
    if lift_ret_ptr.tag == 5 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpUnroutable()
    }
    if lift_ret_ptr.tag == 6 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionRefused()
    }
    if lift_ret_ptr.tag == 7 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionTerminated()
    }
    if lift_ret_ptr.tag == 8 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionTimeout()
    }
    if lift_ret_ptr.tag == 9 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionReadTimeout()
    }
    if lift_ret_ptr.tag == 10 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionWriteTimeout()
    }
    if lift_ret_ptr.tag == 11 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConnectionLimitReached()
    }
    if lift_ret_ptr.tag == 12 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeTlsProtocolError()
    }
    if lift_ret_ptr.tag == 13 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeTlsCertificateError()
    }
    if lift_ret_ptr.tag == 14 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_tls_alert_received_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesTlsAlertReceivedPayload
      var lift_ret_val_val_AlertId Option[uint8]
      if lift_ret_val_ptr.alert_id.is_some {
        var lift_ret_val_val_AlertId_val uint8
        lift_ret_val_val_AlertId_val = uint8(lift_ret_val_ptr.alert_id.val)
        lift_ret_val_val_AlertId.Set(lift_ret_val_val_AlertId_val)
      } else {
        lift_ret_val_val_AlertId.Unset()
      }
      lift_ret_val_val.AlertId = lift_ret_val_val_AlertId
      var lift_ret_val_val_AlertMessage Option[string]
      if lift_ret_val_ptr.alert_message.is_some {
        var lift_ret_val_val_AlertMessage_val string
        lift_ret_val_val_AlertMessage_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.alert_message.val.ptr)), C.int(lift_ret_val_ptr.alert_message.val.len))
        lift_ret_val_val_AlertMessage.Set(lift_ret_val_val_AlertMessage_val)
      } else {
        lift_ret_val_val_AlertMessage.Unset()
      }
      lift_ret_val_val.AlertMessage = lift_ret_val_val_AlertMessage
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeTlsAlertReceived(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 15 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestDenied()
    }
    if lift_ret_ptr.tag == 16 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestLengthRequired()
    }
    if lift_ret_ptr.tag == 17 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[uint64]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint64
        lift_ret_val_val_val = uint64(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestBodySize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 18 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestMethodInvalid()
    }
    if lift_ret_ptr.tag == 19 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriInvalid()
    }
    if lift_ret_ptr.tag == 20 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriTooLong()
    }
    if lift_ret_ptr.tag == 21 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSectionSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 22 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_option_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[WasiHttp0_2_0_TypesFieldSizePayload]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
        var lift_ret_val_val_val_FieldName Option[string]
        if lift_ret_val_ptr.val.field_name.is_some {
          var lift_ret_val_val_val_FieldName_val string
          lift_ret_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.field_name.val.ptr)), C.int(lift_ret_val_ptr.val.field_name.val.len))
          lift_ret_val_val_val_FieldName.Set(lift_ret_val_val_val_FieldName_val)
        } else {
          lift_ret_val_val_val_FieldName.Unset()
        }
        lift_ret_val_val_val.FieldName = lift_ret_val_val_val_FieldName
        var lift_ret_val_val_val_FieldSize Option[uint32]
        if lift_ret_val_ptr.val.field_size.is_some {
          var lift_ret_val_val_val_FieldSize_val uint32
          lift_ret_val_val_val_FieldSize_val = uint32(lift_ret_val_ptr.val.field_size.val)
          lift_ret_val_val_val_FieldSize.Set(lift_ret_val_val_val_FieldSize_val)
        } else {
          lift_ret_val_val_val_FieldSize.Unset()
        }
        lift_ret_val_val_val.FieldSize = lift_ret_val_val_val_FieldSize
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 23 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSectionSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 24 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_FieldName Option[string]
      if lift_ret_val_ptr.field_name.is_some {
        var lift_ret_val_val_FieldName_val string
        lift_ret_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_ptr.field_name.val.len))
        lift_ret_val_val_FieldName.Set(lift_ret_val_val_FieldName_val)
      } else {
        lift_ret_val_val_FieldName.Unset()
      }
      lift_ret_val_val.FieldName = lift_ret_val_val_FieldName
      var lift_ret_val_val_FieldSize Option[uint32]
      if lift_ret_val_ptr.field_size.is_some {
        var lift_ret_val_val_FieldSize_val uint32
        lift_ret_val_val_FieldSize_val = uint32(lift_ret_val_ptr.field_size.val)
        lift_ret_val_val_FieldSize.Set(lift_ret_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_FieldSize.Unset()
      }
      lift_ret_val_val.FieldSize = lift_ret_val_val_FieldSize
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 25 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseIncomplete()
    }
    if lift_ret_ptr.tag == 26 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSectionSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 27 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_FieldName Option[string]
      if lift_ret_val_ptr.field_name.is_some {
        var lift_ret_val_val_FieldName_val string
        lift_ret_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_ptr.field_name.val.len))
        lift_ret_val_val_FieldName.Set(lift_ret_val_val_FieldName_val)
      } else {
        lift_ret_val_val_FieldName.Unset()
      }
      lift_ret_val_val.FieldName = lift_ret_val_val_FieldName
      var lift_ret_val_val_FieldSize Option[uint32]
      if lift_ret_val_ptr.field_size.is_some {
        var lift_ret_val_val_FieldSize_val uint32
        lift_ret_val_val_FieldSize_val = uint32(lift_ret_val_ptr.field_size.val)
        lift_ret_val_val_FieldSize.Set(lift_ret_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_FieldSize.Unset()
      }
      lift_ret_val_val.FieldSize = lift_ret_val_val_FieldSize
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 28 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[uint64]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint64
        lift_ret_val_val_val = uint64(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseBodySize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 29 {
      lift_ret_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[uint32]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val uint32
        lift_ret_val_val_val = uint32(lift_ret_val_ptr.val)
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSectionSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 30 {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_FieldName Option[string]
      if lift_ret_val_ptr.field_name.is_some {
        var lift_ret_val_val_FieldName_val string
        lift_ret_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_ptr.field_name.val.len))
        lift_ret_val_val_FieldName.Set(lift_ret_val_val_FieldName_val)
      } else {
        lift_ret_val_val_FieldName.Unset()
      }
      lift_ret_val_val.FieldName = lift_ret_val_val_FieldName
      var lift_ret_val_val_FieldSize Option[uint32]
      if lift_ret_val_ptr.field_size.is_some {
        var lift_ret_val_val_FieldSize_val uint32
        lift_ret_val_val_FieldSize_val = uint32(lift_ret_val_ptr.field_size.val)
        lift_ret_val_val_FieldSize.Set(lift_ret_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_FieldSize.Unset()
      }
      lift_ret_val_val.FieldSize = lift_ret_val_val_FieldSize
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSize(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 31 {
      lift_ret_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[string]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val string
        lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.ptr)), C.int(lift_ret_val_ptr.val.len))
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTransferCoding(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 32 {
      lift_ret_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[string]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val string
        lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.ptr)), C.int(lift_ret_val_ptr.val.len))
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseContentCoding(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 33 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTimeout()
    }
    if lift_ret_ptr.tag == 34 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpUpgradeFailed()
    }
    if lift_ret_ptr.tag == 35 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeHttpProtocolError()
    }
    if lift_ret_ptr.tag == 36 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeLoopDetected()
    }
    if lift_ret_ptr.tag == 37 {
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeConfigurationError()
    }
    if lift_ret_ptr.tag == 38 {
      lift_ret_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val Option[string]
      if lift_ret_val_ptr.is_some {
        var lift_ret_val_val_val string
        lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.val.ptr)), C.int(lift_ret_val_ptr.val.len))
        lift_ret_val_val.Set(lift_ret_val_val_val)
      } else {
        lift_ret_val_val.Unset()
      }
      lift_ret_val = WasiHttp0_2_0_TypesErrorCodeInternalError(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiHttp0_2_0_TypesFutureIncomingResponse) Subscribe() WasiHttp0_2_0_TypesPollable {
  var lower_self C.wasi_http_0_2_0_types_borrow_future_incoming_response_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_http_0_2_0_types_method_future_incoming_response_subscribe(lower_self )
  var lift_ret WasiHttp0_2_0_TypesPollable
  lift_ret = WasiHttp0_2_0_TypesPollable(ret.__handle)

  return lift_ret
}

func (self WasiHttp0_2_0_TypesFutureIncomingResponse) Get() Option[Result[Result[WasiHttp0_2_0_TypesIncomingResponse, WasiHttp0_2_0_TypesErrorCode], struct{}]] {
  var lower_self C.wasi_http_0_2_0_types_borrow_future_incoming_response_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_http_0_2_0_types_option_result_result_own_incoming_response_error_code_void_t
  C.wasi_http_0_2_0_types_method_future_incoming_response_get(lower_self , &ret )
  var lift_ret Option[Result[Result[WasiHttp0_2_0_TypesIncomingResponse, WasiHttp0_2_0_TypesErrorCode], struct{}]]
  if ret.is_some {
    var lift_ret_val Result[Result[WasiHttp0_2_0_TypesIncomingResponse, WasiHttp0_2_0_TypesErrorCode], struct{}]
    if ret.val.is_err {
      lift_ret_val.SetErr(struct{}{})
    } else {
      lift_ret_val_ptr := *(*C.wasi_http_0_2_0_types_result_own_incoming_response_error_code_t)(unsafe.Pointer(&ret.val.val))
      var lift_ret_val_val Result[WasiHttp0_2_0_TypesIncomingResponse, WasiHttp0_2_0_TypesErrorCode]
      if lift_ret_val_ptr.is_err {
        lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_error_code_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
        var lift_ret_val_val_val WasiHttp0_2_0_TypesErrorCode
        if lift_ret_val_val_ptr.tag == 0 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDnsTimeout()
        }
        if lift_ret_val_val_ptr.tag == 1 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_dns_error_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesDnsErrorPayload
          var lift_ret_val_val_val_val_Rcode Option[string]
          if lift_ret_val_val_val_ptr.rcode.is_some {
            var lift_ret_val_val_val_val_Rcode_val string
            lift_ret_val_val_val_val_Rcode_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.rcode.val.ptr)), C.int(lift_ret_val_val_val_ptr.rcode.val.len))
            lift_ret_val_val_val_val_Rcode.Set(lift_ret_val_val_val_val_Rcode_val)
          } else {
            lift_ret_val_val_val_val_Rcode.Unset()
          }
          lift_ret_val_val_val_val.Rcode = lift_ret_val_val_val_val_Rcode
          var lift_ret_val_val_val_val_InfoCode Option[uint16]
          if lift_ret_val_val_val_ptr.info_code.is_some {
            var lift_ret_val_val_val_val_InfoCode_val uint16
            lift_ret_val_val_val_val_InfoCode_val = uint16(lift_ret_val_val_val_ptr.info_code.val)
            lift_ret_val_val_val_val_InfoCode.Set(lift_ret_val_val_val_val_InfoCode_val)
          } else {
            lift_ret_val_val_val_val_InfoCode.Unset()
          }
          lift_ret_val_val_val_val.InfoCode = lift_ret_val_val_val_val_InfoCode
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDnsError(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 2 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationNotFound()
        }
        if lift_ret_val_val_ptr.tag == 3 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationUnavailable()
        }
        if lift_ret_val_val_ptr.tag == 4 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpProhibited()
        }
        if lift_ret_val_val_ptr.tag == 5 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpUnroutable()
        }
        if lift_ret_val_val_ptr.tag == 6 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionRefused()
        }
        if lift_ret_val_val_ptr.tag == 7 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionTerminated()
        }
        if lift_ret_val_val_ptr.tag == 8 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionTimeout()
        }
        if lift_ret_val_val_ptr.tag == 9 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionReadTimeout()
        }
        if lift_ret_val_val_ptr.tag == 10 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionWriteTimeout()
        }
        if lift_ret_val_val_ptr.tag == 11 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionLimitReached()
        }
        if lift_ret_val_val_ptr.tag == 12 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeTlsProtocolError()
        }
        if lift_ret_val_val_ptr.tag == 13 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeTlsCertificateError()
        }
        if lift_ret_val_val_ptr.tag == 14 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_tls_alert_received_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesTlsAlertReceivedPayload
          var lift_ret_val_val_val_val_AlertId Option[uint8]
          if lift_ret_val_val_val_ptr.alert_id.is_some {
            var lift_ret_val_val_val_val_AlertId_val uint8
            lift_ret_val_val_val_val_AlertId_val = uint8(lift_ret_val_val_val_ptr.alert_id.val)
            lift_ret_val_val_val_val_AlertId.Set(lift_ret_val_val_val_val_AlertId_val)
          } else {
            lift_ret_val_val_val_val_AlertId.Unset()
          }
          lift_ret_val_val_val_val.AlertId = lift_ret_val_val_val_val_AlertId
          var lift_ret_val_val_val_val_AlertMessage Option[string]
          if lift_ret_val_val_val_ptr.alert_message.is_some {
            var lift_ret_val_val_val_val_AlertMessage_val string
            lift_ret_val_val_val_val_AlertMessage_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.alert_message.val.ptr)), C.int(lift_ret_val_val_val_ptr.alert_message.val.len))
            lift_ret_val_val_val_val_AlertMessage.Set(lift_ret_val_val_val_val_AlertMessage_val)
          } else {
            lift_ret_val_val_val_val_AlertMessage.Unset()
          }
          lift_ret_val_val_val_val.AlertMessage = lift_ret_val_val_val_val_AlertMessage
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeTlsAlertReceived(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 15 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestDenied()
        }
        if lift_ret_val_val_ptr.tag == 16 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestLengthRequired()
        }
        if lift_ret_val_val_ptr.tag == 17 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint64]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint64
            lift_ret_val_val_val_val_val = uint64(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestBodySize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 18 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestMethodInvalid()
        }
        if lift_ret_val_val_ptr.tag == 19 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriInvalid()
        }
        if lift_ret_val_val_ptr.tag == 20 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriTooLong()
        }
        if lift_ret_val_val_ptr.tag == 21 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 22 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_option_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[WasiHttp0_2_0_TypesFieldSizePayload]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
            var lift_ret_val_val_val_val_val_FieldName Option[string]
            if lift_ret_val_val_val_ptr.val.field_name.is_some {
              var lift_ret_val_val_val_val_val_FieldName_val string
              lift_ret_val_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.field_name.val.len))
              lift_ret_val_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_val_FieldName_val)
            } else {
              lift_ret_val_val_val_val_val_FieldName.Unset()
            }
            lift_ret_val_val_val_val_val.FieldName = lift_ret_val_val_val_val_val_FieldName
            var lift_ret_val_val_val_val_val_FieldSize Option[uint32]
            if lift_ret_val_val_val_ptr.val.field_size.is_some {
              var lift_ret_val_val_val_val_val_FieldSize_val uint32
              lift_ret_val_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.val.field_size.val)
              lift_ret_val_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_val_FieldSize_val)
            } else {
              lift_ret_val_val_val_val_val_FieldSize.Unset()
            }
            lift_ret_val_val_val_val_val.FieldSize = lift_ret_val_val_val_val_val_FieldSize
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 23 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 24 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
          var lift_ret_val_val_val_val_FieldName Option[string]
          if lift_ret_val_val_val_ptr.field_name.is_some {
            var lift_ret_val_val_val_val_FieldName_val string
            lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.field_name.val.len))
            lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
          } else {
            lift_ret_val_val_val_val_FieldName.Unset()
          }
          lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
          var lift_ret_val_val_val_val_FieldSize Option[uint32]
          if lift_ret_val_val_val_ptr.field_size.is_some {
            var lift_ret_val_val_val_val_FieldSize_val uint32
            lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.field_size.val)
            lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
          } else {
            lift_ret_val_val_val_val_FieldSize.Unset()
          }
          lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 25 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseIncomplete()
        }
        if lift_ret_val_val_ptr.tag == 26 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 27 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
          var lift_ret_val_val_val_val_FieldName Option[string]
          if lift_ret_val_val_val_ptr.field_name.is_some {
            var lift_ret_val_val_val_val_FieldName_val string
            lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.field_name.val.len))
            lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
          } else {
            lift_ret_val_val_val_val_FieldName.Unset()
          }
          lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
          var lift_ret_val_val_val_val_FieldSize Option[uint32]
          if lift_ret_val_val_val_ptr.field_size.is_some {
            var lift_ret_val_val_val_val_FieldSize_val uint32
            lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.field_size.val)
            lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
          } else {
            lift_ret_val_val_val_val_FieldSize.Unset()
          }
          lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 28 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint64]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint64
            lift_ret_val_val_val_val_val = uint64(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseBodySize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 29 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[uint32]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val uint32
            lift_ret_val_val_val_val_val = uint32(lift_ret_val_val_val_ptr.val)
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSectionSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 30 {
          lift_ret_val_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
          var lift_ret_val_val_val_val_FieldName Option[string]
          if lift_ret_val_val_val_ptr.field_name.is_some {
            var lift_ret_val_val_val_val_FieldName_val string
            lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_val_ptr.field_name.val.len))
            lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
          } else {
            lift_ret_val_val_val_val_FieldName.Unset()
          }
          lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
          var lift_ret_val_val_val_val_FieldSize Option[uint32]
          if lift_ret_val_val_val_ptr.field_size.is_some {
            var lift_ret_val_val_val_val_FieldSize_val uint32
            lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_val_ptr.field_size.val)
            lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
          } else {
            lift_ret_val_val_val_val_FieldSize.Unset()
          }
          lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSize(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 31 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[string]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val string
            lift_ret_val_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.len))
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTransferCoding(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 32 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[string]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val string
            lift_ret_val_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.len))
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseContentCoding(lift_ret_val_val_val_val)
        }
        if lift_ret_val_val_ptr.tag == 33 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTimeout()
        }
        if lift_ret_val_val_ptr.tag == 34 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpUpgradeFailed()
        }
        if lift_ret_val_val_ptr.tag == 35 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeHttpProtocolError()
        }
        if lift_ret_val_val_ptr.tag == 36 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeLoopDetected()
        }
        if lift_ret_val_val_ptr.tag == 37 {
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeConfigurationError()
        }
        if lift_ret_val_val_ptr.tag == 38 {
          lift_ret_val_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_val_val_ptr.val))
          var lift_ret_val_val_val_val Option[string]
          if lift_ret_val_val_val_ptr.is_some {
            var lift_ret_val_val_val_val_val string
            lift_ret_val_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_val_ptr.val.len))
            lift_ret_val_val_val_val.Set(lift_ret_val_val_val_val_val)
          } else {
            lift_ret_val_val_val_val.Unset()
          }
          lift_ret_val_val_val = WasiHttp0_2_0_TypesErrorCodeInternalError(lift_ret_val_val_val_val)
        }
        lift_ret_val_val.SetErr(lift_ret_val_val_val)
      } else {
        lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_own_incoming_response_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
        var lift_ret_val_val_val WasiHttp0_2_0_TypesIncomingResponse
        lift_ret_val_val_val = WasiHttp0_2_0_TypesIncomingResponse(lift_ret_val_val_ptr.__handle)
        
        lift_ret_val_val.Set(lift_ret_val_val_val)
      }
      lift_ret_val.Set(lift_ret_val_val)
    }
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

// Import functions from wasi:http/outgoing-handler@0.2.0
type WasiHttp0_2_0_OutgoingHandlerOutgoingRequest = WasiHttp0_2_0_TypesOutgoingRequest
type WasiHttp0_2_0_OutgoingHandlerRequestOptions = WasiHttp0_2_0_TypesRequestOptions
type WasiHttp0_2_0_OutgoingHandlerFutureIncomingResponse = WasiHttp0_2_0_TypesFutureIncomingResponse
type WasiHttp0_2_0_OutgoingHandlerErrorCode = WasiHttp0_2_0_TypesErrorCode
func WasiHttp0_2_0_OutgoingHandlerHandle(request WasiHttp0_2_0_OutgoingHandlerOutgoingRequest, options Option[WasiHttp0_2_0_OutgoingHandlerRequestOptions]) Result[WasiHttp0_2_0_OutgoingHandlerFutureIncomingResponse, WasiHttp0_2_0_OutgoingHandlerErrorCode] {
  var lower_request C.wasi_http_0_2_0_outgoing_handler_own_outgoing_request_t
  lower_request.__handle = C.int32_t(request)
  var lower_options C.wasi_http_0_2_0_outgoing_handler_option_own_request_options_t
  if options.IsSome() {
    var lower_options_val C.wasi_http_0_2_0_outgoing_handler_own_request_options_t
    lower_options_val.__handle = C.int32_t(options.Unwrap())
    lower_options.val = lower_options_val
    lower_options.is_some = true
  }
  var ret C.wasi_http_0_2_0_outgoing_handler_result_own_future_incoming_response_error_code_t
  C.wasi_http_0_2_0_outgoing_handler_handle(lower_request , &lower_options , &ret )
  var lift_ret Result[WasiHttp0_2_0_OutgoingHandlerFutureIncomingResponse, WasiHttp0_2_0_OutgoingHandlerErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_outgoing_handler_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_OutgoingHandlerErrorCode
    var lift_ret_val_val WasiHttp0_2_0_TypesErrorCode
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeDnsTimeout()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_dns_error_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiHttp0_2_0_TypesDnsErrorPayload
      var lift_ret_val_val_val_Rcode Option[string]
      if lift_ret_val_val_ptr.rcode.is_some {
        var lift_ret_val_val_val_Rcode_val string
        lift_ret_val_val_val_Rcode_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.rcode.val.ptr)), C.int(lift_ret_val_val_ptr.rcode.val.len))
        lift_ret_val_val_val_Rcode.Set(lift_ret_val_val_val_Rcode_val)
      } else {
        lift_ret_val_val_val_Rcode.Unset()
      }
      lift_ret_val_val_val.Rcode = lift_ret_val_val_val_Rcode
      var lift_ret_val_val_val_InfoCode Option[uint16]
      if lift_ret_val_val_ptr.info_code.is_some {
        var lift_ret_val_val_val_InfoCode_val uint16
        lift_ret_val_val_val_InfoCode_val = uint16(lift_ret_val_val_ptr.info_code.val)
        lift_ret_val_val_val_InfoCode.Set(lift_ret_val_val_val_InfoCode_val)
      } else {
        lift_ret_val_val_val_InfoCode.Unset()
      }
      lift_ret_val_val_val.InfoCode = lift_ret_val_val_val_InfoCode
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeDnsError(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationNotFound()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationUnavailable()
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpProhibited()
    }
    if lift_ret_ptr.tag == 5 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeDestinationIpUnroutable()
    }
    if lift_ret_ptr.tag == 6 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionRefused()
    }
    if lift_ret_ptr.tag == 7 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionTerminated()
    }
    if lift_ret_ptr.tag == 8 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionTimeout()
    }
    if lift_ret_ptr.tag == 9 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionReadTimeout()
    }
    if lift_ret_ptr.tag == 10 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionWriteTimeout()
    }
    if lift_ret_ptr.tag == 11 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConnectionLimitReached()
    }
    if lift_ret_ptr.tag == 12 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeTlsProtocolError()
    }
    if lift_ret_ptr.tag == 13 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeTlsCertificateError()
    }
    if lift_ret_ptr.tag == 14 {
      lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_tls_alert_received_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiHttp0_2_0_TypesTlsAlertReceivedPayload
      var lift_ret_val_val_val_AlertId Option[uint8]
      if lift_ret_val_val_ptr.alert_id.is_some {
        var lift_ret_val_val_val_AlertId_val uint8
        lift_ret_val_val_val_AlertId_val = uint8(lift_ret_val_val_ptr.alert_id.val)
        lift_ret_val_val_val_AlertId.Set(lift_ret_val_val_val_AlertId_val)
      } else {
        lift_ret_val_val_val_AlertId.Unset()
      }
      lift_ret_val_val_val.AlertId = lift_ret_val_val_val_AlertId
      var lift_ret_val_val_val_AlertMessage Option[string]
      if lift_ret_val_val_ptr.alert_message.is_some {
        var lift_ret_val_val_val_AlertMessage_val string
        lift_ret_val_val_val_AlertMessage_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.alert_message.val.ptr)), C.int(lift_ret_val_val_ptr.alert_message.val.len))
        lift_ret_val_val_val_AlertMessage.Set(lift_ret_val_val_val_AlertMessage_val)
      } else {
        lift_ret_val_val_val_AlertMessage.Unset()
      }
      lift_ret_val_val_val.AlertMessage = lift_ret_val_val_val_AlertMessage
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeTlsAlertReceived(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 15 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestDenied()
    }
    if lift_ret_ptr.tag == 16 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestLengthRequired()
    }
    if lift_ret_ptr.tag == 17 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[uint64]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val uint64
        lift_ret_val_val_val_val = uint64(lift_ret_val_val_ptr.val)
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestBodySize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 18 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestMethodInvalid()
    }
    if lift_ret_ptr.tag == 19 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriInvalid()
    }
    if lift_ret_ptr.tag == 20 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestUriTooLong()
    }
    if lift_ret_ptr.tag == 21 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[uint32]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val uint32
        lift_ret_val_val_val_val = uint32(lift_ret_val_val_ptr.val)
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSectionSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 22 {
      lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_option_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[WasiHttp0_2_0_TypesFieldSizePayload]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
        var lift_ret_val_val_val_val_FieldName Option[string]
        if lift_ret_val_val_ptr.val.field_name.is_some {
          var lift_ret_val_val_val_val_FieldName_val string
          lift_ret_val_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.val.field_name.val.ptr)), C.int(lift_ret_val_val_ptr.val.field_name.val.len))
          lift_ret_val_val_val_val_FieldName.Set(lift_ret_val_val_val_val_FieldName_val)
        } else {
          lift_ret_val_val_val_val_FieldName.Unset()
        }
        lift_ret_val_val_val_val.FieldName = lift_ret_val_val_val_val_FieldName
        var lift_ret_val_val_val_val_FieldSize Option[uint32]
        if lift_ret_val_val_ptr.val.field_size.is_some {
          var lift_ret_val_val_val_val_FieldSize_val uint32
          lift_ret_val_val_val_val_FieldSize_val = uint32(lift_ret_val_val_ptr.val.field_size.val)
          lift_ret_val_val_val_val_FieldSize.Set(lift_ret_val_val_val_val_FieldSize_val)
        } else {
          lift_ret_val_val_val_val_FieldSize.Unset()
        }
        lift_ret_val_val_val_val.FieldSize = lift_ret_val_val_val_val_FieldSize
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestHeaderSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 23 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[uint32]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val uint32
        lift_ret_val_val_val_val = uint32(lift_ret_val_val_ptr.val)
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSectionSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 24 {
      lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_val_FieldName Option[string]
      if lift_ret_val_val_ptr.field_name.is_some {
        var lift_ret_val_val_val_FieldName_val string
        lift_ret_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_ptr.field_name.val.len))
        lift_ret_val_val_val_FieldName.Set(lift_ret_val_val_val_FieldName_val)
      } else {
        lift_ret_val_val_val_FieldName.Unset()
      }
      lift_ret_val_val_val.FieldName = lift_ret_val_val_val_FieldName
      var lift_ret_val_val_val_FieldSize Option[uint32]
      if lift_ret_val_val_ptr.field_size.is_some {
        var lift_ret_val_val_val_FieldSize_val uint32
        lift_ret_val_val_val_FieldSize_val = uint32(lift_ret_val_val_ptr.field_size.val)
        lift_ret_val_val_val_FieldSize.Set(lift_ret_val_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_val_FieldSize.Unset()
      }
      lift_ret_val_val_val.FieldSize = lift_ret_val_val_val_FieldSize
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpRequestTrailerSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 25 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseIncomplete()
    }
    if lift_ret_ptr.tag == 26 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[uint32]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val uint32
        lift_ret_val_val_val_val = uint32(lift_ret_val_val_ptr.val)
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSectionSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 27 {
      lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_val_FieldName Option[string]
      if lift_ret_val_val_ptr.field_name.is_some {
        var lift_ret_val_val_val_FieldName_val string
        lift_ret_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_ptr.field_name.val.len))
        lift_ret_val_val_val_FieldName.Set(lift_ret_val_val_val_FieldName_val)
      } else {
        lift_ret_val_val_val_FieldName.Unset()
      }
      lift_ret_val_val_val.FieldName = lift_ret_val_val_val_FieldName
      var lift_ret_val_val_val_FieldSize Option[uint32]
      if lift_ret_val_val_ptr.field_size.is_some {
        var lift_ret_val_val_val_FieldSize_val uint32
        lift_ret_val_val_val_FieldSize_val = uint32(lift_ret_val_val_ptr.field_size.val)
        lift_ret_val_val_val_FieldSize.Set(lift_ret_val_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_val_FieldSize.Unset()
      }
      lift_ret_val_val_val.FieldSize = lift_ret_val_val_val_FieldSize
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseHeaderSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 28 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_u64_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[uint64]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val uint64
        lift_ret_val_val_val_val = uint64(lift_ret_val_val_ptr.val)
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseBodySize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 29 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_u32_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[uint32]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val uint32
        lift_ret_val_val_val_val = uint32(lift_ret_val_val_ptr.val)
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSectionSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 30 {
      lift_ret_val_val_ptr := *(*C.wasi_http_0_2_0_types_field_size_payload_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiHttp0_2_0_TypesFieldSizePayload
      var lift_ret_val_val_val_FieldName Option[string]
      if lift_ret_val_val_ptr.field_name.is_some {
        var lift_ret_val_val_val_FieldName_val string
        lift_ret_val_val_val_FieldName_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.field_name.val.ptr)), C.int(lift_ret_val_val_ptr.field_name.val.len))
        lift_ret_val_val_val_FieldName.Set(lift_ret_val_val_val_FieldName_val)
      } else {
        lift_ret_val_val_val_FieldName.Unset()
      }
      lift_ret_val_val_val.FieldName = lift_ret_val_val_val_FieldName
      var lift_ret_val_val_val_FieldSize Option[uint32]
      if lift_ret_val_val_ptr.field_size.is_some {
        var lift_ret_val_val_val_FieldSize_val uint32
        lift_ret_val_val_val_FieldSize_val = uint32(lift_ret_val_val_ptr.field_size.val)
        lift_ret_val_val_val_FieldSize.Set(lift_ret_val_val_val_FieldSize_val)
      } else {
        lift_ret_val_val_val_FieldSize.Unset()
      }
      lift_ret_val_val_val.FieldSize = lift_ret_val_val_val_FieldSize
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTrailerSize(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 31 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[string]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val string
        lift_ret_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_ptr.val.len))
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTransferCoding(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 32 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[string]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val string
        lift_ret_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_ptr.val.len))
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseContentCoding(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 33 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpResponseTimeout()
    }
    if lift_ret_ptr.tag == 34 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpUpgradeFailed()
    }
    if lift_ret_ptr.tag == 35 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeHttpProtocolError()
    }
    if lift_ret_ptr.tag == 36 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeLoopDetected()
    }
    if lift_ret_ptr.tag == 37 {
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeConfigurationError()
    }
    if lift_ret_ptr.tag == 38 {
      lift_ret_val_val_ptr := *(*C.http_trigger_option_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val Option[string]
      if lift_ret_val_val_ptr.is_some {
        var lift_ret_val_val_val_val string
        lift_ret_val_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.val.ptr)), C.int(lift_ret_val_val_ptr.val.len))
        lift_ret_val_val_val.Set(lift_ret_val_val_val_val)
      } else {
        lift_ret_val_val_val.Unset()
      }
      lift_ret_val_val = WasiHttp0_2_0_TypesErrorCodeInternalError(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_http_0_2_0_outgoing_handler_own_future_incoming_response_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiHttp0_2_0_OutgoingHandlerFutureIncomingResponse
    lift_ret_val = WasiHttp0_2_0_OutgoingHandlerFutureIncomingResponse(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from fermyon:spin/llm@2.0.0
type FermyonSpin2_0_0_LlmInferencingModel = string
type FermyonSpin2_0_0_LlmInferencingParams struct {
  MaxTokens uint32
  RepeatPenalty float32
  RepeatPenaltyLastNTokenCount uint32
  Temperature float32
  TopK uint32
  TopP float32
}

type FermyonSpin2_0_0_LlmErrorKind int

const (
FermyonSpin2_0_0_LlmErrorKindModelNotSupported FermyonSpin2_0_0_LlmErrorKind = iota
FermyonSpin2_0_0_LlmErrorKindRuntimeError
FermyonSpin2_0_0_LlmErrorKindInvalidInput
)

type FermyonSpin2_0_0_LlmError struct {
  kind FermyonSpin2_0_0_LlmErrorKind
  val any
}

func (n FermyonSpin2_0_0_LlmError) Kind() FermyonSpin2_0_0_LlmErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_LlmErrorModelNotSupported() FermyonSpin2_0_0_LlmError{
  return FermyonSpin2_0_0_LlmError{kind: FermyonSpin2_0_0_LlmErrorKindModelNotSupported}
}

func FermyonSpin2_0_0_LlmErrorRuntimeError(v string) FermyonSpin2_0_0_LlmError{
  return FermyonSpin2_0_0_LlmError{kind: FermyonSpin2_0_0_LlmErrorKindRuntimeError, val: v}
}

func (n FermyonSpin2_0_0_LlmError) GetRuntimeError() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_LlmErrorKindRuntimeError; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_LlmError) SetRuntimeError(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_LlmErrorKindRuntimeError
}

func FermyonSpin2_0_0_LlmErrorInvalidInput(v string) FermyonSpin2_0_0_LlmError{
  return FermyonSpin2_0_0_LlmError{kind: FermyonSpin2_0_0_LlmErrorKindInvalidInput, val: v}
}

func (n FermyonSpin2_0_0_LlmError) GetInvalidInput() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_LlmErrorKindInvalidInput; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_LlmError) SetInvalidInput(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_LlmErrorKindInvalidInput
}

type FermyonSpin2_0_0_LlmInferencingUsage struct {
  PromptTokenCount uint32
  GeneratedTokenCount uint32
}

type FermyonSpin2_0_0_LlmInferencingResult struct {
  Text string
  Usage FermyonSpin2_0_0_LlmInferencingUsage
}

type FermyonSpin2_0_0_LlmEmbeddingModel = string
type FermyonSpin2_0_0_LlmEmbeddingsUsage struct {
  PromptTokenCount uint32
}

type FermyonSpin2_0_0_LlmEmbeddingsResult struct {
  Embeddings [][]float32
  Usage FermyonSpin2_0_0_LlmEmbeddingsUsage
}

func FermyonSpin2_0_0_LlmInfer(model FermyonSpin2_0_0_LlmInferencingModel, prompt string, params Option[FermyonSpin2_0_0_LlmInferencingParams]) Result[FermyonSpin2_0_0_LlmInferencingResult, FermyonSpin2_0_0_LlmError] {
  var lower_model C.http_trigger_string_t
  var lower_model_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_model_val.ptr = (*uint8)(unsafe.Pointer(C.CString(model)))
  lower_model_val.len = C.size_t(len(model))
  lower_model = lower_model_val
  var lower_prompt C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_prompt.ptr = (*uint8)(unsafe.Pointer(C.CString(prompt)))
  lower_prompt.len = C.size_t(len(prompt))
  var lower_params C.fermyon_spin_2_0_0_llm_option_inferencing_params_t
  if params.IsSome() {
    var lower_params_val C.fermyon_spin_2_0_0_llm_inferencing_params_t
    lower_params_val_max_tokens := C.uint32_t(params.Unwrap().MaxTokens)
    lower_params_val.max_tokens = lower_params_val_max_tokens
    lower_params_val_repeat_penalty := C.float(params.Unwrap().RepeatPenalty)
    lower_params_val.repeat_penalty = lower_params_val_repeat_penalty
    lower_params_val_repeat_penalty_last_n_token_count := C.uint32_t(params.Unwrap().RepeatPenaltyLastNTokenCount)
    lower_params_val.repeat_penalty_last_n_token_count = lower_params_val_repeat_penalty_last_n_token_count
    lower_params_val_temperature := C.float(params.Unwrap().Temperature)
    lower_params_val.temperature = lower_params_val_temperature
    lower_params_val_top_k := C.uint32_t(params.Unwrap().TopK)
    lower_params_val.top_k = lower_params_val_top_k
    lower_params_val_top_p := C.float(params.Unwrap().TopP)
    lower_params_val.top_p = lower_params_val_top_p
    lower_params.val = lower_params_val
    lower_params.is_some = true
  }
  var ret C.fermyon_spin_2_0_0_llm_result_inferencing_result_error_t
  C.fermyon_spin_2_0_0_llm_infer(&lower_model , &lower_prompt , &lower_params , &ret )
  var lift_ret Result[FermyonSpin2_0_0_LlmInferencingResult, FermyonSpin2_0_0_LlmError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_llm_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_LlmError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_LlmErrorModelNotSupported()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_LlmErrorRuntimeError(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_LlmErrorInvalidInput(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_llm_inferencing_result_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_LlmInferencingResult
    var lift_ret_val_Text string
    lift_ret_val_Text = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.text.ptr)), C.int(lift_ret_ptr.text.len))
    lift_ret_val.Text = lift_ret_val_Text
    var lift_ret_val_Usage FermyonSpin2_0_0_LlmInferencingUsage
    var lift_ret_val_Usage_PromptTokenCount uint32
    lift_ret_val_Usage_PromptTokenCount = uint32(lift_ret_ptr.usage.prompt_token_count)
    lift_ret_val_Usage.PromptTokenCount = lift_ret_val_Usage_PromptTokenCount
    var lift_ret_val_Usage_GeneratedTokenCount uint32
    lift_ret_val_Usage_GeneratedTokenCount = uint32(lift_ret_ptr.usage.generated_token_count)
    lift_ret_val_Usage.GeneratedTokenCount = lift_ret_val_Usage_GeneratedTokenCount
    lift_ret_val.Usage = lift_ret_val_Usage
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func FermyonSpin2_0_0_LlmGenerateEmbeddings(model FermyonSpin2_0_0_LlmEmbeddingModel, text []string) Result[FermyonSpin2_0_0_LlmEmbeddingsResult, FermyonSpin2_0_0_LlmError] {
  var lower_model C.http_trigger_string_t
  var lower_model_val C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_model_val.ptr = (*uint8)(unsafe.Pointer(C.CString(model)))
  lower_model_val.len = C.size_t(len(model))
  lower_model = lower_model_val
  var lower_text C.http_trigger_list_string_t
  if len(text) == 0 {
    lower_text.ptr = nil
    lower_text.len = 0
  } else {
    var empty_lower_text C.http_trigger_string_t
    lower_text.ptr = (*C.http_trigger_string_t)(C.malloc(C.size_t(len(text)) * C.size_t(unsafe.Sizeof(empty_lower_text))))
    lower_text.len = C.size_t(len(text))
    for lower_text_i := range text {
      lower_text_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_text.ptr)) +
      uintptr(lower_text_i)*unsafe.Sizeof(empty_lower_text)))
      var lower_text_ptr_value C.http_trigger_string_t

      // use unsafe.Pointer to avoid copy
      lower_text_ptr_value.ptr = (*uint8)(unsafe.Pointer(C.CString(text[lower_text_i])))
      lower_text_ptr_value.len = C.size_t(len(text[lower_text_i]))
      *lower_text_ptr = lower_text_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_llm_result_embeddings_result_error_t
  C.fermyon_spin_2_0_0_llm_generate_embeddings(&lower_model , &lower_text , &ret )
  var lift_ret Result[FermyonSpin2_0_0_LlmEmbeddingsResult, FermyonSpin2_0_0_LlmError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_llm_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_LlmError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_LlmErrorModelNotSupported()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_LlmErrorRuntimeError(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_LlmErrorInvalidInput(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_llm_embeddings_result_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_LlmEmbeddingsResult
    var lift_ret_val_Embeddings [][]float32
    lift_ret_val_Embeddings = make([][]float32, lift_ret_ptr.embeddings.len)
    if lift_ret_ptr.embeddings.len > 0 {
      for lift_ret_val_Embeddings_i := 0; lift_ret_val_Embeddings_i < int(lift_ret_ptr.embeddings.len); lift_ret_val_Embeddings_i++ {
        var empty_lift_ret_val_Embeddings C.http_trigger_list_float32_t
        lift_ret_val_Embeddings_ptr := *(*C.http_trigger_list_float32_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.embeddings.ptr)) +
        uintptr(lift_ret_val_Embeddings_i)*unsafe.Sizeof(empty_lift_ret_val_Embeddings)))
        var list_lift_ret_val_Embeddings []float32
        list_lift_ret_val_Embeddings = make([]float32, lift_ret_val_Embeddings_ptr.len)
        if lift_ret_val_Embeddings_ptr.len > 0 {
          for list_lift_ret_val_Embeddings_i := 0; list_lift_ret_val_Embeddings_i < int(lift_ret_val_Embeddings_ptr.len); list_lift_ret_val_Embeddings_i++ {
            var empty_list_lift_ret_val_Embeddings C.float
            list_lift_ret_val_Embeddings_ptr := *(*C.float)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_val_Embeddings_ptr.ptr)) +
            uintptr(list_lift_ret_val_Embeddings_i)*unsafe.Sizeof(empty_list_lift_ret_val_Embeddings)))
            var list_list_lift_ret_val_Embeddings float32
            list_list_lift_ret_val_Embeddings = float32(list_lift_ret_val_Embeddings_ptr)
            list_lift_ret_val_Embeddings[list_lift_ret_val_Embeddings_i] = list_list_lift_ret_val_Embeddings
          }
        }
        lift_ret_val_Embeddings[lift_ret_val_Embeddings_i] = list_lift_ret_val_Embeddings
      }
    }
    lift_ret_val.Embeddings = lift_ret_val_Embeddings
    var lift_ret_val_Usage FermyonSpin2_0_0_LlmEmbeddingsUsage
    var lift_ret_val_Usage_PromptTokenCount uint32
    lift_ret_val_Usage_PromptTokenCount = uint32(lift_ret_ptr.usage.prompt_token_count)
    lift_ret_val_Usage.PromptTokenCount = lift_ret_val_Usage_PromptTokenCount
    lift_ret_val.Usage = lift_ret_val_Usage
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from fermyon:spin/redis@2.0.0
type FermyonSpin2_0_0_RedisErrorKind int

const (
FermyonSpin2_0_0_RedisErrorKindInvalidAddress FermyonSpin2_0_0_RedisErrorKind = iota
FermyonSpin2_0_0_RedisErrorKindTooManyConnections
FermyonSpin2_0_0_RedisErrorKindTypeError
FermyonSpin2_0_0_RedisErrorKindOther
)

type FermyonSpin2_0_0_RedisError struct {
  kind FermyonSpin2_0_0_RedisErrorKind
  val any
}

func (n FermyonSpin2_0_0_RedisError) Kind() FermyonSpin2_0_0_RedisErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_RedisErrorInvalidAddress() FermyonSpin2_0_0_RedisError{
  return FermyonSpin2_0_0_RedisError{kind: FermyonSpin2_0_0_RedisErrorKindInvalidAddress}
}

func FermyonSpin2_0_0_RedisErrorTooManyConnections() FermyonSpin2_0_0_RedisError{
  return FermyonSpin2_0_0_RedisError{kind: FermyonSpin2_0_0_RedisErrorKindTooManyConnections}
}

func FermyonSpin2_0_0_RedisErrorTypeError() FermyonSpin2_0_0_RedisError{
  return FermyonSpin2_0_0_RedisError{kind: FermyonSpin2_0_0_RedisErrorKindTypeError}
}

func FermyonSpin2_0_0_RedisErrorOther(v string) FermyonSpin2_0_0_RedisError{
  return FermyonSpin2_0_0_RedisError{kind: FermyonSpin2_0_0_RedisErrorKindOther, val: v}
}

func (n FermyonSpin2_0_0_RedisError) GetOther() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RedisErrorKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RedisError) SetOther(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RedisErrorKindOther
}

// FermyonSpin2_0_0_RedisConnection is a handle to imported resource connection
type FermyonSpin2_0_0_RedisConnection int32

//go:wasmimport fermyon:spin/redis@2.0.0 [resource-drop]connection
func _FermyonSpin2_0_0_RedisConnection_drop(self FermyonSpin2_0_0_RedisConnection)

func (self FermyonSpin2_0_0_RedisConnection) Drop() {
  _FermyonSpin2_0_0_RedisConnection_drop(self)
}

type FermyonSpin2_0_0_RedisPayload = uint8
type FermyonSpin2_0_0_RedisRedisParameterKind int

const (
FermyonSpin2_0_0_RedisRedisParameterKindInt64 FermyonSpin2_0_0_RedisRedisParameterKind = iota
FermyonSpin2_0_0_RedisRedisParameterKindBinary
)

type FermyonSpin2_0_0_RedisRedisParameter struct {
  kind FermyonSpin2_0_0_RedisRedisParameterKind
  val any
}

func (n FermyonSpin2_0_0_RedisRedisParameter) Kind() FermyonSpin2_0_0_RedisRedisParameterKind {
  return n.kind
}

func FermyonSpin2_0_0_RedisRedisParameterInt64(v int64) FermyonSpin2_0_0_RedisRedisParameter{
  return FermyonSpin2_0_0_RedisRedisParameter{kind: FermyonSpin2_0_0_RedisRedisParameterKindInt64, val: v}
}

func (n FermyonSpin2_0_0_RedisRedisParameter) GetInt64() int64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RedisRedisParameterKindInt64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int64)
}

func (n *FermyonSpin2_0_0_RedisRedisParameter) SetInt64(v int64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RedisRedisParameterKindInt64
}

func FermyonSpin2_0_0_RedisRedisParameterBinary(v []uint8) FermyonSpin2_0_0_RedisRedisParameter{
  return FermyonSpin2_0_0_RedisRedisParameter{kind: FermyonSpin2_0_0_RedisRedisParameterKindBinary, val: v}
}

func (n FermyonSpin2_0_0_RedisRedisParameter) GetBinary() []uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RedisRedisParameterKindBinary; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.([]uint8)
}

func (n *FermyonSpin2_0_0_RedisRedisParameter) SetBinary(v []uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RedisRedisParameterKindBinary
}

type FermyonSpin2_0_0_RedisRedisResultKind int

const (
FermyonSpin2_0_0_RedisRedisResultKindNil FermyonSpin2_0_0_RedisRedisResultKind = iota
FermyonSpin2_0_0_RedisRedisResultKindStatus
FermyonSpin2_0_0_RedisRedisResultKindInt64
FermyonSpin2_0_0_RedisRedisResultKindBinary
)

type FermyonSpin2_0_0_RedisRedisResult struct {
  kind FermyonSpin2_0_0_RedisRedisResultKind
  val any
}

func (n FermyonSpin2_0_0_RedisRedisResult) Kind() FermyonSpin2_0_0_RedisRedisResultKind {
  return n.kind
}

func FermyonSpin2_0_0_RedisRedisResultNil() FermyonSpin2_0_0_RedisRedisResult{
  return FermyonSpin2_0_0_RedisRedisResult{kind: FermyonSpin2_0_0_RedisRedisResultKindNil}
}

func FermyonSpin2_0_0_RedisRedisResultStatus(v string) FermyonSpin2_0_0_RedisRedisResult{
  return FermyonSpin2_0_0_RedisRedisResult{kind: FermyonSpin2_0_0_RedisRedisResultKindStatus, val: v}
}

func (n FermyonSpin2_0_0_RedisRedisResult) GetStatus() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RedisRedisResultKindStatus; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RedisRedisResult) SetStatus(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RedisRedisResultKindStatus
}

func FermyonSpin2_0_0_RedisRedisResultInt64(v int64) FermyonSpin2_0_0_RedisRedisResult{
  return FermyonSpin2_0_0_RedisRedisResult{kind: FermyonSpin2_0_0_RedisRedisResultKindInt64, val: v}
}

func (n FermyonSpin2_0_0_RedisRedisResult) GetInt64() int64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RedisRedisResultKindInt64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int64)
}

func (n *FermyonSpin2_0_0_RedisRedisResult) SetInt64(v int64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RedisRedisResultKindInt64
}

func FermyonSpin2_0_0_RedisRedisResultBinary(v []uint8) FermyonSpin2_0_0_RedisRedisResult{
  return FermyonSpin2_0_0_RedisRedisResult{kind: FermyonSpin2_0_0_RedisRedisResultKindBinary, val: v}
}

func (n FermyonSpin2_0_0_RedisRedisResult) GetBinary() []uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RedisRedisResultKindBinary; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.([]uint8)
}

func (n *FermyonSpin2_0_0_RedisRedisResult) SetBinary(v []uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RedisRedisResultKindBinary
}

func StaticConnectionOpen(address string) Result[FermyonSpin2_0_0_RedisConnection, FermyonSpin2_0_0_RedisError] {
  var lower_address C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_address.ptr = (*uint8)(unsafe.Pointer(C.CString(address)))
  lower_address.len = C.size_t(len(address))
  var ret C.fermyon_spin_2_0_0_redis_result_own_connection_error_t
  C.fermyon_spin_2_0_0_redis_static_connection_open(&lower_address , &ret )
  var lift_ret Result[FermyonSpin2_0_0_RedisConnection, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_own_connection_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisConnection
    lift_ret_val = FermyonSpin2_0_0_RedisConnection(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Publish(channel string, payload []uint8) Result[struct{}, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_channel C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_channel.ptr = (*uint8)(unsafe.Pointer(C.CString(channel)))
  lower_channel.len = C.size_t(len(channel))
  var lower_payload C.fermyon_spin_2_0_0_redis_payload_t
  if len(payload) == 0 {
    lower_payload.ptr = nil
    lower_payload.len = 0
  } else {
    var empty_lower_payload C.uint8_t
    lower_payload.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(payload)) * C.size_t(unsafe.Sizeof(empty_lower_payload))))
    lower_payload.len = C.size_t(len(payload))
    for lower_payload_i := range payload {
      lower_payload_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_payload.ptr)) +
      uintptr(lower_payload_i)*unsafe.Sizeof(empty_lower_payload)))
      lower_payload_ptr_value := C.uint8_t(payload[lower_payload_i])
      *lower_payload_ptr = lower_payload_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_redis_result_void_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_publish(lower_self , &lower_channel , &lower_payload , &ret )
  var lift_ret Result[struct{}, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Get(key string) Result[Option[[]uint8], FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var ret C.fermyon_spin_2_0_0_redis_result_option_payload_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_get(lower_self , &lower_key , &ret )
  var lift_ret Result[Option[[]uint8], FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_option_payload_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val Option[[]uint8]
    if lift_ret_ptr.is_some {
      var lift_ret_val_val []uint8
      lift_ret_val_val = make([]uint8, lift_ret_ptr.val.len)
      if lift_ret_ptr.val.len > 0 {
        for lift_ret_val_val_i := 0; lift_ret_val_val_i < int(lift_ret_ptr.val.len); lift_ret_val_val_i++ {
          var empty_lift_ret_val_val C.uint8_t
          lift_ret_val_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.val.ptr)) +
          uintptr(lift_ret_val_val_i)*unsafe.Sizeof(empty_lift_ret_val_val)))
          var list_lift_ret_val_val uint8
          list_lift_ret_val_val = uint8(lift_ret_val_val_ptr)
          lift_ret_val_val[lift_ret_val_val_i] = list_lift_ret_val_val
        }
      }
      lift_ret_val.Set(lift_ret_val_val)
    } else {
      lift_ret_val.Unset()
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Set(key string, value []uint8) Result[struct{}, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var lower_value C.fermyon_spin_2_0_0_redis_payload_t
  if len(value) == 0 {
    lower_value.ptr = nil
    lower_value.len = 0
  } else {
    var empty_lower_value C.uint8_t
    lower_value.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(value)) * C.size_t(unsafe.Sizeof(empty_lower_value))))
    lower_value.len = C.size_t(len(value))
    for lower_value_i := range value {
      lower_value_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_value.ptr)) +
      uintptr(lower_value_i)*unsafe.Sizeof(empty_lower_value)))
      lower_value_ptr_value := C.uint8_t(value[lower_value_i])
      *lower_value_ptr = lower_value_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_redis_result_void_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_set(lower_self , &lower_key , &lower_value , &ret )
  var lift_ret Result[struct{}, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Incr(key string) Result[int64, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var ret C.fermyon_spin_2_0_0_redis_result_s64_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_incr(lower_self , &lower_key , &ret )
  var lift_ret Result[int64, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.int64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val int64
    lift_ret_val = int64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Del(keys []string) Result[uint32, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_keys C.http_trigger_list_string_t
  if len(keys) == 0 {
    lower_keys.ptr = nil
    lower_keys.len = 0
  } else {
    var empty_lower_keys C.http_trigger_string_t
    lower_keys.ptr = (*C.http_trigger_string_t)(C.malloc(C.size_t(len(keys)) * C.size_t(unsafe.Sizeof(empty_lower_keys))))
    lower_keys.len = C.size_t(len(keys))
    for lower_keys_i := range keys {
      lower_keys_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_keys.ptr)) +
      uintptr(lower_keys_i)*unsafe.Sizeof(empty_lower_keys)))
      var lower_keys_ptr_value C.http_trigger_string_t

      // use unsafe.Pointer to avoid copy
      lower_keys_ptr_value.ptr = (*uint8)(unsafe.Pointer(C.CString(keys[lower_keys_i])))
      lower_keys_ptr_value.len = C.size_t(len(keys[lower_keys_i]))
      *lower_keys_ptr = lower_keys_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_redis_result_u32_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_del(lower_self , &lower_keys , &ret )
  var lift_ret Result[uint32, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint32_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint32
    lift_ret_val = uint32(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Sadd(key string, values []string) Result[uint32, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var lower_values C.http_trigger_list_string_t
  if len(values) == 0 {
    lower_values.ptr = nil
    lower_values.len = 0
  } else {
    var empty_lower_values C.http_trigger_string_t
    lower_values.ptr = (*C.http_trigger_string_t)(C.malloc(C.size_t(len(values)) * C.size_t(unsafe.Sizeof(empty_lower_values))))
    lower_values.len = C.size_t(len(values))
    for lower_values_i := range values {
      lower_values_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_values.ptr)) +
      uintptr(lower_values_i)*unsafe.Sizeof(empty_lower_values)))
      var lower_values_ptr_value C.http_trigger_string_t

      // use unsafe.Pointer to avoid copy
      lower_values_ptr_value.ptr = (*uint8)(unsafe.Pointer(C.CString(values[lower_values_i])))
      lower_values_ptr_value.len = C.size_t(len(values[lower_values_i]))
      *lower_values_ptr = lower_values_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_redis_result_u32_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_sadd(lower_self , &lower_key , &lower_values , &ret )
  var lift_ret Result[uint32, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint32_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint32
    lift_ret_val = uint32(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Smembers(key string) Result[[]string, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var ret C.fermyon_spin_2_0_0_redis_result_list_string_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_smembers(lower_self , &lower_key , &ret )
  var lift_ret Result[[]string, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_list_string_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val []string
    lift_ret_val = make([]string, lift_ret_ptr.len)
    if lift_ret_ptr.len > 0 {
      for lift_ret_val_i := 0; lift_ret_val_i < int(lift_ret_ptr.len); lift_ret_val_i++ {
        var empty_lift_ret_val C.http_trigger_string_t
        lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
        uintptr(lift_ret_val_i)*unsafe.Sizeof(empty_lift_ret_val)))
        var list_lift_ret_val string
        list_lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
        lift_ret_val[lift_ret_val_i] = list_lift_ret_val
      }
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Srem(key string, values []string) Result[uint32, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var lower_values C.http_trigger_list_string_t
  if len(values) == 0 {
    lower_values.ptr = nil
    lower_values.len = 0
  } else {
    var empty_lower_values C.http_trigger_string_t
    lower_values.ptr = (*C.http_trigger_string_t)(C.malloc(C.size_t(len(values)) * C.size_t(unsafe.Sizeof(empty_lower_values))))
    lower_values.len = C.size_t(len(values))
    for lower_values_i := range values {
      lower_values_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_values.ptr)) +
      uintptr(lower_values_i)*unsafe.Sizeof(empty_lower_values)))
      var lower_values_ptr_value C.http_trigger_string_t

      // use unsafe.Pointer to avoid copy
      lower_values_ptr_value.ptr = (*uint8)(unsafe.Pointer(C.CString(values[lower_values_i])))
      lower_values_ptr_value.len = C.size_t(len(values[lower_values_i]))
      *lower_values_ptr = lower_values_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_redis_result_u32_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_srem(lower_self , &lower_key , &lower_values , &ret )
  var lift_ret Result[uint32, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint32_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint32
    lift_ret_val = uint32(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_RedisConnection) Execute(command string, arguments []FermyonSpin2_0_0_RedisRedisParameter) Result[[]FermyonSpin2_0_0_RedisRedisResult, FermyonSpin2_0_0_RedisError] {
  var lower_self C.fermyon_spin_2_0_0_redis_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_command C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_command.ptr = (*uint8)(unsafe.Pointer(C.CString(command)))
  lower_command.len = C.size_t(len(command))
  var lower_arguments C.fermyon_spin_2_0_0_redis_list_redis_parameter_t
  if len(arguments) == 0 {
    lower_arguments.ptr = nil
    lower_arguments.len = 0
  } else {
    var empty_lower_arguments C.fermyon_spin_2_0_0_redis_redis_parameter_t
    lower_arguments.ptr = (*C.fermyon_spin_2_0_0_redis_redis_parameter_t)(C.malloc(C.size_t(len(arguments)) * C.size_t(unsafe.Sizeof(empty_lower_arguments))))
    lower_arguments.len = C.size_t(len(arguments))
    for lower_arguments_i := range arguments {
      lower_arguments_ptr := (*C.fermyon_spin_2_0_0_redis_redis_parameter_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_arguments.ptr)) +
      uintptr(lower_arguments_i)*unsafe.Sizeof(empty_lower_arguments)))
      var lower_arguments_ptr_value C.fermyon_spin_2_0_0_redis_redis_parameter_t
      if arguments[lower_arguments_i].Kind() == FermyonSpin2_0_0_RedisRedisParameterKindInt64 {

        lower_arguments_ptr_value.tag = 0
        lower_arguments_ptr_value_ptr := (*C.int64_t)(unsafe.Pointer(&lower_arguments_ptr_value.val))
        lower_arguments_ptr_value_val := C.int64_t(arguments[lower_arguments_i].GetInt64())
        *lower_arguments_ptr_value_ptr = lower_arguments_ptr_value_val
      }
      if arguments[lower_arguments_i].Kind() == FermyonSpin2_0_0_RedisRedisParameterKindBinary {

        lower_arguments_ptr_value.tag = 1
        lower_arguments_ptr_value_ptr := (*C.fermyon_spin_2_0_0_redis_payload_t)(unsafe.Pointer(&lower_arguments_ptr_value.val))
        var lower_arguments_ptr_value_val C.fermyon_spin_2_0_0_redis_payload_t
        if len(arguments[lower_arguments_i].GetBinary()) == 0 {
          lower_arguments_ptr_value_val.ptr = nil
          lower_arguments_ptr_value_val.len = 0
        } else {
          var empty_lower_arguments_ptr_value_val C.uint8_t
          lower_arguments_ptr_value_val.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(arguments[lower_arguments_i].GetBinary())) * C.size_t(unsafe.Sizeof(empty_lower_arguments_ptr_value_val))))
          lower_arguments_ptr_value_val.len = C.size_t(len(arguments[lower_arguments_i].GetBinary()))
          for lower_arguments_ptr_value_val_i := range arguments[lower_arguments_i].GetBinary() {
            lower_arguments_ptr_value_val_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_arguments_ptr_value_val.ptr)) +
            uintptr(lower_arguments_ptr_value_val_i)*unsafe.Sizeof(empty_lower_arguments_ptr_value_val)))
            lower_arguments_ptr_value_val_ptr_value := C.uint8_t(arguments[lower_arguments_i].GetBinary()[lower_arguments_ptr_value_val_i])
            *lower_arguments_ptr_value_val_ptr = lower_arguments_ptr_value_val_ptr_value
          }
        }
        *lower_arguments_ptr_value_ptr = lower_arguments_ptr_value_val
      }
      *lower_arguments_ptr = lower_arguments_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_redis_result_list_redis_result_error_t
  C.fermyon_spin_2_0_0_redis_method_connection_execute(lower_self , &lower_command , &lower_arguments , &ret )
  var lift_ret Result[[]FermyonSpin2_0_0_RedisRedisResult, FermyonSpin2_0_0_RedisError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_RedisError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_RedisErrorTypeError()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_RedisErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_redis_list_redis_result_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val []FermyonSpin2_0_0_RedisRedisResult
    lift_ret_val = make([]FermyonSpin2_0_0_RedisRedisResult, lift_ret_ptr.len)
    if lift_ret_ptr.len > 0 {
      for lift_ret_val_i := 0; lift_ret_val_i < int(lift_ret_ptr.len); lift_ret_val_i++ {
        var empty_lift_ret_val C.fermyon_spin_2_0_0_redis_redis_result_t
        lift_ret_val_ptr := *(*C.fermyon_spin_2_0_0_redis_redis_result_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
        uintptr(lift_ret_val_i)*unsafe.Sizeof(empty_lift_ret_val)))
        var list_lift_ret_val FermyonSpin2_0_0_RedisRedisResult
        if lift_ret_val_ptr.tag == 0 {
          list_lift_ret_val = FermyonSpin2_0_0_RedisRedisResultNil()
        }
        if lift_ret_val_ptr.tag == 1 {
          list_lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
          var list_lift_ret_val_val string
          list_lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(list_lift_ret_val_ptr.ptr)), C.int(list_lift_ret_val_ptr.len))
          list_lift_ret_val = FermyonSpin2_0_0_RedisRedisResultStatus(list_lift_ret_val_val)
        }
        if lift_ret_val_ptr.tag == 2 {
          list_lift_ret_val_ptr := *(*C.int64_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
          var list_lift_ret_val_val int64
          list_lift_ret_val_val = int64(list_lift_ret_val_ptr)
          list_lift_ret_val = FermyonSpin2_0_0_RedisRedisResultInt64(list_lift_ret_val_val)
        }
        if lift_ret_val_ptr.tag == 3 {
          list_lift_ret_val_ptr := *(*C.fermyon_spin_2_0_0_redis_payload_t)(unsafe.Pointer(&lift_ret_val_ptr.val))
          var list_lift_ret_val_val []uint8
          list_lift_ret_val_val = make([]uint8, list_lift_ret_val_ptr.len)
          if list_lift_ret_val_ptr.len > 0 {
            for list_lift_ret_val_val_i := 0; list_lift_ret_val_val_i < int(list_lift_ret_val_ptr.len); list_lift_ret_val_val_i++ {
              var empty_list_lift_ret_val_val C.uint8_t
              list_lift_ret_val_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(list_lift_ret_val_ptr.ptr)) +
              uintptr(list_lift_ret_val_val_i)*unsafe.Sizeof(empty_list_lift_ret_val_val)))
              var list_list_lift_ret_val_val uint8
              list_list_lift_ret_val_val = uint8(list_lift_ret_val_val_ptr)
              list_lift_ret_val_val[list_lift_ret_val_val_i] = list_list_lift_ret_val_val
            }
          }
          list_lift_ret_val = FermyonSpin2_0_0_RedisRedisResultBinary(list_lift_ret_val_val)
        }
        lift_ret_val[lift_ret_val_i] = list_lift_ret_val
      }
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from fermyon:spin/mqtt@2.0.0
type FermyonSpin2_0_0_MqttErrorKind int

const (
FermyonSpin2_0_0_MqttErrorKindInvalidAddress FermyonSpin2_0_0_MqttErrorKind = iota
FermyonSpin2_0_0_MqttErrorKindTooManyConnections
FermyonSpin2_0_0_MqttErrorKindConnectionFailed
FermyonSpin2_0_0_MqttErrorKindOther
)

type FermyonSpin2_0_0_MqttError struct {
  kind FermyonSpin2_0_0_MqttErrorKind
  val any
}

func (n FermyonSpin2_0_0_MqttError) Kind() FermyonSpin2_0_0_MqttErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_MqttErrorInvalidAddress() FermyonSpin2_0_0_MqttError{
  return FermyonSpin2_0_0_MqttError{kind: FermyonSpin2_0_0_MqttErrorKindInvalidAddress}
}

func FermyonSpin2_0_0_MqttErrorTooManyConnections() FermyonSpin2_0_0_MqttError{
  return FermyonSpin2_0_0_MqttError{kind: FermyonSpin2_0_0_MqttErrorKindTooManyConnections}
}

func FermyonSpin2_0_0_MqttErrorConnectionFailed(v string) FermyonSpin2_0_0_MqttError{
  return FermyonSpin2_0_0_MqttError{kind: FermyonSpin2_0_0_MqttErrorKindConnectionFailed, val: v}
}

func (n FermyonSpin2_0_0_MqttError) GetConnectionFailed() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_MqttErrorKindConnectionFailed; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_MqttError) SetConnectionFailed(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_MqttErrorKindConnectionFailed
}

func FermyonSpin2_0_0_MqttErrorOther(v string) FermyonSpin2_0_0_MqttError{
  return FermyonSpin2_0_0_MqttError{kind: FermyonSpin2_0_0_MqttErrorKindOther, val: v}
}

func (n FermyonSpin2_0_0_MqttError) GetOther() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_MqttErrorKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_MqttError) SetOther(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_MqttErrorKindOther
}

type FermyonSpin2_0_0_MqttQosKind int

const (
FermyonSpin2_0_0_MqttQosKindAtMostOnce FermyonSpin2_0_0_MqttQosKind = iota
FermyonSpin2_0_0_MqttQosKindAtLeastOnce
FermyonSpin2_0_0_MqttQosKindExactlyOnce
)

type FermyonSpin2_0_0_MqttQos struct {
  kind FermyonSpin2_0_0_MqttQosKind
}

func (n FermyonSpin2_0_0_MqttQos) Kind() FermyonSpin2_0_0_MqttQosKind {
  return n.kind
}

func FermyonSpin2_0_0_MqttQosAtMostOnce() FermyonSpin2_0_0_MqttQos{
  return FermyonSpin2_0_0_MqttQos{kind: FermyonSpin2_0_0_MqttQosKindAtMostOnce}
}

func FermyonSpin2_0_0_MqttQosAtLeastOnce() FermyonSpin2_0_0_MqttQos{
  return FermyonSpin2_0_0_MqttQos{kind: FermyonSpin2_0_0_MqttQosKindAtLeastOnce}
}

func FermyonSpin2_0_0_MqttQosExactlyOnce() FermyonSpin2_0_0_MqttQos{
  return FermyonSpin2_0_0_MqttQos{kind: FermyonSpin2_0_0_MqttQosKindExactlyOnce}
}

// FermyonSpin2_0_0_MqttConnection is a handle to imported resource connection
type FermyonSpin2_0_0_MqttConnection int32

//go:wasmimport fermyon:spin/mqtt@2.0.0 [resource-drop]connection
func _FermyonSpin2_0_0_MqttConnection_drop(self FermyonSpin2_0_0_MqttConnection)

func (self FermyonSpin2_0_0_MqttConnection) Drop() {
  _FermyonSpin2_0_0_MqttConnection_drop(self)
}

type FermyonSpin2_0_0_MqttPayload = uint8
func StaticConnectionOpen(address string, username string, password string, keep_alive_interval_in_secs uint64) Result[FermyonSpin2_0_0_MqttConnection, FermyonSpin2_0_0_MqttError] {
  var lower_address C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_address.ptr = (*uint8)(unsafe.Pointer(C.CString(address)))
  lower_address.len = C.size_t(len(address))
  var lower_username C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_username.ptr = (*uint8)(unsafe.Pointer(C.CString(username)))
  lower_username.len = C.size_t(len(username))
  var lower_password C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_password.ptr = (*uint8)(unsafe.Pointer(C.CString(password)))
  lower_password.len = C.size_t(len(password))
  lower_keep_alive_interval_in_secs := C.uint64_t(keep_alive_interval_in_secs)
  var ret C.fermyon_spin_2_0_0_mqtt_result_own_connection_error_t
  C.fermyon_spin_2_0_0_mqtt_static_connection_open(&lower_address , &lower_username , &lower_password , lower_keep_alive_interval_in_secs , &ret )
  var lift_ret Result[FermyonSpin2_0_0_MqttConnection, FermyonSpin2_0_0_MqttError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mqtt_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MqttError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_MqttErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_MqttErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_MqttErrorConnectionFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_MqttErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mqtt_own_connection_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MqttConnection
    lift_ret_val = FermyonSpin2_0_0_MqttConnection(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_MqttConnection) Publish(topic string, payload []uint8, qos FermyonSpin2_0_0_MqttQos) Result[struct{}, FermyonSpin2_0_0_MqttError] {
  var lower_self C.fermyon_spin_2_0_0_mqtt_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_topic C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_topic.ptr = (*uint8)(unsafe.Pointer(C.CString(topic)))
  lower_topic.len = C.size_t(len(topic))
  var lower_payload C.fermyon_spin_2_0_0_mqtt_payload_t
  if len(payload) == 0 {
    lower_payload.ptr = nil
    lower_payload.len = 0
  } else {
    var empty_lower_payload C.uint8_t
    lower_payload.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(payload)) * C.size_t(unsafe.Sizeof(empty_lower_payload))))
    lower_payload.len = C.size_t(len(payload))
    for lower_payload_i := range payload {
      lower_payload_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_payload.ptr)) +
      uintptr(lower_payload_i)*unsafe.Sizeof(empty_lower_payload)))
      lower_payload_ptr_value := C.uint8_t(payload[lower_payload_i])
      *lower_payload_ptr = lower_payload_ptr_value
    }
  }
  var lower_qos C.fermyon_spin_2_0_0_mqtt_qos_t
  if qos.Kind() == FermyonSpin2_0_0_MqttQosKindAtMostOnce {
    lower_qos = 0
  }
  if qos.Kind() == FermyonSpin2_0_0_MqttQosKindAtLeastOnce {
    lower_qos = 1
  }
  if qos.Kind() == FermyonSpin2_0_0_MqttQosKindExactlyOnce {
    lower_qos = 2
  }
  var ret C.fermyon_spin_2_0_0_mqtt_result_void_error_t
  C.fermyon_spin_2_0_0_mqtt_method_connection_publish(lower_self , &lower_topic , &lower_payload , lower_qos , &ret )
  var lift_ret Result[struct{}, FermyonSpin2_0_0_MqttError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mqtt_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MqttError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_MqttErrorInvalidAddress()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_MqttErrorTooManyConnections()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_MqttErrorConnectionFailed(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_MqttErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

// Import functions from fermyon:spin/rdbms-types@2.0.0
type FermyonSpin2_0_0_RdbmsTypesErrorKind int

const (
FermyonSpin2_0_0_RdbmsTypesErrorKindConnectionFailed FermyonSpin2_0_0_RdbmsTypesErrorKind = iota
FermyonSpin2_0_0_RdbmsTypesErrorKindBadParameter
FermyonSpin2_0_0_RdbmsTypesErrorKindQueryFailed
FermyonSpin2_0_0_RdbmsTypesErrorKindValueConversionFailed
FermyonSpin2_0_0_RdbmsTypesErrorKindOther
)

type FermyonSpin2_0_0_RdbmsTypesError struct {
  kind FermyonSpin2_0_0_RdbmsTypesErrorKind
  val any
}

func (n FermyonSpin2_0_0_RdbmsTypesError) Kind() FermyonSpin2_0_0_RdbmsTypesErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(v string) FermyonSpin2_0_0_RdbmsTypesError{
  return FermyonSpin2_0_0_RdbmsTypesError{kind: FermyonSpin2_0_0_RdbmsTypesErrorKindConnectionFailed, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesError) GetConnectionFailed() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesErrorKindConnectionFailed; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesError) SetConnectionFailed(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesErrorKindConnectionFailed
}

func FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(v string) FermyonSpin2_0_0_RdbmsTypesError{
  return FermyonSpin2_0_0_RdbmsTypesError{kind: FermyonSpin2_0_0_RdbmsTypesErrorKindBadParameter, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesError) GetBadParameter() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesErrorKindBadParameter; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesError) SetBadParameter(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesErrorKindBadParameter
}

func FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(v string) FermyonSpin2_0_0_RdbmsTypesError{
  return FermyonSpin2_0_0_RdbmsTypesError{kind: FermyonSpin2_0_0_RdbmsTypesErrorKindQueryFailed, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesError) GetQueryFailed() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesErrorKindQueryFailed; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesError) SetQueryFailed(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesErrorKindQueryFailed
}

func FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(v string) FermyonSpin2_0_0_RdbmsTypesError{
  return FermyonSpin2_0_0_RdbmsTypesError{kind: FermyonSpin2_0_0_RdbmsTypesErrorKindValueConversionFailed, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesError) GetValueConversionFailed() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesErrorKindValueConversionFailed; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesError) SetValueConversionFailed(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesErrorKindValueConversionFailed
}

func FermyonSpin2_0_0_RdbmsTypesErrorOther(v string) FermyonSpin2_0_0_RdbmsTypesError{
  return FermyonSpin2_0_0_RdbmsTypesError{kind: FermyonSpin2_0_0_RdbmsTypesErrorKindOther, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesError) GetOther() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesErrorKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesError) SetOther(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesErrorKindOther
}

type FermyonSpin2_0_0_RdbmsTypesDbDataTypeKind int

const (
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindBoolean FermyonSpin2_0_0_RdbmsTypesDbDataTypeKind = iota
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt8
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt16
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt32
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt64
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint8
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint16
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint32
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint64
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindFloating32
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindFloating64
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindStr
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindBinary
FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindOther
)

type FermyonSpin2_0_0_RdbmsTypesDbDataType struct {
  kind FermyonSpin2_0_0_RdbmsTypesDbDataTypeKind
}

func (n FermyonSpin2_0_0_RdbmsTypesDbDataType) Kind() FermyonSpin2_0_0_RdbmsTypesDbDataTypeKind {
  return n.kind
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeBoolean() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindBoolean}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt8() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt8}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt16() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt16}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt32() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt32}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt64() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindInt64}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint8() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint8}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint16() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint16}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint32() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint32}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint64() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindUint64}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeFloating32() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindFloating32}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeFloating64() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindFloating64}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeStr() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindStr}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeBinary() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindBinary}
}

func FermyonSpin2_0_0_RdbmsTypesDbDataTypeOther() FermyonSpin2_0_0_RdbmsTypesDbDataType{
  return FermyonSpin2_0_0_RdbmsTypesDbDataType{kind: FermyonSpin2_0_0_RdbmsTypesDbDataTypeKindOther}
}

type FermyonSpin2_0_0_RdbmsTypesDbValueKind int

const (
FermyonSpin2_0_0_RdbmsTypesDbValueKindBoolean FermyonSpin2_0_0_RdbmsTypesDbValueKind = iota
FermyonSpin2_0_0_RdbmsTypesDbValueKindInt8
FermyonSpin2_0_0_RdbmsTypesDbValueKindInt16
FermyonSpin2_0_0_RdbmsTypesDbValueKindInt32
FermyonSpin2_0_0_RdbmsTypesDbValueKindInt64
FermyonSpin2_0_0_RdbmsTypesDbValueKindUint8
FermyonSpin2_0_0_RdbmsTypesDbValueKindUint16
FermyonSpin2_0_0_RdbmsTypesDbValueKindUint32
FermyonSpin2_0_0_RdbmsTypesDbValueKindUint64
FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating32
FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating64
FermyonSpin2_0_0_RdbmsTypesDbValueKindStr
FermyonSpin2_0_0_RdbmsTypesDbValueKindBinary
FermyonSpin2_0_0_RdbmsTypesDbValueKindDbNull
FermyonSpin2_0_0_RdbmsTypesDbValueKindUnsupported
)

type FermyonSpin2_0_0_RdbmsTypesDbValue struct {
  kind FermyonSpin2_0_0_RdbmsTypesDbValueKind
  val any
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) Kind() FermyonSpin2_0_0_RdbmsTypesDbValueKind {
  return n.kind
}

func FermyonSpin2_0_0_RdbmsTypesDbValueBoolean(v bool) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindBoolean, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetBoolean() bool{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindBoolean; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(bool)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetBoolean(v bool) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindBoolean
}

func FermyonSpin2_0_0_RdbmsTypesDbValueInt8(v int8) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindInt8, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetInt8() int8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindInt8; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int8)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetInt8(v int8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindInt8
}

func FermyonSpin2_0_0_RdbmsTypesDbValueInt16(v int16) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindInt16, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetInt16() int16{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindInt16; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int16)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetInt16(v int16) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindInt16
}

func FermyonSpin2_0_0_RdbmsTypesDbValueInt32(v int32) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindInt32, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetInt32() int32{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindInt32; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int32)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetInt32(v int32) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindInt32
}

func FermyonSpin2_0_0_RdbmsTypesDbValueInt64(v int64) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindInt64, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetInt64() int64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindInt64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int64)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetInt64(v int64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindInt64
}

func FermyonSpin2_0_0_RdbmsTypesDbValueUint8(v uint8) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindUint8, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetUint8() uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindUint8; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint8)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetUint8(v uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindUint8
}

func FermyonSpin2_0_0_RdbmsTypesDbValueUint16(v uint16) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindUint16, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetUint16() uint16{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindUint16; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint16)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetUint16(v uint16) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindUint16
}

func FermyonSpin2_0_0_RdbmsTypesDbValueUint32(v uint32) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindUint32, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetUint32() uint32{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindUint32; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint32)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetUint32(v uint32) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindUint32
}

func FermyonSpin2_0_0_RdbmsTypesDbValueUint64(v uint64) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindUint64, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetUint64() uint64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindUint64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint64)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetUint64(v uint64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindUint64
}

func FermyonSpin2_0_0_RdbmsTypesDbValueFloating32(v float32) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating32, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetFloating32() float32{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating32; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(float32)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetFloating32(v float32) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating32
}

func FermyonSpin2_0_0_RdbmsTypesDbValueFloating64(v float64) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating64, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetFloating64() float64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(float64)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetFloating64(v float64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindFloating64
}

func FermyonSpin2_0_0_RdbmsTypesDbValueStr(v string) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindStr, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetStr() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindStr; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetStr(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindStr
}

func FermyonSpin2_0_0_RdbmsTypesDbValueBinary(v []uint8) FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindBinary, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesDbValue) GetBinary() []uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesDbValueKindBinary; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.([]uint8)
}

func (n *FermyonSpin2_0_0_RdbmsTypesDbValue) SetBinary(v []uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesDbValueKindBinary
}

func FermyonSpin2_0_0_RdbmsTypesDbValueDbNull() FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindDbNull}
}

func FermyonSpin2_0_0_RdbmsTypesDbValueUnsupported() FermyonSpin2_0_0_RdbmsTypesDbValue{
  return FermyonSpin2_0_0_RdbmsTypesDbValue{kind: FermyonSpin2_0_0_RdbmsTypesDbValueKindUnsupported}
}

type FermyonSpin2_0_0_RdbmsTypesParameterValueKind int

const (
FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean FermyonSpin2_0_0_RdbmsTypesParameterValueKind = iota
FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8
FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16
FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32
FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64
FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8
FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16
FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32
FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64
FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32
FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64
FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr
FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary
FermyonSpin2_0_0_RdbmsTypesParameterValueKindDbNull
)

type FermyonSpin2_0_0_RdbmsTypesParameterValue struct {
  kind FermyonSpin2_0_0_RdbmsTypesParameterValueKind
  val any
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) Kind() FermyonSpin2_0_0_RdbmsTypesParameterValueKind {
  return n.kind
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueBoolean(v bool) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetBoolean() bool{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(bool)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetBoolean(v bool) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueInt8(v int8) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetInt8() int8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int8)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetInt8(v int8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueInt16(v int16) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetInt16() int16{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int16)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetInt16(v int16) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueInt32(v int32) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetInt32() int32{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int32)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetInt32(v int32) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueInt64(v int64) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetInt64() int64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int64)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetInt64(v int64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueUint8(v uint8) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetUint8() uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint8)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetUint8(v uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueUint16(v uint16) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetUint16() uint16{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint16)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetUint16(v uint16) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueUint32(v uint32) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetUint32() uint32{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint32)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetUint32(v uint32) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueUint64(v uint64) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetUint64() uint64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(uint64)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetUint64(v uint64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueFloating32(v float32) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetFloating32() float32{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(float32)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetFloating32(v float32) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueFloating64(v float64) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetFloating64() float64{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(float64)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetFloating64(v float64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueStr(v string) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetStr() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetStr(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueBinary(v []uint8) FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary, val: v}
}

func (n FermyonSpin2_0_0_RdbmsTypesParameterValue) GetBinary() []uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.([]uint8)
}

func (n *FermyonSpin2_0_0_RdbmsTypesParameterValue) SetBinary(v []uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary
}

func FermyonSpin2_0_0_RdbmsTypesParameterValueDbNull() FermyonSpin2_0_0_RdbmsTypesParameterValue{
  return FermyonSpin2_0_0_RdbmsTypesParameterValue{kind: FermyonSpin2_0_0_RdbmsTypesParameterValueKindDbNull}
}

type FermyonSpin2_0_0_RdbmsTypesColumn struct {
  Name string
  DataType FermyonSpin2_0_0_RdbmsTypesDbDataType
}

type FermyonSpin2_0_0_RdbmsTypesRow = FermyonSpin2_0_0_RdbmsTypesDbValue
type FermyonSpin2_0_0_RdbmsTypesRowSet struct {
  Columns []FermyonSpin2_0_0_RdbmsTypesColumn
  Rows [][]FermyonSpin2_0_0_RdbmsTypesDbValue
}

// Import functions from fermyon:spin/postgres@2.0.0
type FermyonSpin2_0_0_PostgresParameterValue = FermyonSpin2_0_0_RdbmsTypesParameterValue
type FermyonSpin2_0_0_PostgresRowSet = FermyonSpin2_0_0_RdbmsTypesRowSet
type FermyonSpin2_0_0_PostgresError = FermyonSpin2_0_0_RdbmsTypesError
// FermyonSpin2_0_0_PostgresConnection is a handle to imported resource connection
type FermyonSpin2_0_0_PostgresConnection int32

//go:wasmimport fermyon:spin/postgres@2.0.0 [resource-drop]connection
func _FermyonSpin2_0_0_PostgresConnection_drop(self FermyonSpin2_0_0_PostgresConnection)

func (self FermyonSpin2_0_0_PostgresConnection) Drop() {
  _FermyonSpin2_0_0_PostgresConnection_drop(self)
}

func StaticConnectionOpen(address string) Result[FermyonSpin2_0_0_PostgresConnection, FermyonSpin2_0_0_PostgresError] {
  var lower_address C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_address.ptr = (*uint8)(unsafe.Pointer(C.CString(address)))
  lower_address.len = C.size_t(len(address))
  var ret C.fermyon_spin_2_0_0_postgres_result_own_connection_error_t
  C.fermyon_spin_2_0_0_postgres_static_connection_open(&lower_address , &ret )
  var lift_ret Result[FermyonSpin2_0_0_PostgresConnection, FermyonSpin2_0_0_PostgresError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_postgres_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_PostgresError
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorOther(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_postgres_own_connection_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_PostgresConnection
    lift_ret_val = FermyonSpin2_0_0_PostgresConnection(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_PostgresConnection) Query(statement string, params []FermyonSpin2_0_0_PostgresParameterValue) Result[FermyonSpin2_0_0_PostgresRowSet, FermyonSpin2_0_0_PostgresError] {
  var lower_self C.fermyon_spin_2_0_0_postgres_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_statement C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_statement.ptr = (*uint8)(unsafe.Pointer(C.CString(statement)))
  lower_statement.len = C.size_t(len(statement))
  var lower_params C.fermyon_spin_2_0_0_postgres_list_parameter_value_t
  if len(params) == 0 {
    lower_params.ptr = nil
    lower_params.len = 0
  } else {
    var empty_lower_params C.fermyon_spin_2_0_0_postgres_parameter_value_t
    lower_params.ptr = (*C.fermyon_spin_2_0_0_postgres_parameter_value_t)(C.malloc(C.size_t(len(params)) * C.size_t(unsafe.Sizeof(empty_lower_params))))
    lower_params.len = C.size_t(len(params))
    for lower_params_i := range params {
      lower_params_ptr := (*C.fermyon_spin_2_0_0_postgres_parameter_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params.ptr)) +
      uintptr(lower_params_i)*unsafe.Sizeof(empty_lower_params)))
      var lower_params_ptr_value C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      var lower_params_ptr_value_val C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean {

        lower_params_ptr_value_val.tag = 0
        lower_params_ptr_value_val_ptr := (*bool)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := params[lower_params_i].GetBoolean()
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8 {

        lower_params_ptr_value_val.tag = 1
        lower_params_ptr_value_val_ptr := (*C.int8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int8_t(params[lower_params_i].GetInt8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16 {

        lower_params_ptr_value_val.tag = 2
        lower_params_ptr_value_val_ptr := (*C.int16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int16_t(params[lower_params_i].GetInt16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32 {

        lower_params_ptr_value_val.tag = 3
        lower_params_ptr_value_val_ptr := (*C.int32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int32_t(params[lower_params_i].GetInt32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64 {

        lower_params_ptr_value_val.tag = 4
        lower_params_ptr_value_val_ptr := (*C.int64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int64_t(params[lower_params_i].GetInt64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8 {

        lower_params_ptr_value_val.tag = 5
        lower_params_ptr_value_val_ptr := (*C.uint8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint8_t(params[lower_params_i].GetUint8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16 {

        lower_params_ptr_value_val.tag = 6
        lower_params_ptr_value_val_ptr := (*C.uint16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint16_t(params[lower_params_i].GetUint16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32 {

        lower_params_ptr_value_val.tag = 7
        lower_params_ptr_value_val_ptr := (*C.uint32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint32_t(params[lower_params_i].GetUint32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64 {

        lower_params_ptr_value_val.tag = 8
        lower_params_ptr_value_val_ptr := (*C.uint64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint64_t(params[lower_params_i].GetUint64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32 {

        lower_params_ptr_value_val.tag = 9
        lower_params_ptr_value_val_ptr := (*C.float)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.float(params[lower_params_i].GetFloating32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64 {

        lower_params_ptr_value_val.tag = 10
        lower_params_ptr_value_val_ptr := (*C.double)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.double(params[lower_params_i].GetFloating64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr {

        lower_params_ptr_value_val.tag = 11
        lower_params_ptr_value_val_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_params_ptr_value_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(params[lower_params_i].GetStr())))
        lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetStr()))
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary {

        lower_params_ptr_value_val.tag = 12
        lower_params_ptr_value_val_ptr := (*C.http_trigger_list_u8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_list_u8_t
        if len(params[lower_params_i].GetBinary()) == 0 {
          lower_params_ptr_value_val_val.ptr = nil
          lower_params_ptr_value_val_val.len = 0
        } else {
          var empty_lower_params_ptr_value_val_val C.uint8_t
          lower_params_ptr_value_val_val.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(params[lower_params_i].GetBinary())) * C.size_t(unsafe.Sizeof(empty_lower_params_ptr_value_val_val))))
          lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetBinary()))
          for lower_params_ptr_value_val_val_i := range params[lower_params_i].GetBinary() {
            lower_params_ptr_value_val_val_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params_ptr_value_val_val.ptr)) +
            uintptr(lower_params_ptr_value_val_val_i)*unsafe.Sizeof(empty_lower_params_ptr_value_val_val)))
            lower_params_ptr_value_val_val_ptr_value := C.uint8_t(params[lower_params_i].GetBinary()[lower_params_ptr_value_val_val_i])
            *lower_params_ptr_value_val_val_ptr = lower_params_ptr_value_val_val_ptr_value
          }
        }
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindDbNull {
        lower_params_ptr_value_val.tag = 13
      }
      lower_params_ptr_value = lower_params_ptr_value_val
      *lower_params_ptr = lower_params_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_postgres_result_row_set_error_t
  C.fermyon_spin_2_0_0_postgres_method_connection_query(lower_self , &lower_statement , &lower_params , &ret )
  var lift_ret Result[FermyonSpin2_0_0_PostgresRowSet, FermyonSpin2_0_0_PostgresError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_postgres_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_PostgresError
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorOther(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_postgres_row_set_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_PostgresRowSet
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesRowSet
    var lift_ret_val_val_Columns []FermyonSpin2_0_0_RdbmsTypesColumn
    lift_ret_val_val_Columns = make([]FermyonSpin2_0_0_RdbmsTypesColumn, lift_ret_ptr.columns.len)
    if lift_ret_ptr.columns.len > 0 {
      for lift_ret_val_val_Columns_i := 0; lift_ret_val_val_Columns_i < int(lift_ret_ptr.columns.len); lift_ret_val_val_Columns_i++ {
        var empty_lift_ret_val_val_Columns C.fermyon_spin_2_0_0_rdbms_types_column_t
        lift_ret_val_val_Columns_ptr := *(*C.fermyon_spin_2_0_0_rdbms_types_column_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.columns.ptr)) +
        uintptr(lift_ret_val_val_Columns_i)*unsafe.Sizeof(empty_lift_ret_val_val_Columns)))
        var list_lift_ret_val_val_Columns FermyonSpin2_0_0_RdbmsTypesColumn
        var list_lift_ret_val_val_Columns_Name string
        list_lift_ret_val_val_Columns_Name = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_Columns_ptr.name.ptr)), C.int(lift_ret_val_val_Columns_ptr.name.len))
        list_lift_ret_val_val_Columns.Name = list_lift_ret_val_val_Columns_Name
        var list_lift_ret_val_val_Columns_DataType FermyonSpin2_0_0_RdbmsTypesDbDataType
        if lift_ret_val_val_Columns_ptr.data_type == 0 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeBoolean()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 1 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt8()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 2 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt16()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 3 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt32()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 4 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt64()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 5 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint8()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 6 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint16()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 7 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint32()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 8 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint64()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 9 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeFloating32()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 10 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeFloating64()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 11 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeStr()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 12 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeBinary()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 13 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeOther()
        }
        list_lift_ret_val_val_Columns.DataType = list_lift_ret_val_val_Columns_DataType
        lift_ret_val_val_Columns[lift_ret_val_val_Columns_i] = list_lift_ret_val_val_Columns
      }
    }
    lift_ret_val_val.Columns = lift_ret_val_val_Columns
    var lift_ret_val_val_Rows [][]FermyonSpin2_0_0_RdbmsTypesDbValue
    lift_ret_val_val_Rows = make([][]FermyonSpin2_0_0_RdbmsTypesDbValue, lift_ret_ptr.rows.len)
    if lift_ret_ptr.rows.len > 0 {
      for lift_ret_val_val_Rows_i := 0; lift_ret_val_val_Rows_i < int(lift_ret_ptr.rows.len); lift_ret_val_val_Rows_i++ {
        var empty_lift_ret_val_val_Rows C.fermyon_spin_2_0_0_rdbms_types_row_t
        lift_ret_val_val_Rows_ptr := *(*C.fermyon_spin_2_0_0_rdbms_types_row_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.rows.ptr)) +
        uintptr(lift_ret_val_val_Rows_i)*unsafe.Sizeof(empty_lift_ret_val_val_Rows)))
        var list_lift_ret_val_val_Rows []FermyonSpin2_0_0_RdbmsTypesDbValue
        list_lift_ret_val_val_Rows = make([]FermyonSpin2_0_0_RdbmsTypesDbValue, lift_ret_val_val_Rows_ptr.len)
        if lift_ret_val_val_Rows_ptr.len > 0 {
          for list_lift_ret_val_val_Rows_i := 0; list_lift_ret_val_val_Rows_i < int(lift_ret_val_val_Rows_ptr.len); list_lift_ret_val_val_Rows_i++ {
            var empty_list_lift_ret_val_val_Rows C.fermyon_spin_2_0_0_rdbms_types_db_value_t
            list_lift_ret_val_val_Rows_ptr := *(*C.fermyon_spin_2_0_0_rdbms_types_db_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_val_val_Rows_ptr.ptr)) +
            uintptr(list_lift_ret_val_val_Rows_i)*unsafe.Sizeof(empty_list_lift_ret_val_val_Rows)))
            var list_list_lift_ret_val_val_Rows FermyonSpin2_0_0_RdbmsTypesDbValue
            if list_lift_ret_val_val_Rows_ptr.tag == 0 {
              list_list_lift_ret_val_val_Rows_ptr := *(*bool)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              list_list_lift_ret_val_val_Rows_val := list_list_lift_ret_val_val_Rows_ptr
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueBoolean(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 1 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int8_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int8
              list_list_lift_ret_val_val_Rows_val = int8(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt8(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 2 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int16_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int16
              list_list_lift_ret_val_val_Rows_val = int16(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt16(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 3 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int32_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int32
              list_list_lift_ret_val_val_Rows_val = int32(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt32(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 4 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int64_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int64
              list_list_lift_ret_val_val_Rows_val = int64(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt64(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 5 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint8_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint8
              list_list_lift_ret_val_val_Rows_val = uint8(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint8(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 6 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint16_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint16
              list_list_lift_ret_val_val_Rows_val = uint16(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint16(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 7 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint32_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint32
              list_list_lift_ret_val_val_Rows_val = uint32(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint32(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 8 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint64_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint64
              list_list_lift_ret_val_val_Rows_val = uint64(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint64(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 9 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.float)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val float32
              list_list_lift_ret_val_val_Rows_val = float32(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueFloating32(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 10 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.double)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val float64
              list_list_lift_ret_val_val_Rows_val = float64(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueFloating64(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 11 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val string
              list_list_lift_ret_val_val_Rows_val = C.GoStringN((*C.char)(unsafe.Pointer(list_list_lift_ret_val_val_Rows_ptr.ptr)), C.int(list_list_lift_ret_val_val_Rows_ptr.len))
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueStr(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 12 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.http_trigger_list_u8_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val []uint8
              list_list_lift_ret_val_val_Rows_val = make([]uint8, list_list_lift_ret_val_val_Rows_ptr.len)
              if list_list_lift_ret_val_val_Rows_ptr.len > 0 {
                for list_list_lift_ret_val_val_Rows_val_i := 0; list_list_lift_ret_val_val_Rows_val_i < int(list_list_lift_ret_val_val_Rows_ptr.len); list_list_lift_ret_val_val_Rows_val_i++ {
                  var empty_list_list_lift_ret_val_val_Rows_val C.uint8_t
                  list_list_lift_ret_val_val_Rows_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(list_list_lift_ret_val_val_Rows_ptr.ptr)) +
                  uintptr(list_list_lift_ret_val_val_Rows_val_i)*unsafe.Sizeof(empty_list_list_lift_ret_val_val_Rows_val)))
                  var list_list_list_lift_ret_val_val_Rows_val uint8
                  list_list_list_lift_ret_val_val_Rows_val = uint8(list_list_lift_ret_val_val_Rows_val_ptr)
                  list_list_lift_ret_val_val_Rows_val[list_list_lift_ret_val_val_Rows_val_i] = list_list_list_lift_ret_val_val_Rows_val
                }
              }
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueBinary(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 13 {
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueDbNull()
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 14 {
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUnsupported()
            }
            list_lift_ret_val_val_Rows[list_lift_ret_val_val_Rows_i] = list_list_lift_ret_val_val_Rows
          }
        }
        lift_ret_val_val_Rows[lift_ret_val_val_Rows_i] = list_lift_ret_val_val_Rows
      }
    }
    lift_ret_val_val.Rows = lift_ret_val_val_Rows
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_PostgresConnection) Execute(statement string, params []FermyonSpin2_0_0_PostgresParameterValue) Result[uint64, FermyonSpin2_0_0_PostgresError] {
  var lower_self C.fermyon_spin_2_0_0_postgres_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_statement C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_statement.ptr = (*uint8)(unsafe.Pointer(C.CString(statement)))
  lower_statement.len = C.size_t(len(statement))
  var lower_params C.fermyon_spin_2_0_0_postgres_list_parameter_value_t
  if len(params) == 0 {
    lower_params.ptr = nil
    lower_params.len = 0
  } else {
    var empty_lower_params C.fermyon_spin_2_0_0_postgres_parameter_value_t
    lower_params.ptr = (*C.fermyon_spin_2_0_0_postgres_parameter_value_t)(C.malloc(C.size_t(len(params)) * C.size_t(unsafe.Sizeof(empty_lower_params))))
    lower_params.len = C.size_t(len(params))
    for lower_params_i := range params {
      lower_params_ptr := (*C.fermyon_spin_2_0_0_postgres_parameter_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params.ptr)) +
      uintptr(lower_params_i)*unsafe.Sizeof(empty_lower_params)))
      var lower_params_ptr_value C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      var lower_params_ptr_value_val C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean {

        lower_params_ptr_value_val.tag = 0
        lower_params_ptr_value_val_ptr := (*bool)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := params[lower_params_i].GetBoolean()
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8 {

        lower_params_ptr_value_val.tag = 1
        lower_params_ptr_value_val_ptr := (*C.int8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int8_t(params[lower_params_i].GetInt8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16 {

        lower_params_ptr_value_val.tag = 2
        lower_params_ptr_value_val_ptr := (*C.int16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int16_t(params[lower_params_i].GetInt16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32 {

        lower_params_ptr_value_val.tag = 3
        lower_params_ptr_value_val_ptr := (*C.int32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int32_t(params[lower_params_i].GetInt32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64 {

        lower_params_ptr_value_val.tag = 4
        lower_params_ptr_value_val_ptr := (*C.int64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int64_t(params[lower_params_i].GetInt64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8 {

        lower_params_ptr_value_val.tag = 5
        lower_params_ptr_value_val_ptr := (*C.uint8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint8_t(params[lower_params_i].GetUint8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16 {

        lower_params_ptr_value_val.tag = 6
        lower_params_ptr_value_val_ptr := (*C.uint16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint16_t(params[lower_params_i].GetUint16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32 {

        lower_params_ptr_value_val.tag = 7
        lower_params_ptr_value_val_ptr := (*C.uint32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint32_t(params[lower_params_i].GetUint32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64 {

        lower_params_ptr_value_val.tag = 8
        lower_params_ptr_value_val_ptr := (*C.uint64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint64_t(params[lower_params_i].GetUint64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32 {

        lower_params_ptr_value_val.tag = 9
        lower_params_ptr_value_val_ptr := (*C.float)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.float(params[lower_params_i].GetFloating32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64 {

        lower_params_ptr_value_val.tag = 10
        lower_params_ptr_value_val_ptr := (*C.double)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.double(params[lower_params_i].GetFloating64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr {

        lower_params_ptr_value_val.tag = 11
        lower_params_ptr_value_val_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_params_ptr_value_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(params[lower_params_i].GetStr())))
        lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetStr()))
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary {

        lower_params_ptr_value_val.tag = 12
        lower_params_ptr_value_val_ptr := (*C.http_trigger_list_u8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_list_u8_t
        if len(params[lower_params_i].GetBinary()) == 0 {
          lower_params_ptr_value_val_val.ptr = nil
          lower_params_ptr_value_val_val.len = 0
        } else {
          var empty_lower_params_ptr_value_val_val C.uint8_t
          lower_params_ptr_value_val_val.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(params[lower_params_i].GetBinary())) * C.size_t(unsafe.Sizeof(empty_lower_params_ptr_value_val_val))))
          lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetBinary()))
          for lower_params_ptr_value_val_val_i := range params[lower_params_i].GetBinary() {
            lower_params_ptr_value_val_val_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params_ptr_value_val_val.ptr)) +
            uintptr(lower_params_ptr_value_val_val_i)*unsafe.Sizeof(empty_lower_params_ptr_value_val_val)))
            lower_params_ptr_value_val_val_ptr_value := C.uint8_t(params[lower_params_i].GetBinary()[lower_params_ptr_value_val_val_i])
            *lower_params_ptr_value_val_val_ptr = lower_params_ptr_value_val_val_ptr_value
          }
        }
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindDbNull {
        lower_params_ptr_value_val.tag = 13
      }
      lower_params_ptr_value = lower_params_ptr_value_val
      *lower_params_ptr = lower_params_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_postgres_result_u64_error_t
  C.fermyon_spin_2_0_0_postgres_method_connection_execute(lower_self , &lower_statement , &lower_params , &ret )
  var lift_ret Result[uint64, FermyonSpin2_0_0_PostgresError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_postgres_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_PostgresError
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorOther(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from fermyon:spin/mysql@2.0.0
type FermyonSpin2_0_0_MysqlParameterValue = FermyonSpin2_0_0_RdbmsTypesParameterValue
type FermyonSpin2_0_0_MysqlRowSet = FermyonSpin2_0_0_RdbmsTypesRowSet
type FermyonSpin2_0_0_MysqlError = FermyonSpin2_0_0_RdbmsTypesError
// FermyonSpin2_0_0_MysqlConnection is a handle to imported resource connection
type FermyonSpin2_0_0_MysqlConnection int32

//go:wasmimport fermyon:spin/mysql@2.0.0 [resource-drop]connection
func _FermyonSpin2_0_0_MysqlConnection_drop(self FermyonSpin2_0_0_MysqlConnection)

func (self FermyonSpin2_0_0_MysqlConnection) Drop() {
  _FermyonSpin2_0_0_MysqlConnection_drop(self)
}

func StaticConnectionOpen(address string) Result[FermyonSpin2_0_0_MysqlConnection, FermyonSpin2_0_0_MysqlError] {
  var lower_address C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_address.ptr = (*uint8)(unsafe.Pointer(C.CString(address)))
  lower_address.len = C.size_t(len(address))
  var ret C.fermyon_spin_2_0_0_mysql_result_own_connection_error_t
  C.fermyon_spin_2_0_0_mysql_static_connection_open(&lower_address , &ret )
  var lift_ret Result[FermyonSpin2_0_0_MysqlConnection, FermyonSpin2_0_0_MysqlError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mysql_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MysqlError
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorOther(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mysql_own_connection_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MysqlConnection
    lift_ret_val = FermyonSpin2_0_0_MysqlConnection(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_MysqlConnection) Query(statement string, params []FermyonSpin2_0_0_MysqlParameterValue) Result[FermyonSpin2_0_0_MysqlRowSet, FermyonSpin2_0_0_MysqlError] {
  var lower_self C.fermyon_spin_2_0_0_mysql_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_statement C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_statement.ptr = (*uint8)(unsafe.Pointer(C.CString(statement)))
  lower_statement.len = C.size_t(len(statement))
  var lower_params C.fermyon_spin_2_0_0_mysql_list_parameter_value_t
  if len(params) == 0 {
    lower_params.ptr = nil
    lower_params.len = 0
  } else {
    var empty_lower_params C.fermyon_spin_2_0_0_mysql_parameter_value_t
    lower_params.ptr = (*C.fermyon_spin_2_0_0_mysql_parameter_value_t)(C.malloc(C.size_t(len(params)) * C.size_t(unsafe.Sizeof(empty_lower_params))))
    lower_params.len = C.size_t(len(params))
    for lower_params_i := range params {
      lower_params_ptr := (*C.fermyon_spin_2_0_0_mysql_parameter_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params.ptr)) +
      uintptr(lower_params_i)*unsafe.Sizeof(empty_lower_params)))
      var lower_params_ptr_value C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      var lower_params_ptr_value_val C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean {

        lower_params_ptr_value_val.tag = 0
        lower_params_ptr_value_val_ptr := (*bool)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := params[lower_params_i].GetBoolean()
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8 {

        lower_params_ptr_value_val.tag = 1
        lower_params_ptr_value_val_ptr := (*C.int8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int8_t(params[lower_params_i].GetInt8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16 {

        lower_params_ptr_value_val.tag = 2
        lower_params_ptr_value_val_ptr := (*C.int16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int16_t(params[lower_params_i].GetInt16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32 {

        lower_params_ptr_value_val.tag = 3
        lower_params_ptr_value_val_ptr := (*C.int32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int32_t(params[lower_params_i].GetInt32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64 {

        lower_params_ptr_value_val.tag = 4
        lower_params_ptr_value_val_ptr := (*C.int64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int64_t(params[lower_params_i].GetInt64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8 {

        lower_params_ptr_value_val.tag = 5
        lower_params_ptr_value_val_ptr := (*C.uint8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint8_t(params[lower_params_i].GetUint8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16 {

        lower_params_ptr_value_val.tag = 6
        lower_params_ptr_value_val_ptr := (*C.uint16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint16_t(params[lower_params_i].GetUint16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32 {

        lower_params_ptr_value_val.tag = 7
        lower_params_ptr_value_val_ptr := (*C.uint32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint32_t(params[lower_params_i].GetUint32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64 {

        lower_params_ptr_value_val.tag = 8
        lower_params_ptr_value_val_ptr := (*C.uint64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint64_t(params[lower_params_i].GetUint64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32 {

        lower_params_ptr_value_val.tag = 9
        lower_params_ptr_value_val_ptr := (*C.float)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.float(params[lower_params_i].GetFloating32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64 {

        lower_params_ptr_value_val.tag = 10
        lower_params_ptr_value_val_ptr := (*C.double)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.double(params[lower_params_i].GetFloating64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr {

        lower_params_ptr_value_val.tag = 11
        lower_params_ptr_value_val_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_params_ptr_value_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(params[lower_params_i].GetStr())))
        lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetStr()))
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary {

        lower_params_ptr_value_val.tag = 12
        lower_params_ptr_value_val_ptr := (*C.http_trigger_list_u8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_list_u8_t
        if len(params[lower_params_i].GetBinary()) == 0 {
          lower_params_ptr_value_val_val.ptr = nil
          lower_params_ptr_value_val_val.len = 0
        } else {
          var empty_lower_params_ptr_value_val_val C.uint8_t
          lower_params_ptr_value_val_val.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(params[lower_params_i].GetBinary())) * C.size_t(unsafe.Sizeof(empty_lower_params_ptr_value_val_val))))
          lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetBinary()))
          for lower_params_ptr_value_val_val_i := range params[lower_params_i].GetBinary() {
            lower_params_ptr_value_val_val_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params_ptr_value_val_val.ptr)) +
            uintptr(lower_params_ptr_value_val_val_i)*unsafe.Sizeof(empty_lower_params_ptr_value_val_val)))
            lower_params_ptr_value_val_val_ptr_value := C.uint8_t(params[lower_params_i].GetBinary()[lower_params_ptr_value_val_val_i])
            *lower_params_ptr_value_val_val_ptr = lower_params_ptr_value_val_val_ptr_value
          }
        }
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindDbNull {
        lower_params_ptr_value_val.tag = 13
      }
      lower_params_ptr_value = lower_params_ptr_value_val
      *lower_params_ptr = lower_params_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_mysql_result_row_set_error_t
  C.fermyon_spin_2_0_0_mysql_method_connection_query(lower_self , &lower_statement , &lower_params , &ret )
  var lift_ret Result[FermyonSpin2_0_0_MysqlRowSet, FermyonSpin2_0_0_MysqlError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mysql_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MysqlError
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorOther(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mysql_row_set_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MysqlRowSet
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesRowSet
    var lift_ret_val_val_Columns []FermyonSpin2_0_0_RdbmsTypesColumn
    lift_ret_val_val_Columns = make([]FermyonSpin2_0_0_RdbmsTypesColumn, lift_ret_ptr.columns.len)
    if lift_ret_ptr.columns.len > 0 {
      for lift_ret_val_val_Columns_i := 0; lift_ret_val_val_Columns_i < int(lift_ret_ptr.columns.len); lift_ret_val_val_Columns_i++ {
        var empty_lift_ret_val_val_Columns C.fermyon_spin_2_0_0_rdbms_types_column_t
        lift_ret_val_val_Columns_ptr := *(*C.fermyon_spin_2_0_0_rdbms_types_column_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.columns.ptr)) +
        uintptr(lift_ret_val_val_Columns_i)*unsafe.Sizeof(empty_lift_ret_val_val_Columns)))
        var list_lift_ret_val_val_Columns FermyonSpin2_0_0_RdbmsTypesColumn
        var list_lift_ret_val_val_Columns_Name string
        list_lift_ret_val_val_Columns_Name = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_Columns_ptr.name.ptr)), C.int(lift_ret_val_val_Columns_ptr.name.len))
        list_lift_ret_val_val_Columns.Name = list_lift_ret_val_val_Columns_Name
        var list_lift_ret_val_val_Columns_DataType FermyonSpin2_0_0_RdbmsTypesDbDataType
        if lift_ret_val_val_Columns_ptr.data_type == 0 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeBoolean()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 1 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt8()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 2 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt16()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 3 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt32()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 4 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeInt64()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 5 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint8()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 6 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint16()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 7 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint32()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 8 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeUint64()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 9 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeFloating32()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 10 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeFloating64()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 11 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeStr()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 12 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeBinary()
        }
        if lift_ret_val_val_Columns_ptr.data_type == 13 {
          list_lift_ret_val_val_Columns_DataType = FermyonSpin2_0_0_RdbmsTypesDbDataTypeOther()
        }
        list_lift_ret_val_val_Columns.DataType = list_lift_ret_val_val_Columns_DataType
        lift_ret_val_val_Columns[lift_ret_val_val_Columns_i] = list_lift_ret_val_val_Columns
      }
    }
    lift_ret_val_val.Columns = lift_ret_val_val_Columns
    var lift_ret_val_val_Rows [][]FermyonSpin2_0_0_RdbmsTypesDbValue
    lift_ret_val_val_Rows = make([][]FermyonSpin2_0_0_RdbmsTypesDbValue, lift_ret_ptr.rows.len)
    if lift_ret_ptr.rows.len > 0 {
      for lift_ret_val_val_Rows_i := 0; lift_ret_val_val_Rows_i < int(lift_ret_ptr.rows.len); lift_ret_val_val_Rows_i++ {
        var empty_lift_ret_val_val_Rows C.fermyon_spin_2_0_0_rdbms_types_row_t
        lift_ret_val_val_Rows_ptr := *(*C.fermyon_spin_2_0_0_rdbms_types_row_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.rows.ptr)) +
        uintptr(lift_ret_val_val_Rows_i)*unsafe.Sizeof(empty_lift_ret_val_val_Rows)))
        var list_lift_ret_val_val_Rows []FermyonSpin2_0_0_RdbmsTypesDbValue
        list_lift_ret_val_val_Rows = make([]FermyonSpin2_0_0_RdbmsTypesDbValue, lift_ret_val_val_Rows_ptr.len)
        if lift_ret_val_val_Rows_ptr.len > 0 {
          for list_lift_ret_val_val_Rows_i := 0; list_lift_ret_val_val_Rows_i < int(lift_ret_val_val_Rows_ptr.len); list_lift_ret_val_val_Rows_i++ {
            var empty_list_lift_ret_val_val_Rows C.fermyon_spin_2_0_0_rdbms_types_db_value_t
            list_lift_ret_val_val_Rows_ptr := *(*C.fermyon_spin_2_0_0_rdbms_types_db_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_val_val_Rows_ptr.ptr)) +
            uintptr(list_lift_ret_val_val_Rows_i)*unsafe.Sizeof(empty_list_lift_ret_val_val_Rows)))
            var list_list_lift_ret_val_val_Rows FermyonSpin2_0_0_RdbmsTypesDbValue
            if list_lift_ret_val_val_Rows_ptr.tag == 0 {
              list_list_lift_ret_val_val_Rows_ptr := *(*bool)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              list_list_lift_ret_val_val_Rows_val := list_list_lift_ret_val_val_Rows_ptr
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueBoolean(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 1 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int8_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int8
              list_list_lift_ret_val_val_Rows_val = int8(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt8(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 2 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int16_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int16
              list_list_lift_ret_val_val_Rows_val = int16(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt16(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 3 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int32_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int32
              list_list_lift_ret_val_val_Rows_val = int32(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt32(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 4 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.int64_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val int64
              list_list_lift_ret_val_val_Rows_val = int64(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueInt64(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 5 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint8_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint8
              list_list_lift_ret_val_val_Rows_val = uint8(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint8(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 6 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint16_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint16
              list_list_lift_ret_val_val_Rows_val = uint16(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint16(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 7 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint32_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint32
              list_list_lift_ret_val_val_Rows_val = uint32(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint32(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 8 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.uint64_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val uint64
              list_list_lift_ret_val_val_Rows_val = uint64(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUint64(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 9 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.float)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val float32
              list_list_lift_ret_val_val_Rows_val = float32(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueFloating32(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 10 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.double)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val float64
              list_list_lift_ret_val_val_Rows_val = float64(list_list_lift_ret_val_val_Rows_ptr)
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueFloating64(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 11 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val string
              list_list_lift_ret_val_val_Rows_val = C.GoStringN((*C.char)(unsafe.Pointer(list_list_lift_ret_val_val_Rows_ptr.ptr)), C.int(list_list_lift_ret_val_val_Rows_ptr.len))
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueStr(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 12 {
              list_list_lift_ret_val_val_Rows_ptr := *(*C.http_trigger_list_u8_t)(unsafe.Pointer(&list_lift_ret_val_val_Rows_ptr.val))
              var list_list_lift_ret_val_val_Rows_val []uint8
              list_list_lift_ret_val_val_Rows_val = make([]uint8, list_list_lift_ret_val_val_Rows_ptr.len)
              if list_list_lift_ret_val_val_Rows_ptr.len > 0 {
                for list_list_lift_ret_val_val_Rows_val_i := 0; list_list_lift_ret_val_val_Rows_val_i < int(list_list_lift_ret_val_val_Rows_ptr.len); list_list_lift_ret_val_val_Rows_val_i++ {
                  var empty_list_list_lift_ret_val_val_Rows_val C.uint8_t
                  list_list_lift_ret_val_val_Rows_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(list_list_lift_ret_val_val_Rows_ptr.ptr)) +
                  uintptr(list_list_lift_ret_val_val_Rows_val_i)*unsafe.Sizeof(empty_list_list_lift_ret_val_val_Rows_val)))
                  var list_list_list_lift_ret_val_val_Rows_val uint8
                  list_list_list_lift_ret_val_val_Rows_val = uint8(list_list_lift_ret_val_val_Rows_val_ptr)
                  list_list_lift_ret_val_val_Rows_val[list_list_lift_ret_val_val_Rows_val_i] = list_list_list_lift_ret_val_val_Rows_val
                }
              }
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueBinary(list_list_lift_ret_val_val_Rows_val)
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 13 {
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueDbNull()
            }
            if list_lift_ret_val_val_Rows_ptr.tag == 14 {
              list_list_lift_ret_val_val_Rows = FermyonSpin2_0_0_RdbmsTypesDbValueUnsupported()
            }
            list_lift_ret_val_val_Rows[list_lift_ret_val_val_Rows_i] = list_list_lift_ret_val_val_Rows
          }
        }
        lift_ret_val_val_Rows[lift_ret_val_val_Rows_i] = list_lift_ret_val_val_Rows
      }
    }
    lift_ret_val_val.Rows = lift_ret_val_val_Rows
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_MysqlConnection) Execute(statement string, params []FermyonSpin2_0_0_MysqlParameterValue) Result[struct{}, FermyonSpin2_0_0_MysqlError] {
  var lower_self C.fermyon_spin_2_0_0_mysql_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_statement C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_statement.ptr = (*uint8)(unsafe.Pointer(C.CString(statement)))
  lower_statement.len = C.size_t(len(statement))
  var lower_params C.fermyon_spin_2_0_0_mysql_list_parameter_value_t
  if len(params) == 0 {
    lower_params.ptr = nil
    lower_params.len = 0
  } else {
    var empty_lower_params C.fermyon_spin_2_0_0_mysql_parameter_value_t
    lower_params.ptr = (*C.fermyon_spin_2_0_0_mysql_parameter_value_t)(C.malloc(C.size_t(len(params)) * C.size_t(unsafe.Sizeof(empty_lower_params))))
    lower_params.len = C.size_t(len(params))
    for lower_params_i := range params {
      lower_params_ptr := (*C.fermyon_spin_2_0_0_mysql_parameter_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params.ptr)) +
      uintptr(lower_params_i)*unsafe.Sizeof(empty_lower_params)))
      var lower_params_ptr_value C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      var lower_params_ptr_value_val C.fermyon_spin_2_0_0_rdbms_types_parameter_value_t
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBoolean {

        lower_params_ptr_value_val.tag = 0
        lower_params_ptr_value_val_ptr := (*bool)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := params[lower_params_i].GetBoolean()
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt8 {

        lower_params_ptr_value_val.tag = 1
        lower_params_ptr_value_val_ptr := (*C.int8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int8_t(params[lower_params_i].GetInt8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt16 {

        lower_params_ptr_value_val.tag = 2
        lower_params_ptr_value_val_ptr := (*C.int16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int16_t(params[lower_params_i].GetInt16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt32 {

        lower_params_ptr_value_val.tag = 3
        lower_params_ptr_value_val_ptr := (*C.int32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int32_t(params[lower_params_i].GetInt32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindInt64 {

        lower_params_ptr_value_val.tag = 4
        lower_params_ptr_value_val_ptr := (*C.int64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.int64_t(params[lower_params_i].GetInt64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint8 {

        lower_params_ptr_value_val.tag = 5
        lower_params_ptr_value_val_ptr := (*C.uint8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint8_t(params[lower_params_i].GetUint8())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint16 {

        lower_params_ptr_value_val.tag = 6
        lower_params_ptr_value_val_ptr := (*C.uint16_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint16_t(params[lower_params_i].GetUint16())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint32 {

        lower_params_ptr_value_val.tag = 7
        lower_params_ptr_value_val_ptr := (*C.uint32_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint32_t(params[lower_params_i].GetUint32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindUint64 {

        lower_params_ptr_value_val.tag = 8
        lower_params_ptr_value_val_ptr := (*C.uint64_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.uint64_t(params[lower_params_i].GetUint64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating32 {

        lower_params_ptr_value_val.tag = 9
        lower_params_ptr_value_val_ptr := (*C.float)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.float(params[lower_params_i].GetFloating32())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindFloating64 {

        lower_params_ptr_value_val.tag = 10
        lower_params_ptr_value_val_ptr := (*C.double)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        lower_params_ptr_value_val_val := C.double(params[lower_params_i].GetFloating64())
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindStr {

        lower_params_ptr_value_val.tag = 11
        lower_params_ptr_value_val_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_params_ptr_value_val_val.ptr = (*uint8)(unsafe.Pointer(C.CString(params[lower_params_i].GetStr())))
        lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetStr()))
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindBinary {

        lower_params_ptr_value_val.tag = 12
        lower_params_ptr_value_val_ptr := (*C.http_trigger_list_u8_t)(unsafe.Pointer(&lower_params_ptr_value_val.val))
        var lower_params_ptr_value_val_val C.http_trigger_list_u8_t
        if len(params[lower_params_i].GetBinary()) == 0 {
          lower_params_ptr_value_val_val.ptr = nil
          lower_params_ptr_value_val_val.len = 0
        } else {
          var empty_lower_params_ptr_value_val_val C.uint8_t
          lower_params_ptr_value_val_val.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(params[lower_params_i].GetBinary())) * C.size_t(unsafe.Sizeof(empty_lower_params_ptr_value_val_val))))
          lower_params_ptr_value_val_val.len = C.size_t(len(params[lower_params_i].GetBinary()))
          for lower_params_ptr_value_val_val_i := range params[lower_params_i].GetBinary() {
            lower_params_ptr_value_val_val_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_params_ptr_value_val_val.ptr)) +
            uintptr(lower_params_ptr_value_val_val_i)*unsafe.Sizeof(empty_lower_params_ptr_value_val_val)))
            lower_params_ptr_value_val_val_ptr_value := C.uint8_t(params[lower_params_i].GetBinary()[lower_params_ptr_value_val_val_i])
            *lower_params_ptr_value_val_val_ptr = lower_params_ptr_value_val_val_ptr_value
          }
        }
        *lower_params_ptr_value_val_ptr = lower_params_ptr_value_val_val
      }
      if params[lower_params_i].Kind() == FermyonSpin2_0_0_RdbmsTypesParameterValueKindDbNull {
        lower_params_ptr_value_val.tag = 13
      }
      lower_params_ptr_value = lower_params_ptr_value_val
      *lower_params_ptr = lower_params_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_mysql_result_void_error_t
  C.fermyon_spin_2_0_0_mysql_method_connection_execute(lower_self , &lower_statement , &lower_params , &ret )
  var lift_ret Result[struct{}, FermyonSpin2_0_0_MysqlError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_mysql_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_MysqlError
    var lift_ret_val_val FermyonSpin2_0_0_RdbmsTypesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorConnectionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorBadParameter(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorQueryFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorValueConversionFailed(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val string
      lift_ret_val_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_val_ptr.ptr)), C.int(lift_ret_val_val_ptr.len))
      lift_ret_val_val = FermyonSpin2_0_0_RdbmsTypesErrorOther(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

// Import functions from fermyon:spin/sqlite@2.0.0
// FermyonSpin2_0_0_SqliteConnection is a handle to imported resource connection
type FermyonSpin2_0_0_SqliteConnection int32

//go:wasmimport fermyon:spin/sqlite@2.0.0 [resource-drop]connection
func _FermyonSpin2_0_0_SqliteConnection_drop(self FermyonSpin2_0_0_SqliteConnection)

func (self FermyonSpin2_0_0_SqliteConnection) Drop() {
  _FermyonSpin2_0_0_SqliteConnection_drop(self)
}

type FermyonSpin2_0_0_SqliteErrorKind int

const (
FermyonSpin2_0_0_SqliteErrorKindNoSuchDatabase FermyonSpin2_0_0_SqliteErrorKind = iota
FermyonSpin2_0_0_SqliteErrorKindAccessDenied
FermyonSpin2_0_0_SqliteErrorKindInvalidConnection
FermyonSpin2_0_0_SqliteErrorKindDatabaseFull
FermyonSpin2_0_0_SqliteErrorKindIo
)

type FermyonSpin2_0_0_SqliteError struct {
  kind FermyonSpin2_0_0_SqliteErrorKind
  val any
}

func (n FermyonSpin2_0_0_SqliteError) Kind() FermyonSpin2_0_0_SqliteErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_SqliteErrorNoSuchDatabase() FermyonSpin2_0_0_SqliteError{
  return FermyonSpin2_0_0_SqliteError{kind: FermyonSpin2_0_0_SqliteErrorKindNoSuchDatabase}
}

func FermyonSpin2_0_0_SqliteErrorAccessDenied() FermyonSpin2_0_0_SqliteError{
  return FermyonSpin2_0_0_SqliteError{kind: FermyonSpin2_0_0_SqliteErrorKindAccessDenied}
}

func FermyonSpin2_0_0_SqliteErrorInvalidConnection() FermyonSpin2_0_0_SqliteError{
  return FermyonSpin2_0_0_SqliteError{kind: FermyonSpin2_0_0_SqliteErrorKindInvalidConnection}
}

func FermyonSpin2_0_0_SqliteErrorDatabaseFull() FermyonSpin2_0_0_SqliteError{
  return FermyonSpin2_0_0_SqliteError{kind: FermyonSpin2_0_0_SqliteErrorKindDatabaseFull}
}

func FermyonSpin2_0_0_SqliteErrorIo(v string) FermyonSpin2_0_0_SqliteError{
  return FermyonSpin2_0_0_SqliteError{kind: FermyonSpin2_0_0_SqliteErrorKindIo, val: v}
}

func (n FermyonSpin2_0_0_SqliteError) GetIo() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_SqliteErrorKindIo; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_SqliteError) SetIo(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_SqliteErrorKindIo
}

type FermyonSpin2_0_0_SqliteValueKind int

const (
FermyonSpin2_0_0_SqliteValueKindInteger FermyonSpin2_0_0_SqliteValueKind = iota
FermyonSpin2_0_0_SqliteValueKindReal
FermyonSpin2_0_0_SqliteValueKindText
FermyonSpin2_0_0_SqliteValueKindBlob
FermyonSpin2_0_0_SqliteValueKindNull
)

type FermyonSpin2_0_0_SqliteValue struct {
  kind FermyonSpin2_0_0_SqliteValueKind
  val any
}

func (n FermyonSpin2_0_0_SqliteValue) Kind() FermyonSpin2_0_0_SqliteValueKind {
  return n.kind
}

func FermyonSpin2_0_0_SqliteValueInteger(v int64) FermyonSpin2_0_0_SqliteValue{
  return FermyonSpin2_0_0_SqliteValue{kind: FermyonSpin2_0_0_SqliteValueKindInteger, val: v}
}

func (n FermyonSpin2_0_0_SqliteValue) GetInteger() int64{
  if g, w := n.Kind(), FermyonSpin2_0_0_SqliteValueKindInteger; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(int64)
}

func (n *FermyonSpin2_0_0_SqliteValue) SetInteger(v int64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_SqliteValueKindInteger
}

func FermyonSpin2_0_0_SqliteValueReal(v float64) FermyonSpin2_0_0_SqliteValue{
  return FermyonSpin2_0_0_SqliteValue{kind: FermyonSpin2_0_0_SqliteValueKindReal, val: v}
}

func (n FermyonSpin2_0_0_SqliteValue) GetReal() float64{
  if g, w := n.Kind(), FermyonSpin2_0_0_SqliteValueKindReal; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(float64)
}

func (n *FermyonSpin2_0_0_SqliteValue) SetReal(v float64) {
  n.val = v
  n.kind = FermyonSpin2_0_0_SqliteValueKindReal
}

func FermyonSpin2_0_0_SqliteValueText(v string) FermyonSpin2_0_0_SqliteValue{
  return FermyonSpin2_0_0_SqliteValue{kind: FermyonSpin2_0_0_SqliteValueKindText, val: v}
}

func (n FermyonSpin2_0_0_SqliteValue) GetText() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_SqliteValueKindText; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_SqliteValue) SetText(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_SqliteValueKindText
}

func FermyonSpin2_0_0_SqliteValueBlob(v []uint8) FermyonSpin2_0_0_SqliteValue{
  return FermyonSpin2_0_0_SqliteValue{kind: FermyonSpin2_0_0_SqliteValueKindBlob, val: v}
}

func (n FermyonSpin2_0_0_SqliteValue) GetBlob() []uint8{
  if g, w := n.Kind(), FermyonSpin2_0_0_SqliteValueKindBlob; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.([]uint8)
}

func (n *FermyonSpin2_0_0_SqliteValue) SetBlob(v []uint8) {
  n.val = v
  n.kind = FermyonSpin2_0_0_SqliteValueKindBlob
}

func FermyonSpin2_0_0_SqliteValueNull() FermyonSpin2_0_0_SqliteValue{
  return FermyonSpin2_0_0_SqliteValue{kind: FermyonSpin2_0_0_SqliteValueKindNull}
}

type FermyonSpin2_0_0_SqliteRowResult struct {
  Values []FermyonSpin2_0_0_SqliteValue
}

type FermyonSpin2_0_0_SqliteQueryResult struct {
  Columns []string
  Rows []FermyonSpin2_0_0_SqliteRowResult
}

func StaticConnectionOpen(database string) Result[FermyonSpin2_0_0_SqliteConnection, FermyonSpin2_0_0_SqliteError] {
  var lower_database C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_database.ptr = (*uint8)(unsafe.Pointer(C.CString(database)))
  lower_database.len = C.size_t(len(database))
  var ret C.fermyon_spin_2_0_0_sqlite_result_own_connection_error_t
  C.fermyon_spin_2_0_0_sqlite_static_connection_open(&lower_database , &ret )
  var lift_ret Result[FermyonSpin2_0_0_SqliteConnection, FermyonSpin2_0_0_SqliteError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_sqlite_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_SqliteError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorNoSuchDatabase()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorInvalidConnection()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorDatabaseFull()
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorIo(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_sqlite_own_connection_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_SqliteConnection
    lift_ret_val = FermyonSpin2_0_0_SqliteConnection(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_SqliteConnection) Execute(statement string, parameters []FermyonSpin2_0_0_SqliteValue) Result[FermyonSpin2_0_0_SqliteQueryResult, FermyonSpin2_0_0_SqliteError] {
  var lower_self C.fermyon_spin_2_0_0_sqlite_borrow_connection_t
  lower_self.__handle = C.int32_t(self)
  var lower_statement C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_statement.ptr = (*uint8)(unsafe.Pointer(C.CString(statement)))
  lower_statement.len = C.size_t(len(statement))
  var lower_parameters C.fermyon_spin_2_0_0_sqlite_list_value_t
  if len(parameters) == 0 {
    lower_parameters.ptr = nil
    lower_parameters.len = 0
  } else {
    var empty_lower_parameters C.fermyon_spin_2_0_0_sqlite_value_t
    lower_parameters.ptr = (*C.fermyon_spin_2_0_0_sqlite_value_t)(C.malloc(C.size_t(len(parameters)) * C.size_t(unsafe.Sizeof(empty_lower_parameters))))
    lower_parameters.len = C.size_t(len(parameters))
    for lower_parameters_i := range parameters {
      lower_parameters_ptr := (*C.fermyon_spin_2_0_0_sqlite_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_parameters.ptr)) +
      uintptr(lower_parameters_i)*unsafe.Sizeof(empty_lower_parameters)))
      var lower_parameters_ptr_value C.fermyon_spin_2_0_0_sqlite_value_t
      if parameters[lower_parameters_i].Kind() == FermyonSpin2_0_0_SqliteValueKindInteger {

        lower_parameters_ptr_value.tag = 0
        lower_parameters_ptr_value_ptr := (*C.int64_t)(unsafe.Pointer(&lower_parameters_ptr_value.val))
        lower_parameters_ptr_value_val := C.int64_t(parameters[lower_parameters_i].GetInteger())
        *lower_parameters_ptr_value_ptr = lower_parameters_ptr_value_val
      }
      if parameters[lower_parameters_i].Kind() == FermyonSpin2_0_0_SqliteValueKindReal {

        lower_parameters_ptr_value.tag = 1
        lower_parameters_ptr_value_ptr := (*C.double)(unsafe.Pointer(&lower_parameters_ptr_value.val))
        lower_parameters_ptr_value_val := C.double(parameters[lower_parameters_i].GetReal())
        *lower_parameters_ptr_value_ptr = lower_parameters_ptr_value_val
      }
      if parameters[lower_parameters_i].Kind() == FermyonSpin2_0_0_SqliteValueKindText {

        lower_parameters_ptr_value.tag = 2
        lower_parameters_ptr_value_ptr := (*C.http_trigger_string_t)(unsafe.Pointer(&lower_parameters_ptr_value.val))
        var lower_parameters_ptr_value_val C.http_trigger_string_t

        // use unsafe.Pointer to avoid copy
        lower_parameters_ptr_value_val.ptr = (*uint8)(unsafe.Pointer(C.CString(parameters[lower_parameters_i].GetText())))
        lower_parameters_ptr_value_val.len = C.size_t(len(parameters[lower_parameters_i].GetText()))
        *lower_parameters_ptr_value_ptr = lower_parameters_ptr_value_val
      }
      if parameters[lower_parameters_i].Kind() == FermyonSpin2_0_0_SqliteValueKindBlob {

        lower_parameters_ptr_value.tag = 3
        lower_parameters_ptr_value_ptr := (*C.http_trigger_list_u8_t)(unsafe.Pointer(&lower_parameters_ptr_value.val))
        var lower_parameters_ptr_value_val C.http_trigger_list_u8_t
        if len(parameters[lower_parameters_i].GetBlob()) == 0 {
          lower_parameters_ptr_value_val.ptr = nil
          lower_parameters_ptr_value_val.len = 0
        } else {
          var empty_lower_parameters_ptr_value_val C.uint8_t
          lower_parameters_ptr_value_val.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(parameters[lower_parameters_i].GetBlob())) * C.size_t(unsafe.Sizeof(empty_lower_parameters_ptr_value_val))))
          lower_parameters_ptr_value_val.len = C.size_t(len(parameters[lower_parameters_i].GetBlob()))
          for lower_parameters_ptr_value_val_i := range parameters[lower_parameters_i].GetBlob() {
            lower_parameters_ptr_value_val_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_parameters_ptr_value_val.ptr)) +
            uintptr(lower_parameters_ptr_value_val_i)*unsafe.Sizeof(empty_lower_parameters_ptr_value_val)))
            lower_parameters_ptr_value_val_ptr_value := C.uint8_t(parameters[lower_parameters_i].GetBlob()[lower_parameters_ptr_value_val_i])
            *lower_parameters_ptr_value_val_ptr = lower_parameters_ptr_value_val_ptr_value
          }
        }
        *lower_parameters_ptr_value_ptr = lower_parameters_ptr_value_val
      }
      if parameters[lower_parameters_i].Kind() == FermyonSpin2_0_0_SqliteValueKindNull {
        lower_parameters_ptr_value.tag = 4
      }
      *lower_parameters_ptr = lower_parameters_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_sqlite_result_query_result_error_t
  C.fermyon_spin_2_0_0_sqlite_method_connection_execute(lower_self , &lower_statement , &lower_parameters , &ret )
  var lift_ret Result[FermyonSpin2_0_0_SqliteQueryResult, FermyonSpin2_0_0_SqliteError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_sqlite_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_SqliteError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorNoSuchDatabase()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorInvalidConnection()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorDatabaseFull()
    }
    if lift_ret_ptr.tag == 4 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_SqliteErrorIo(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_sqlite_query_result_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_SqliteQueryResult
    var lift_ret_val_Columns []string
    lift_ret_val_Columns = make([]string, lift_ret_ptr.columns.len)
    if lift_ret_ptr.columns.len > 0 {
      for lift_ret_val_Columns_i := 0; lift_ret_val_Columns_i < int(lift_ret_ptr.columns.len); lift_ret_val_Columns_i++ {
        var empty_lift_ret_val_Columns C.http_trigger_string_t
        lift_ret_val_Columns_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.columns.ptr)) +
        uintptr(lift_ret_val_Columns_i)*unsafe.Sizeof(empty_lift_ret_val_Columns)))
        var list_lift_ret_val_Columns string
        list_lift_ret_val_Columns = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_Columns_ptr.ptr)), C.int(lift_ret_val_Columns_ptr.len))
        lift_ret_val_Columns[lift_ret_val_Columns_i] = list_lift_ret_val_Columns
      }
    }
    lift_ret_val.Columns = lift_ret_val_Columns
    var lift_ret_val_Rows []FermyonSpin2_0_0_SqliteRowResult
    lift_ret_val_Rows = make([]FermyonSpin2_0_0_SqliteRowResult, lift_ret_ptr.rows.len)
    if lift_ret_ptr.rows.len > 0 {
      for lift_ret_val_Rows_i := 0; lift_ret_val_Rows_i < int(lift_ret_ptr.rows.len); lift_ret_val_Rows_i++ {
        var empty_lift_ret_val_Rows C.fermyon_spin_2_0_0_sqlite_row_result_t
        lift_ret_val_Rows_ptr := *(*C.fermyon_spin_2_0_0_sqlite_row_result_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.rows.ptr)) +
        uintptr(lift_ret_val_Rows_i)*unsafe.Sizeof(empty_lift_ret_val_Rows)))
        var list_lift_ret_val_Rows FermyonSpin2_0_0_SqliteRowResult
        var list_lift_ret_val_Rows_Values []FermyonSpin2_0_0_SqliteValue
        list_lift_ret_val_Rows_Values = make([]FermyonSpin2_0_0_SqliteValue, lift_ret_val_Rows_ptr.values.len)
        if lift_ret_val_Rows_ptr.values.len > 0 {
          for list_lift_ret_val_Rows_Values_i := 0; list_lift_ret_val_Rows_Values_i < int(lift_ret_val_Rows_ptr.values.len); list_lift_ret_val_Rows_Values_i++ {
            var empty_list_lift_ret_val_Rows_Values C.fermyon_spin_2_0_0_sqlite_value_t
            list_lift_ret_val_Rows_Values_ptr := *(*C.fermyon_spin_2_0_0_sqlite_value_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_val_Rows_ptr.values.ptr)) +
            uintptr(list_lift_ret_val_Rows_Values_i)*unsafe.Sizeof(empty_list_lift_ret_val_Rows_Values)))
            var list_list_lift_ret_val_Rows_Values FermyonSpin2_0_0_SqliteValue
            if list_lift_ret_val_Rows_Values_ptr.tag == 0 {
              list_list_lift_ret_val_Rows_Values_ptr := *(*C.int64_t)(unsafe.Pointer(&list_lift_ret_val_Rows_Values_ptr.val))
              var list_list_lift_ret_val_Rows_Values_val int64
              list_list_lift_ret_val_Rows_Values_val = int64(list_list_lift_ret_val_Rows_Values_ptr)
              list_list_lift_ret_val_Rows_Values = FermyonSpin2_0_0_SqliteValueInteger(list_list_lift_ret_val_Rows_Values_val)
            }
            if list_lift_ret_val_Rows_Values_ptr.tag == 1 {
              list_list_lift_ret_val_Rows_Values_ptr := *(*C.double)(unsafe.Pointer(&list_lift_ret_val_Rows_Values_ptr.val))
              var list_list_lift_ret_val_Rows_Values_val float64
              list_list_lift_ret_val_Rows_Values_val = float64(list_list_lift_ret_val_Rows_Values_ptr)
              list_list_lift_ret_val_Rows_Values = FermyonSpin2_0_0_SqliteValueReal(list_list_lift_ret_val_Rows_Values_val)
            }
            if list_lift_ret_val_Rows_Values_ptr.tag == 2 {
              list_list_lift_ret_val_Rows_Values_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&list_lift_ret_val_Rows_Values_ptr.val))
              var list_list_lift_ret_val_Rows_Values_val string
              list_list_lift_ret_val_Rows_Values_val = C.GoStringN((*C.char)(unsafe.Pointer(list_list_lift_ret_val_Rows_Values_ptr.ptr)), C.int(list_list_lift_ret_val_Rows_Values_ptr.len))
              list_list_lift_ret_val_Rows_Values = FermyonSpin2_0_0_SqliteValueText(list_list_lift_ret_val_Rows_Values_val)
            }
            if list_lift_ret_val_Rows_Values_ptr.tag == 3 {
              list_list_lift_ret_val_Rows_Values_ptr := *(*C.http_trigger_list_u8_t)(unsafe.Pointer(&list_lift_ret_val_Rows_Values_ptr.val))
              var list_list_lift_ret_val_Rows_Values_val []uint8
              list_list_lift_ret_val_Rows_Values_val = make([]uint8, list_list_lift_ret_val_Rows_Values_ptr.len)
              if list_list_lift_ret_val_Rows_Values_ptr.len > 0 {
                for list_list_lift_ret_val_Rows_Values_val_i := 0; list_list_lift_ret_val_Rows_Values_val_i < int(list_list_lift_ret_val_Rows_Values_ptr.len); list_list_lift_ret_val_Rows_Values_val_i++ {
                  var empty_list_list_lift_ret_val_Rows_Values_val C.uint8_t
                  list_list_lift_ret_val_Rows_Values_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(list_list_lift_ret_val_Rows_Values_ptr.ptr)) +
                  uintptr(list_list_lift_ret_val_Rows_Values_val_i)*unsafe.Sizeof(empty_list_list_lift_ret_val_Rows_Values_val)))
                  var list_list_list_lift_ret_val_Rows_Values_val uint8
                  list_list_list_lift_ret_val_Rows_Values_val = uint8(list_list_lift_ret_val_Rows_Values_val_ptr)
                  list_list_lift_ret_val_Rows_Values_val[list_list_lift_ret_val_Rows_Values_val_i] = list_list_list_lift_ret_val_Rows_Values_val
                }
              }
              list_list_lift_ret_val_Rows_Values = FermyonSpin2_0_0_SqliteValueBlob(list_list_lift_ret_val_Rows_Values_val)
            }
            if list_lift_ret_val_Rows_Values_ptr.tag == 4 {
              list_list_lift_ret_val_Rows_Values = FermyonSpin2_0_0_SqliteValueNull()
            }
            list_lift_ret_val_Rows_Values[list_lift_ret_val_Rows_Values_i] = list_list_lift_ret_val_Rows_Values
          }
        }
        list_lift_ret_val_Rows.Values = list_lift_ret_val_Rows_Values
        lift_ret_val_Rows[lift_ret_val_Rows_i] = list_lift_ret_val_Rows
      }
    }
    lift_ret_val.Rows = lift_ret_val_Rows
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from fermyon:spin/key-value@2.0.0
// FermyonSpin2_0_0_KeyValueStore is a handle to imported resource store
type FermyonSpin2_0_0_KeyValueStore int32

//go:wasmimport fermyon:spin/key-value@2.0.0 [resource-drop]store
func _FermyonSpin2_0_0_KeyValueStore_drop(self FermyonSpin2_0_0_KeyValueStore)

func (self FermyonSpin2_0_0_KeyValueStore) Drop() {
  _FermyonSpin2_0_0_KeyValueStore_drop(self)
}

type FermyonSpin2_0_0_KeyValueErrorKind int

const (
FermyonSpin2_0_0_KeyValueErrorKindStoreTableFull FermyonSpin2_0_0_KeyValueErrorKind = iota
FermyonSpin2_0_0_KeyValueErrorKindNoSuchStore
FermyonSpin2_0_0_KeyValueErrorKindAccessDenied
FermyonSpin2_0_0_KeyValueErrorKindOther
)

type FermyonSpin2_0_0_KeyValueError struct {
  kind FermyonSpin2_0_0_KeyValueErrorKind
  val any
}

func (n FermyonSpin2_0_0_KeyValueError) Kind() FermyonSpin2_0_0_KeyValueErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_KeyValueErrorStoreTableFull() FermyonSpin2_0_0_KeyValueError{
  return FermyonSpin2_0_0_KeyValueError{kind: FermyonSpin2_0_0_KeyValueErrorKindStoreTableFull}
}

func FermyonSpin2_0_0_KeyValueErrorNoSuchStore() FermyonSpin2_0_0_KeyValueError{
  return FermyonSpin2_0_0_KeyValueError{kind: FermyonSpin2_0_0_KeyValueErrorKindNoSuchStore}
}

func FermyonSpin2_0_0_KeyValueErrorAccessDenied() FermyonSpin2_0_0_KeyValueError{
  return FermyonSpin2_0_0_KeyValueError{kind: FermyonSpin2_0_0_KeyValueErrorKindAccessDenied}
}

func FermyonSpin2_0_0_KeyValueErrorOther(v string) FermyonSpin2_0_0_KeyValueError{
  return FermyonSpin2_0_0_KeyValueError{kind: FermyonSpin2_0_0_KeyValueErrorKindOther, val: v}
}

func (n FermyonSpin2_0_0_KeyValueError) GetOther() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_KeyValueErrorKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_KeyValueError) SetOther(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_KeyValueErrorKindOther
}

func StaticStoreOpen(label string) Result[FermyonSpin2_0_0_KeyValueStore, FermyonSpin2_0_0_KeyValueError] {
  var lower_label C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_label.ptr = (*uint8)(unsafe.Pointer(C.CString(label)))
  lower_label.len = C.size_t(len(label))
  var ret C.fermyon_spin_2_0_0_key_value_result_own_store_error_t
  C.fermyon_spin_2_0_0_key_value_static_store_open(&lower_label , &ret )
  var lift_ret Result[FermyonSpin2_0_0_KeyValueStore, FermyonSpin2_0_0_KeyValueError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorStoreTableFull()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorNoSuchStore()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_own_store_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueStore
    lift_ret_val = FermyonSpin2_0_0_KeyValueStore(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_KeyValueStore) Get(key string) Result[Option[[]uint8], FermyonSpin2_0_0_KeyValueError] {
  var lower_self C.fermyon_spin_2_0_0_key_value_borrow_store_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var ret C.fermyon_spin_2_0_0_key_value_result_option_list_u8_error_t
  C.fermyon_spin_2_0_0_key_value_method_store_get(lower_self , &lower_key , &ret )
  var lift_ret Result[Option[[]uint8], FermyonSpin2_0_0_KeyValueError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorStoreTableFull()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorNoSuchStore()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_option_list_u8_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val Option[[]uint8]
    if lift_ret_ptr.is_some {
      var lift_ret_val_val []uint8
      lift_ret_val_val = make([]uint8, lift_ret_ptr.val.len)
      if lift_ret_ptr.val.len > 0 {
        for lift_ret_val_val_i := 0; lift_ret_val_val_i < int(lift_ret_ptr.val.len); lift_ret_val_val_i++ {
          var empty_lift_ret_val_val C.uint8_t
          lift_ret_val_val_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.val.ptr)) +
          uintptr(lift_ret_val_val_i)*unsafe.Sizeof(empty_lift_ret_val_val)))
          var list_lift_ret_val_val uint8
          list_lift_ret_val_val = uint8(lift_ret_val_val_ptr)
          lift_ret_val_val[lift_ret_val_val_i] = list_lift_ret_val_val
        }
      }
      lift_ret_val.Set(lift_ret_val_val)
    } else {
      lift_ret_val.Unset()
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_KeyValueStore) Set(key string, value []uint8) Result[struct{}, FermyonSpin2_0_0_KeyValueError] {
  var lower_self C.fermyon_spin_2_0_0_key_value_borrow_store_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var lower_value C.http_trigger_list_u8_t
  if len(value) == 0 {
    lower_value.ptr = nil
    lower_value.len = 0
  } else {
    var empty_lower_value C.uint8_t
    lower_value.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(value)) * C.size_t(unsafe.Sizeof(empty_lower_value))))
    lower_value.len = C.size_t(len(value))
    for lower_value_i := range value {
      lower_value_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_value.ptr)) +
      uintptr(lower_value_i)*unsafe.Sizeof(empty_lower_value)))
      lower_value_ptr_value := C.uint8_t(value[lower_value_i])
      *lower_value_ptr = lower_value_ptr_value
    }
  }
  var ret C.fermyon_spin_2_0_0_key_value_result_void_error_t
  C.fermyon_spin_2_0_0_key_value_method_store_set(lower_self , &lower_key , &lower_value , &ret )
  var lift_ret Result[struct{}, FermyonSpin2_0_0_KeyValueError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorStoreTableFull()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorNoSuchStore()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_KeyValueStore) Delete(key string) Result[struct{}, FermyonSpin2_0_0_KeyValueError] {
  var lower_self C.fermyon_spin_2_0_0_key_value_borrow_store_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var ret C.fermyon_spin_2_0_0_key_value_result_void_error_t
  C.fermyon_spin_2_0_0_key_value_method_store_delete(lower_self , &lower_key , &ret )
  var lift_ret Result[struct{}, FermyonSpin2_0_0_KeyValueError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorStoreTableFull()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorNoSuchStore()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_KeyValueStore) Exists(key string) Result[bool, FermyonSpin2_0_0_KeyValueError] {
  var lower_self C.fermyon_spin_2_0_0_key_value_borrow_store_t
  lower_self.__handle = C.int32_t(self)
  var lower_key C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_key.ptr = (*uint8)(unsafe.Pointer(C.CString(key)))
  lower_key.len = C.size_t(len(key))
  var ret C.fermyon_spin_2_0_0_key_value_result_bool_error_t
  C.fermyon_spin_2_0_0_key_value_method_store_exists(lower_self , &lower_key , &ret )
  var lift_ret Result[bool, FermyonSpin2_0_0_KeyValueError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorStoreTableFull()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorNoSuchStore()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*bool)(unsafe.Pointer(&ret.val))
    lift_ret_val := lift_ret_ptr
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self FermyonSpin2_0_0_KeyValueStore) GetKeys() Result[[]string, FermyonSpin2_0_0_KeyValueError] {
  var lower_self C.fermyon_spin_2_0_0_key_value_borrow_store_t
  lower_self.__handle = C.int32_t(self)
  var ret C.fermyon_spin_2_0_0_key_value_result_list_string_error_t
  C.fermyon_spin_2_0_0_key_value_method_store_get_keys(lower_self , &ret )
  var lift_ret Result[[]string, FermyonSpin2_0_0_KeyValueError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_key_value_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_KeyValueError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorStoreTableFull()
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorNoSuchStore()
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorAccessDenied()
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_KeyValueErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_list_string_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val []string
    lift_ret_val = make([]string, lift_ret_ptr.len)
    if lift_ret_ptr.len > 0 {
      for lift_ret_val_i := 0; lift_ret_val_i < int(lift_ret_ptr.len); lift_ret_val_i++ {
        var empty_lift_ret_val C.http_trigger_string_t
        lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
        uintptr(lift_ret_val_i)*unsafe.Sizeof(empty_lift_ret_val)))
        var list_lift_ret_val string
        list_lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
        lift_ret_val[lift_ret_val_i] = list_lift_ret_val
      }
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from fermyon:spin/variables@2.0.0
type FermyonSpin2_0_0_VariablesErrorKind int

const (
FermyonSpin2_0_0_VariablesErrorKindInvalidName FermyonSpin2_0_0_VariablesErrorKind = iota
FermyonSpin2_0_0_VariablesErrorKindUndefined
FermyonSpin2_0_0_VariablesErrorKindProvider
FermyonSpin2_0_0_VariablesErrorKindOther
)

type FermyonSpin2_0_0_VariablesError struct {
  kind FermyonSpin2_0_0_VariablesErrorKind
  val any
}

func (n FermyonSpin2_0_0_VariablesError) Kind() FermyonSpin2_0_0_VariablesErrorKind {
  return n.kind
}

func FermyonSpin2_0_0_VariablesErrorInvalidName(v string) FermyonSpin2_0_0_VariablesError{
  return FermyonSpin2_0_0_VariablesError{kind: FermyonSpin2_0_0_VariablesErrorKindInvalidName, val: v}
}

func (n FermyonSpin2_0_0_VariablesError) GetInvalidName() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_VariablesErrorKindInvalidName; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_VariablesError) SetInvalidName(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_VariablesErrorKindInvalidName
}

func FermyonSpin2_0_0_VariablesErrorUndefined(v string) FermyonSpin2_0_0_VariablesError{
  return FermyonSpin2_0_0_VariablesError{kind: FermyonSpin2_0_0_VariablesErrorKindUndefined, val: v}
}

func (n FermyonSpin2_0_0_VariablesError) GetUndefined() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_VariablesErrorKindUndefined; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_VariablesError) SetUndefined(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_VariablesErrorKindUndefined
}

func FermyonSpin2_0_0_VariablesErrorProvider(v string) FermyonSpin2_0_0_VariablesError{
  return FermyonSpin2_0_0_VariablesError{kind: FermyonSpin2_0_0_VariablesErrorKindProvider, val: v}
}

func (n FermyonSpin2_0_0_VariablesError) GetProvider() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_VariablesErrorKindProvider; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_VariablesError) SetProvider(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_VariablesErrorKindProvider
}

func FermyonSpin2_0_0_VariablesErrorOther(v string) FermyonSpin2_0_0_VariablesError{
  return FermyonSpin2_0_0_VariablesError{kind: FermyonSpin2_0_0_VariablesErrorKindOther, val: v}
}

func (n FermyonSpin2_0_0_VariablesError) GetOther() string{
  if g, w := n.Kind(), FermyonSpin2_0_0_VariablesErrorKindOther; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(string)
}

func (n *FermyonSpin2_0_0_VariablesError) SetOther(v string) {
  n.val = v
  n.kind = FermyonSpin2_0_0_VariablesErrorKindOther
}

func FermyonSpin2_0_0_VariablesGet(name string) Result[string, FermyonSpin2_0_0_VariablesError] {
  var lower_name C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name.len = C.size_t(len(name))
  var ret C.fermyon_spin_2_0_0_variables_result_string_error_t
  C.fermyon_spin_2_0_0_variables_get(&lower_name , &ret )
  var lift_ret Result[string, FermyonSpin2_0_0_VariablesError]
  if ret.is_err {
    lift_ret_ptr := *(*C.fermyon_spin_2_0_0_variables_error_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val FermyonSpin2_0_0_VariablesError
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_VariablesErrorInvalidName(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_VariablesErrorUndefined(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 2 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_VariablesErrorProvider(lift_ret_val_val)
    }
    if lift_ret_ptr.tag == 3 {
      lift_ret_val_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val string
      lift_ret_val_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_val_ptr.ptr)), C.int(lift_ret_val_ptr.len))
      lift_ret_val = FermyonSpin2_0_0_VariablesErrorOther(lift_ret_val_val)
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.ptr)), C.int(lift_ret_ptr.len))
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from wasi:cli/environment@0.2.0
type WasiCli0_2_0_EnvironmentTuple2StringStringT struct {
  F0 string
  F1 string
}

func WasiCli0_2_0_EnvironmentGetEnvironment() []WasiCli0_2_0_EnvironmentTuple2StringStringT {
  var ret C.http_trigger_list_tuple2_string_string_t
  C.wasi_cli_0_2_0_environment_get_environment(&ret )
  var lift_ret []WasiCli0_2_0_EnvironmentTuple2StringStringT
  lift_ret = make([]WasiCli0_2_0_EnvironmentTuple2StringStringT, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.http_trigger_tuple2_string_string_t
      lift_ret_ptr := *(*C.http_trigger_tuple2_string_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret WasiCli0_2_0_EnvironmentTuple2StringStringT
      var list_lift_ret_F0 string
      list_lift_ret_F0 = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.f0.ptr)), C.int(lift_ret_ptr.f0.len))
      list_lift_ret.F0 = list_lift_ret_F0
      var list_lift_ret_F1 string
      list_lift_ret_F1 = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.f1.ptr)), C.int(lift_ret_ptr.f1.len))
      list_lift_ret.F1 = list_lift_ret_F1
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func WasiCli0_2_0_EnvironmentGetArguments() []string {
  var ret C.http_trigger_list_string_t
  C.wasi_cli_0_2_0_environment_get_arguments(&ret )
  var lift_ret []string
  lift_ret = make([]string, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.http_trigger_string_t
      lift_ret_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret string
      list_lift_ret = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.ptr)), C.int(lift_ret_ptr.len))
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func WasiCli0_2_0_EnvironmentInitialCwd() Option[string] {
  var ret C.http_trigger_option_string_t
  C.wasi_cli_0_2_0_environment_initial_cwd(&ret )
  var lift_ret Option[string]
  if ret.is_some {
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(ret.val.ptr)), C.int(ret.val.len))
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

// Import functions from wasi:cli/exit@0.2.0
func WasiCli0_2_0_ExitExit(status Result[struct{}, struct{}]) {
  var lower_status C.wasi_cli_0_2_0_exit_result_void_void_t
  lower_status.is_err = status.IsErr()
  if status.IsOk() {
  } else {
  }
  C.wasi_cli_0_2_0_exit_exit(&lower_status )
}

// Import functions from wasi:cli/stdin@0.2.0
type WasiCli0_2_0_StdinInputStream = WasiIo0_2_0_StreamsInputStream
func WasiCli0_2_0_StdinGetStdin() WasiCli0_2_0_StdinInputStream {
  ret := C.wasi_cli_0_2_0_stdin_get_stdin()
  var lift_ret WasiCli0_2_0_StdinInputStream
  lift_ret = WasiCli0_2_0_StdinInputStream(ret.__handle)

  return lift_ret
}

// Import functions from wasi:cli/stdout@0.2.0
type WasiCli0_2_0_StdoutOutputStream = WasiIo0_2_0_StreamsOutputStream
func WasiCli0_2_0_StdoutGetStdout() WasiCli0_2_0_StdoutOutputStream {
  ret := C.wasi_cli_0_2_0_stdout_get_stdout()
  var lift_ret WasiCli0_2_0_StdoutOutputStream
  lift_ret = WasiCli0_2_0_StdoutOutputStream(ret.__handle)

  return lift_ret
}

// Import functions from wasi:cli/stderr@0.2.0
type WasiCli0_2_0_StderrOutputStream = WasiIo0_2_0_StreamsOutputStream
func WasiCli0_2_0_StderrGetStderr() WasiCli0_2_0_StderrOutputStream {
  ret := C.wasi_cli_0_2_0_stderr_get_stderr()
  var lift_ret WasiCli0_2_0_StderrOutputStream
  lift_ret = WasiCli0_2_0_StderrOutputStream(ret.__handle)

  return lift_ret
}

// Import functions from wasi:cli/terminal-input@0.2.0
// WasiCli0_2_0_TerminalInputTerminalInput is a handle to imported resource terminal-input
type WasiCli0_2_0_TerminalInputTerminalInput int32

//go:wasmimport wasi:cli/terminal-input@0.2.0 [resource-drop]terminal-input
func _WasiCli0_2_0_TerminalInputTerminalInput_drop(self WasiCli0_2_0_TerminalInputTerminalInput)

func (self WasiCli0_2_0_TerminalInputTerminalInput) Drop() {
  _WasiCli0_2_0_TerminalInputTerminalInput_drop(self)
}

// Import functions from wasi:cli/terminal-output@0.2.0
// WasiCli0_2_0_TerminalOutputTerminalOutput is a handle to imported resource terminal-output
type WasiCli0_2_0_TerminalOutputTerminalOutput int32

//go:wasmimport wasi:cli/terminal-output@0.2.0 [resource-drop]terminal-output
func _WasiCli0_2_0_TerminalOutputTerminalOutput_drop(self WasiCli0_2_0_TerminalOutputTerminalOutput)

func (self WasiCli0_2_0_TerminalOutputTerminalOutput) Drop() {
  _WasiCli0_2_0_TerminalOutputTerminalOutput_drop(self)
}

// Import functions from wasi:cli/terminal-stdin@0.2.0
type WasiCli0_2_0_TerminalStdinTerminalInput = WasiCli0_2_0_TerminalInputTerminalInput
func WasiCli0_2_0_TerminalStdinGetTerminalStdin() Option[WasiCli0_2_0_TerminalStdinTerminalInput] {
  var ret C.wasi_cli_0_2_0_terminal_stdin_option_own_terminal_input_t
  C.wasi_cli_0_2_0_terminal_stdin_get_terminal_stdin(&ret )
  var lift_ret Option[WasiCli0_2_0_TerminalStdinTerminalInput]
  if ret.is_some {
    var lift_ret_val WasiCli0_2_0_TerminalStdinTerminalInput
    lift_ret_val = WasiCli0_2_0_TerminalStdinTerminalInput(ret.val.__handle)
    
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

// Import functions from wasi:cli/terminal-stdout@0.2.0
type WasiCli0_2_0_TerminalStdoutTerminalOutput = WasiCli0_2_0_TerminalOutputTerminalOutput
func WasiCli0_2_0_TerminalStdoutGetTerminalStdout() Option[WasiCli0_2_0_TerminalStdoutTerminalOutput] {
  var ret C.wasi_cli_0_2_0_terminal_stdout_option_own_terminal_output_t
  C.wasi_cli_0_2_0_terminal_stdout_get_terminal_stdout(&ret )
  var lift_ret Option[WasiCli0_2_0_TerminalStdoutTerminalOutput]
  if ret.is_some {
    var lift_ret_val WasiCli0_2_0_TerminalStdoutTerminalOutput
    lift_ret_val = WasiCli0_2_0_TerminalStdoutTerminalOutput(ret.val.__handle)
    
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

// Import functions from wasi:cli/terminal-stderr@0.2.0
type WasiCli0_2_0_TerminalStderrTerminalOutput = WasiCli0_2_0_TerminalOutputTerminalOutput
func WasiCli0_2_0_TerminalStderrGetTerminalStderr() Option[WasiCli0_2_0_TerminalStderrTerminalOutput] {
  var ret C.wasi_cli_0_2_0_terminal_stderr_option_own_terminal_output_t
  C.wasi_cli_0_2_0_terminal_stderr_get_terminal_stderr(&ret )
  var lift_ret Option[WasiCli0_2_0_TerminalStderrTerminalOutput]
  if ret.is_some {
    var lift_ret_val WasiCli0_2_0_TerminalStderrTerminalOutput
    lift_ret_val = WasiCli0_2_0_TerminalStderrTerminalOutput(ret.val.__handle)
    
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

// Import functions from wasi:clocks/wall-clock@0.2.0
type WasiClocks0_2_0_WallClockDatetime struct {
  Seconds uint64
  Nanoseconds uint32
}

func WasiClocks0_2_0_WallClockNow() WasiClocks0_2_0_WallClockDatetime {
  var ret C.wasi_clocks_0_2_0_wall_clock_datetime_t
  C.wasi_clocks_0_2_0_wall_clock_now(&ret )
  var lift_ret WasiClocks0_2_0_WallClockDatetime
  var lift_ret_Seconds uint64
  lift_ret_Seconds = uint64(ret.seconds)
  lift_ret.Seconds = lift_ret_Seconds
  var lift_ret_Nanoseconds uint32
  lift_ret_Nanoseconds = uint32(ret.nanoseconds)
  lift_ret.Nanoseconds = lift_ret_Nanoseconds
  return lift_ret
}

func WasiClocks0_2_0_WallClockResolution() WasiClocks0_2_0_WallClockDatetime {
  var ret C.wasi_clocks_0_2_0_wall_clock_datetime_t
  C.wasi_clocks_0_2_0_wall_clock_resolution(&ret )
  var lift_ret WasiClocks0_2_0_WallClockDatetime
  var lift_ret_Seconds uint64
  lift_ret_Seconds = uint64(ret.seconds)
  lift_ret.Seconds = lift_ret_Seconds
  var lift_ret_Nanoseconds uint32
  lift_ret_Nanoseconds = uint32(ret.nanoseconds)
  lift_ret.Nanoseconds = lift_ret_Nanoseconds
  return lift_ret
}

// Import functions from wasi:filesystem/types@0.2.0
type WasiFilesystem0_2_0_TypesInputStream = WasiIo0_2_0_StreamsInputStream
type WasiFilesystem0_2_0_TypesOutputStream = WasiIo0_2_0_StreamsOutputStream
type WasiFilesystem0_2_0_TypesError = WasiIo0_2_0_StreamsError
type WasiFilesystem0_2_0_TypesDatetime = WasiClocks0_2_0_WallClockDatetime
type WasiFilesystem0_2_0_TypesFilesize = uint64
type WasiFilesystem0_2_0_TypesDescriptorTypeKind int

const (
WasiFilesystem0_2_0_TypesDescriptorTypeKindUnknown WasiFilesystem0_2_0_TypesDescriptorTypeKind = iota
WasiFilesystem0_2_0_TypesDescriptorTypeKindBlockDevice
WasiFilesystem0_2_0_TypesDescriptorTypeKindCharacterDevice
WasiFilesystem0_2_0_TypesDescriptorTypeKindDirectory
WasiFilesystem0_2_0_TypesDescriptorTypeKindFifo
WasiFilesystem0_2_0_TypesDescriptorTypeKindSymbolicLink
WasiFilesystem0_2_0_TypesDescriptorTypeKindRegularFile
WasiFilesystem0_2_0_TypesDescriptorTypeKindSocket
)

type WasiFilesystem0_2_0_TypesDescriptorType struct {
  kind WasiFilesystem0_2_0_TypesDescriptorTypeKind
}

func (n WasiFilesystem0_2_0_TypesDescriptorType) Kind() WasiFilesystem0_2_0_TypesDescriptorTypeKind {
  return n.kind
}

func WasiFilesystem0_2_0_TypesDescriptorTypeUnknown() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindUnknown}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeBlockDevice() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindBlockDevice}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeCharacterDevice() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindCharacterDevice}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeDirectory() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindDirectory}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeFifo() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindFifo}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeSymbolicLink() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindSymbolicLink}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeRegularFile() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindRegularFile}
}

func WasiFilesystem0_2_0_TypesDescriptorTypeSocket() WasiFilesystem0_2_0_TypesDescriptorType{
  return WasiFilesystem0_2_0_TypesDescriptorType{kind: WasiFilesystem0_2_0_TypesDescriptorTypeKindSocket}
}

type WasiFilesystem0_2_0_TypesDescriptorFlags uint64
const (
WasiFilesystem0_2_0_TypesDescriptorFlags_READ WasiFilesystem0_2_0_TypesDescriptorFlags = 1 << iota
WasiFilesystem0_2_0_TypesDescriptorFlags_WRITE
WasiFilesystem0_2_0_TypesDescriptorFlags_FILE-INTEGRITY-SYNC
WasiFilesystem0_2_0_TypesDescriptorFlags_DATA-INTEGRITY-SYNC
WasiFilesystem0_2_0_TypesDescriptorFlags_REQUESTED-WRITE-SYNC
WasiFilesystem0_2_0_TypesDescriptorFlags_MUTATE-DIRECTORY
)

type WasiFilesystem0_2_0_TypesPathFlags uint64
const (
WasiFilesystem0_2_0_TypesPathFlags_SYMLINK-FOLLOW WasiFilesystem0_2_0_TypesPathFlags = 1 << iota
)

type WasiFilesystem0_2_0_TypesOpenFlags uint64
const (
WasiFilesystem0_2_0_TypesOpenFlags_CREATE WasiFilesystem0_2_0_TypesOpenFlags = 1 << iota
WasiFilesystem0_2_0_TypesOpenFlags_DIRECTORY
WasiFilesystem0_2_0_TypesOpenFlags_EXCLUSIVE
WasiFilesystem0_2_0_TypesOpenFlags_TRUNCATE
)

type WasiFilesystem0_2_0_TypesLinkCount = uint64
type WasiFilesystem0_2_0_TypesDescriptorStat struct {
  Type WasiFilesystem0_2_0_TypesDescriptorType
  LinkCount WasiFilesystem0_2_0_TypesLinkCount
  Size WasiFilesystem0_2_0_TypesFilesize
  DataAccessTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
  DataModificationTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
  StatusChangeTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
}

type WasiFilesystem0_2_0_TypesNewTimestampKind int

const (
WasiFilesystem0_2_0_TypesNewTimestampKindNoChange WasiFilesystem0_2_0_TypesNewTimestampKind = iota
WasiFilesystem0_2_0_TypesNewTimestampKindNow
WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp
)

type WasiFilesystem0_2_0_TypesNewTimestamp struct {
  kind WasiFilesystem0_2_0_TypesNewTimestampKind
  val any
}

func (n WasiFilesystem0_2_0_TypesNewTimestamp) Kind() WasiFilesystem0_2_0_TypesNewTimestampKind {
  return n.kind
}

func WasiFilesystem0_2_0_TypesNewTimestampNoChange() WasiFilesystem0_2_0_TypesNewTimestamp{
  return WasiFilesystem0_2_0_TypesNewTimestamp{kind: WasiFilesystem0_2_0_TypesNewTimestampKindNoChange}
}

func WasiFilesystem0_2_0_TypesNewTimestampNow() WasiFilesystem0_2_0_TypesNewTimestamp{
  return WasiFilesystem0_2_0_TypesNewTimestamp{kind: WasiFilesystem0_2_0_TypesNewTimestampKindNow}
}

func WasiFilesystem0_2_0_TypesNewTimestampTimestamp(v WasiFilesystem0_2_0_TypesDatetime) WasiFilesystem0_2_0_TypesNewTimestamp{
  return WasiFilesystem0_2_0_TypesNewTimestamp{kind: WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp, val: v}
}

func (n WasiFilesystem0_2_0_TypesNewTimestamp) GetTimestamp() WasiFilesystem0_2_0_TypesDatetime{
  if g, w := n.Kind(), WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiFilesystem0_2_0_TypesDatetime)
}

func (n *WasiFilesystem0_2_0_TypesNewTimestamp) SetTimestamp(v WasiFilesystem0_2_0_TypesDatetime) {
  n.val = v
  n.kind = WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp
}

type WasiFilesystem0_2_0_TypesDirectoryEntry struct {
  Type WasiFilesystem0_2_0_TypesDescriptorType
  Name string
}

type WasiFilesystem0_2_0_TypesErrorCodeKind int

const (
WasiFilesystem0_2_0_TypesErrorCodeKindAccess WasiFilesystem0_2_0_TypesErrorCodeKind = iota
WasiFilesystem0_2_0_TypesErrorCodeKindWouldBlock
WasiFilesystem0_2_0_TypesErrorCodeKindAlready
WasiFilesystem0_2_0_TypesErrorCodeKindBadDescriptor
WasiFilesystem0_2_0_TypesErrorCodeKindBusy
WasiFilesystem0_2_0_TypesErrorCodeKindDeadlock
WasiFilesystem0_2_0_TypesErrorCodeKindQuota
WasiFilesystem0_2_0_TypesErrorCodeKindExist
WasiFilesystem0_2_0_TypesErrorCodeKindFileTooLarge
WasiFilesystem0_2_0_TypesErrorCodeKindIllegalByteSequence
WasiFilesystem0_2_0_TypesErrorCodeKindInProgress
WasiFilesystem0_2_0_TypesErrorCodeKindInterrupted
WasiFilesystem0_2_0_TypesErrorCodeKindInvalid
WasiFilesystem0_2_0_TypesErrorCodeKindIo
WasiFilesystem0_2_0_TypesErrorCodeKindIsDirectory
WasiFilesystem0_2_0_TypesErrorCodeKindLoop
WasiFilesystem0_2_0_TypesErrorCodeKindTooManyLinks
WasiFilesystem0_2_0_TypesErrorCodeKindMessageSize
WasiFilesystem0_2_0_TypesErrorCodeKindNameTooLong
WasiFilesystem0_2_0_TypesErrorCodeKindNoDevice
WasiFilesystem0_2_0_TypesErrorCodeKindNoEntry
WasiFilesystem0_2_0_TypesErrorCodeKindNoLock
WasiFilesystem0_2_0_TypesErrorCodeKindInsufficientMemory
WasiFilesystem0_2_0_TypesErrorCodeKindInsufficientSpace
WasiFilesystem0_2_0_TypesErrorCodeKindNotDirectory
WasiFilesystem0_2_0_TypesErrorCodeKindNotEmpty
WasiFilesystem0_2_0_TypesErrorCodeKindNotRecoverable
WasiFilesystem0_2_0_TypesErrorCodeKindUnsupported
WasiFilesystem0_2_0_TypesErrorCodeKindNoTty
WasiFilesystem0_2_0_TypesErrorCodeKindNoSuchDevice
WasiFilesystem0_2_0_TypesErrorCodeKindOverflow
WasiFilesystem0_2_0_TypesErrorCodeKindNotPermitted
WasiFilesystem0_2_0_TypesErrorCodeKindPipe
WasiFilesystem0_2_0_TypesErrorCodeKindReadOnly
WasiFilesystem0_2_0_TypesErrorCodeKindInvalidSeek
WasiFilesystem0_2_0_TypesErrorCodeKindTextFileBusy
WasiFilesystem0_2_0_TypesErrorCodeKindCrossDevice
)

type WasiFilesystem0_2_0_TypesErrorCode struct {
  kind WasiFilesystem0_2_0_TypesErrorCodeKind
}

func (n WasiFilesystem0_2_0_TypesErrorCode) Kind() WasiFilesystem0_2_0_TypesErrorCodeKind {
  return n.kind
}

func WasiFilesystem0_2_0_TypesErrorCodeAccess() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindAccess}
}

func WasiFilesystem0_2_0_TypesErrorCodeWouldBlock() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindWouldBlock}
}

func WasiFilesystem0_2_0_TypesErrorCodeAlready() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindAlready}
}

func WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindBadDescriptor}
}

func WasiFilesystem0_2_0_TypesErrorCodeBusy() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindBusy}
}

func WasiFilesystem0_2_0_TypesErrorCodeDeadlock() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindDeadlock}
}

func WasiFilesystem0_2_0_TypesErrorCodeQuota() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindQuota}
}

func WasiFilesystem0_2_0_TypesErrorCodeExist() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindExist}
}

func WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindFileTooLarge}
}

func WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindIllegalByteSequence}
}

func WasiFilesystem0_2_0_TypesErrorCodeInProgress() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindInProgress}
}

func WasiFilesystem0_2_0_TypesErrorCodeInterrupted() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindInterrupted}
}

func WasiFilesystem0_2_0_TypesErrorCodeInvalid() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindInvalid}
}

func WasiFilesystem0_2_0_TypesErrorCodeIo() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindIo}
}

func WasiFilesystem0_2_0_TypesErrorCodeIsDirectory() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindIsDirectory}
}

func WasiFilesystem0_2_0_TypesErrorCodeLoop() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindLoop}
}

func WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindTooManyLinks}
}

func WasiFilesystem0_2_0_TypesErrorCodeMessageSize() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindMessageSize}
}

func WasiFilesystem0_2_0_TypesErrorCodeNameTooLong() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNameTooLong}
}

func WasiFilesystem0_2_0_TypesErrorCodeNoDevice() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNoDevice}
}

func WasiFilesystem0_2_0_TypesErrorCodeNoEntry() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNoEntry}
}

func WasiFilesystem0_2_0_TypesErrorCodeNoLock() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNoLock}
}

func WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindInsufficientMemory}
}

func WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindInsufficientSpace}
}

func WasiFilesystem0_2_0_TypesErrorCodeNotDirectory() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNotDirectory}
}

func WasiFilesystem0_2_0_TypesErrorCodeNotEmpty() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNotEmpty}
}

func WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNotRecoverable}
}

func WasiFilesystem0_2_0_TypesErrorCodeUnsupported() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindUnsupported}
}

func WasiFilesystem0_2_0_TypesErrorCodeNoTty() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNoTty}
}

func WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNoSuchDevice}
}

func WasiFilesystem0_2_0_TypesErrorCodeOverflow() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindOverflow}
}

func WasiFilesystem0_2_0_TypesErrorCodeNotPermitted() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindNotPermitted}
}

func WasiFilesystem0_2_0_TypesErrorCodePipe() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindPipe}
}

func WasiFilesystem0_2_0_TypesErrorCodeReadOnly() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindReadOnly}
}

func WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindInvalidSeek}
}

func WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindTextFileBusy}
}

func WasiFilesystem0_2_0_TypesErrorCodeCrossDevice() WasiFilesystem0_2_0_TypesErrorCode{
  return WasiFilesystem0_2_0_TypesErrorCode{kind: WasiFilesystem0_2_0_TypesErrorCodeKindCrossDevice}
}

type WasiFilesystem0_2_0_TypesAdviceKind int

const (
WasiFilesystem0_2_0_TypesAdviceKindNormal WasiFilesystem0_2_0_TypesAdviceKind = iota
WasiFilesystem0_2_0_TypesAdviceKindSequential
WasiFilesystem0_2_0_TypesAdviceKindRandom
WasiFilesystem0_2_0_TypesAdviceKindWillNeed
WasiFilesystem0_2_0_TypesAdviceKindDontNeed
WasiFilesystem0_2_0_TypesAdviceKindNoReuse
)

type WasiFilesystem0_2_0_TypesAdvice struct {
  kind WasiFilesystem0_2_0_TypesAdviceKind
}

func (n WasiFilesystem0_2_0_TypesAdvice) Kind() WasiFilesystem0_2_0_TypesAdviceKind {
  return n.kind
}

func WasiFilesystem0_2_0_TypesAdviceNormal() WasiFilesystem0_2_0_TypesAdvice{
  return WasiFilesystem0_2_0_TypesAdvice{kind: WasiFilesystem0_2_0_TypesAdviceKindNormal}
}

func WasiFilesystem0_2_0_TypesAdviceSequential() WasiFilesystem0_2_0_TypesAdvice{
  return WasiFilesystem0_2_0_TypesAdvice{kind: WasiFilesystem0_2_0_TypesAdviceKindSequential}
}

func WasiFilesystem0_2_0_TypesAdviceRandom() WasiFilesystem0_2_0_TypesAdvice{
  return WasiFilesystem0_2_0_TypesAdvice{kind: WasiFilesystem0_2_0_TypesAdviceKindRandom}
}

func WasiFilesystem0_2_0_TypesAdviceWillNeed() WasiFilesystem0_2_0_TypesAdvice{
  return WasiFilesystem0_2_0_TypesAdvice{kind: WasiFilesystem0_2_0_TypesAdviceKindWillNeed}
}

func WasiFilesystem0_2_0_TypesAdviceDontNeed() WasiFilesystem0_2_0_TypesAdvice{
  return WasiFilesystem0_2_0_TypesAdvice{kind: WasiFilesystem0_2_0_TypesAdviceKindDontNeed}
}

func WasiFilesystem0_2_0_TypesAdviceNoReuse() WasiFilesystem0_2_0_TypesAdvice{
  return WasiFilesystem0_2_0_TypesAdvice{kind: WasiFilesystem0_2_0_TypesAdviceKindNoReuse}
}

type WasiFilesystem0_2_0_TypesMetadataHashValue struct {
  Lower uint64
  Upper uint64
}

// WasiFilesystem0_2_0_TypesDescriptor is a handle to imported resource descriptor
type WasiFilesystem0_2_0_TypesDescriptor int32

//go:wasmimport wasi:filesystem/types@0.2.0 [resource-drop]descriptor
func _WasiFilesystem0_2_0_TypesDescriptor_drop(self WasiFilesystem0_2_0_TypesDescriptor)

func (self WasiFilesystem0_2_0_TypesDescriptor) Drop() {
  _WasiFilesystem0_2_0_TypesDescriptor_drop(self)
}

// WasiFilesystem0_2_0_TypesDirectoryEntryStream is a handle to imported resource directory-entry-stream
type WasiFilesystem0_2_0_TypesDirectoryEntryStream int32

//go:wasmimport wasi:filesystem/types@0.2.0 [resource-drop]directory-entry-stream
func _WasiFilesystem0_2_0_TypesDirectoryEntryStream_drop(self WasiFilesystem0_2_0_TypesDirectoryEntryStream)

func (self WasiFilesystem0_2_0_TypesDirectoryEntryStream) Drop() {
  _WasiFilesystem0_2_0_TypesDirectoryEntryStream_drop(self)
}

type WasiFilesystem0_2_0_TypesTuple2ListU8TBoolT struct {
  F0 []uint8
  F1 bool
}

func (self WasiFilesystem0_2_0_TypesDescriptor) ReadViaStream(offset WasiFilesystem0_2_0_TypesFilesize) Result[WasiFilesystem0_2_0_TypesInputStream, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_offset C.uint64_t
  lower_offset_val := C.uint64_t(offset)
  lower_offset = lower_offset_val
  var ret C.wasi_filesystem_0_2_0_types_result_own_input_stream_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_read_via_stream(lower_self , lower_offset , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesInputStream, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_own_input_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesInputStream
    lift_ret_val = WasiFilesystem0_2_0_TypesInputStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) WriteViaStream(offset WasiFilesystem0_2_0_TypesFilesize) Result[WasiFilesystem0_2_0_TypesOutputStream, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_offset C.uint64_t
  lower_offset_val := C.uint64_t(offset)
  lower_offset = lower_offset_val
  var ret C.wasi_filesystem_0_2_0_types_result_own_output_stream_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_write_via_stream(lower_self , lower_offset , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesOutputStream, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_own_output_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesOutputStream
    lift_ret_val = WasiFilesystem0_2_0_TypesOutputStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) AppendViaStream() Result[WasiFilesystem0_2_0_TypesOutputStream, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_own_output_stream_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_append_via_stream(lower_self , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesOutputStream, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_own_output_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesOutputStream
    lift_ret_val = WasiFilesystem0_2_0_TypesOutputStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) Advise(offset WasiFilesystem0_2_0_TypesFilesize, length WasiFilesystem0_2_0_TypesFilesize, advice WasiFilesystem0_2_0_TypesAdvice) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_offset C.uint64_t
  lower_offset_val := C.uint64_t(offset)
  lower_offset = lower_offset_val
  var lower_length C.uint64_t
  lower_length_val := C.uint64_t(length)
  lower_length = lower_length_val
  var lower_advice C.wasi_filesystem_0_2_0_types_advice_t
  if advice.Kind() == WasiFilesystem0_2_0_TypesAdviceKindNormal {
    lower_advice = 0
  }
  if advice.Kind() == WasiFilesystem0_2_0_TypesAdviceKindSequential {
    lower_advice = 1
  }
  if advice.Kind() == WasiFilesystem0_2_0_TypesAdviceKindRandom {
    lower_advice = 2
  }
  if advice.Kind() == WasiFilesystem0_2_0_TypesAdviceKindWillNeed {
    lower_advice = 3
  }
  if advice.Kind() == WasiFilesystem0_2_0_TypesAdviceKindDontNeed {
    lower_advice = 4
  }
  if advice.Kind() == WasiFilesystem0_2_0_TypesAdviceKindNoReuse {
    lower_advice = 5
  }
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_advise(lower_self , lower_offset , lower_length , lower_advice , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) SyncData() Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_sync_data(lower_self , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) GetFlags() Result[WasiFilesystem0_2_0_TypesDescriptorFlags, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_descriptor_flags_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_get_flags(lower_self , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesDescriptorFlags, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_descriptor_flags_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesDescriptorFlags
    lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorFlags(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) GetType() Result[WasiFilesystem0_2_0_TypesDescriptorType, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_descriptor_type_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_get_type(lower_self , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesDescriptorType, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_descriptor_type_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesDescriptorType
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeBlockDevice()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeCharacterDevice()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeDirectory()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeFifo()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeSymbolicLink()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeRegularFile()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesDescriptorTypeSocket()
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) SetSize(size WasiFilesystem0_2_0_TypesFilesize) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_size C.uint64_t
  lower_size_val := C.uint64_t(size)
  lower_size = lower_size_val
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_set_size(lower_self , lower_size , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) SetTimes(data_access_timestamp WasiFilesystem0_2_0_TypesNewTimestamp, data_modification_timestamp WasiFilesystem0_2_0_TypesNewTimestamp) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_data_access_timestamp C.wasi_filesystem_0_2_0_types_new_timestamp_t
  if data_access_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNoChange {
    lower_data_access_timestamp.tag = 0
  }
  if data_access_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNow {
    lower_data_access_timestamp.tag = 1
  }
  if data_access_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp {

    lower_data_access_timestamp.tag = 2
    lower_data_access_timestamp_ptr := (*C.wasi_filesystem_0_2_0_types_datetime_t)(unsafe.Pointer(&lower_data_access_timestamp.val))
    var lower_data_access_timestamp_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    var lower_data_access_timestamp_val_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    lower_data_access_timestamp_val_val_seconds := C.uint64_t(data_access_timestamp.GetTimestamp().Seconds)
    lower_data_access_timestamp_val_val.seconds = lower_data_access_timestamp_val_val_seconds
    lower_data_access_timestamp_val_val_nanoseconds := C.uint32_t(data_access_timestamp.GetTimestamp().Nanoseconds)
    lower_data_access_timestamp_val_val.nanoseconds = lower_data_access_timestamp_val_val_nanoseconds
    lower_data_access_timestamp_val = lower_data_access_timestamp_val_val
    *lower_data_access_timestamp_ptr = lower_data_access_timestamp_val
  }
  var lower_data_modification_timestamp C.wasi_filesystem_0_2_0_types_new_timestamp_t
  if data_modification_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNoChange {
    lower_data_modification_timestamp.tag = 0
  }
  if data_modification_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNow {
    lower_data_modification_timestamp.tag = 1
  }
  if data_modification_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp {

    lower_data_modification_timestamp.tag = 2
    lower_data_modification_timestamp_ptr := (*C.wasi_filesystem_0_2_0_types_datetime_t)(unsafe.Pointer(&lower_data_modification_timestamp.val))
    var lower_data_modification_timestamp_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    var lower_data_modification_timestamp_val_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    lower_data_modification_timestamp_val_val_seconds := C.uint64_t(data_modification_timestamp.GetTimestamp().Seconds)
    lower_data_modification_timestamp_val_val.seconds = lower_data_modification_timestamp_val_val_seconds
    lower_data_modification_timestamp_val_val_nanoseconds := C.uint32_t(data_modification_timestamp.GetTimestamp().Nanoseconds)
    lower_data_modification_timestamp_val_val.nanoseconds = lower_data_modification_timestamp_val_val_nanoseconds
    lower_data_modification_timestamp_val = lower_data_modification_timestamp_val_val
    *lower_data_modification_timestamp_ptr = lower_data_modification_timestamp_val
  }
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_set_times(lower_self , &lower_data_access_timestamp , &lower_data_modification_timestamp , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) Read(length WasiFilesystem0_2_0_TypesFilesize, offset WasiFilesystem0_2_0_TypesFilesize) Result[WasiFilesystem0_2_0_TypesTuple2ListU8TBoolT, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_length C.uint64_t
  lower_length_val := C.uint64_t(length)
  lower_length = lower_length_val
  var lower_offset C.uint64_t
  lower_offset_val := C.uint64_t(offset)
  lower_offset = lower_offset_val
  var ret C.wasi_filesystem_0_2_0_types_result_tuple2_list_u8_bool_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_read(lower_self , lower_length , lower_offset , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesTuple2ListU8TBoolT, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_tuple2_list_u8_bool_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesTuple2ListU8TBoolT
    var lift_ret_val_F0 []uint8
    lift_ret_val_F0 = make([]uint8, lift_ret_ptr.f0.len)
    if lift_ret_ptr.f0.len > 0 {
      for lift_ret_val_F0_i := 0; lift_ret_val_F0_i < int(lift_ret_ptr.f0.len); lift_ret_val_F0_i++ {
        var empty_lift_ret_val_F0 C.uint8_t
        lift_ret_val_F0_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.f0.ptr)) +
        uintptr(lift_ret_val_F0_i)*unsafe.Sizeof(empty_lift_ret_val_F0)))
        var list_lift_ret_val_F0 uint8
        list_lift_ret_val_F0 = uint8(lift_ret_val_F0_ptr)
        lift_ret_val_F0[lift_ret_val_F0_i] = list_lift_ret_val_F0
      }
    }
    lift_ret_val.F0 = lift_ret_val_F0
    lift_ret_val_F1 := lift_ret_ptr.f1
    lift_ret_val.F1 = lift_ret_val_F1
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) Write(buffer []uint8, offset WasiFilesystem0_2_0_TypesFilesize) Result[WasiFilesystem0_2_0_TypesFilesize, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_buffer C.http_trigger_list_u8_t
  if len(buffer) == 0 {
    lower_buffer.ptr = nil
    lower_buffer.len = 0
  } else {
    var empty_lower_buffer C.uint8_t
    lower_buffer.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(buffer)) * C.size_t(unsafe.Sizeof(empty_lower_buffer))))
    lower_buffer.len = C.size_t(len(buffer))
    for lower_buffer_i := range buffer {
      lower_buffer_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_buffer.ptr)) +
      uintptr(lower_buffer_i)*unsafe.Sizeof(empty_lower_buffer)))
      lower_buffer_ptr_value := C.uint8_t(buffer[lower_buffer_i])
      *lower_buffer_ptr = lower_buffer_ptr_value
    }
  }
  var lower_offset C.uint64_t
  lower_offset_val := C.uint64_t(offset)
  lower_offset = lower_offset_val
  var ret C.wasi_filesystem_0_2_0_types_result_filesize_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_write(lower_self , &lower_buffer , lower_offset , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesFilesize, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_filesize_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesFilesize
    var lift_ret_val_val uint64
    lift_ret_val_val = uint64(lift_ret_ptr)
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) ReadDirectory() Result[WasiFilesystem0_2_0_TypesDirectoryEntryStream, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_own_directory_entry_stream_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_read_directory(lower_self , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesDirectoryEntryStream, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_own_directory_entry_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesDirectoryEntryStream
    lift_ret_val = WasiFilesystem0_2_0_TypesDirectoryEntryStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) Sync() Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_sync(lower_self , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) CreateDirectoryAt(path string) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_create_directory_at(lower_self , &lower_path , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) Stat() Result[WasiFilesystem0_2_0_TypesDescriptorStat, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_descriptor_stat_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_stat(lower_self , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesDescriptorStat, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_descriptor_stat_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesDescriptorStat
    var lift_ret_val_Type WasiFilesystem0_2_0_TypesDescriptorType
    if lift_ret_ptr.type == 0 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeUnknown()
    }
    if lift_ret_ptr.type == 1 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeBlockDevice()
    }
    if lift_ret_ptr.type == 2 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeCharacterDevice()
    }
    if lift_ret_ptr.type == 3 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeDirectory()
    }
    if lift_ret_ptr.type == 4 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeFifo()
    }
    if lift_ret_ptr.type == 5 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeSymbolicLink()
    }
    if lift_ret_ptr.type == 6 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeRegularFile()
    }
    if lift_ret_ptr.type == 7 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeSocket()
    }
    lift_ret_val.Type = lift_ret_val_Type
    var lift_ret_val_LinkCount WasiFilesystem0_2_0_TypesLinkCount
    var lift_ret_val_LinkCount_val uint64
    lift_ret_val_LinkCount_val = uint64(lift_ret_ptr.link_count)
    lift_ret_val_LinkCount = lift_ret_val_LinkCount_val
    lift_ret_val.LinkCount = lift_ret_val_LinkCount
    var lift_ret_val_Size WasiFilesystem0_2_0_TypesFilesize
    var lift_ret_val_Size_val uint64
    lift_ret_val_Size_val = uint64(lift_ret_ptr.size)
    lift_ret_val_Size = lift_ret_val_Size_val
    lift_ret_val.Size = lift_ret_val_Size
    var lift_ret_val_DataAccessTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
    if lift_ret_ptr.data_access_timestamp.is_some {
      var lift_ret_val_DataAccessTimestamp_val WasiFilesystem0_2_0_TypesDatetime
      var lift_ret_val_DataAccessTimestamp_val_val WasiClocks0_2_0_WallClockDatetime
      var lift_ret_val_DataAccessTimestamp_val_val_Seconds uint64
      lift_ret_val_DataAccessTimestamp_val_val_Seconds = uint64(lift_ret_ptr.data_access_timestamp.val.seconds)
      lift_ret_val_DataAccessTimestamp_val_val.Seconds = lift_ret_val_DataAccessTimestamp_val_val_Seconds
      var lift_ret_val_DataAccessTimestamp_val_val_Nanoseconds uint32
      lift_ret_val_DataAccessTimestamp_val_val_Nanoseconds = uint32(lift_ret_ptr.data_access_timestamp.val.nanoseconds)
      lift_ret_val_DataAccessTimestamp_val_val.Nanoseconds = lift_ret_val_DataAccessTimestamp_val_val_Nanoseconds
      lift_ret_val_DataAccessTimestamp_val = lift_ret_val_DataAccessTimestamp_val_val
      lift_ret_val_DataAccessTimestamp.Set(lift_ret_val_DataAccessTimestamp_val)
    } else {
      lift_ret_val_DataAccessTimestamp.Unset()
    }
    lift_ret_val.DataAccessTimestamp = lift_ret_val_DataAccessTimestamp
    var lift_ret_val_DataModificationTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
    if lift_ret_ptr.data_modification_timestamp.is_some {
      var lift_ret_val_DataModificationTimestamp_val WasiFilesystem0_2_0_TypesDatetime
      var lift_ret_val_DataModificationTimestamp_val_val WasiClocks0_2_0_WallClockDatetime
      var lift_ret_val_DataModificationTimestamp_val_val_Seconds uint64
      lift_ret_val_DataModificationTimestamp_val_val_Seconds = uint64(lift_ret_ptr.data_modification_timestamp.val.seconds)
      lift_ret_val_DataModificationTimestamp_val_val.Seconds = lift_ret_val_DataModificationTimestamp_val_val_Seconds
      var lift_ret_val_DataModificationTimestamp_val_val_Nanoseconds uint32
      lift_ret_val_DataModificationTimestamp_val_val_Nanoseconds = uint32(lift_ret_ptr.data_modification_timestamp.val.nanoseconds)
      lift_ret_val_DataModificationTimestamp_val_val.Nanoseconds = lift_ret_val_DataModificationTimestamp_val_val_Nanoseconds
      lift_ret_val_DataModificationTimestamp_val = lift_ret_val_DataModificationTimestamp_val_val
      lift_ret_val_DataModificationTimestamp.Set(lift_ret_val_DataModificationTimestamp_val)
    } else {
      lift_ret_val_DataModificationTimestamp.Unset()
    }
    lift_ret_val.DataModificationTimestamp = lift_ret_val_DataModificationTimestamp
    var lift_ret_val_StatusChangeTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
    if lift_ret_ptr.status_change_timestamp.is_some {
      var lift_ret_val_StatusChangeTimestamp_val WasiFilesystem0_2_0_TypesDatetime
      var lift_ret_val_StatusChangeTimestamp_val_val WasiClocks0_2_0_WallClockDatetime
      var lift_ret_val_StatusChangeTimestamp_val_val_Seconds uint64
      lift_ret_val_StatusChangeTimestamp_val_val_Seconds = uint64(lift_ret_ptr.status_change_timestamp.val.seconds)
      lift_ret_val_StatusChangeTimestamp_val_val.Seconds = lift_ret_val_StatusChangeTimestamp_val_val_Seconds
      var lift_ret_val_StatusChangeTimestamp_val_val_Nanoseconds uint32
      lift_ret_val_StatusChangeTimestamp_val_val_Nanoseconds = uint32(lift_ret_ptr.status_change_timestamp.val.nanoseconds)
      lift_ret_val_StatusChangeTimestamp_val_val.Nanoseconds = lift_ret_val_StatusChangeTimestamp_val_val_Nanoseconds
      lift_ret_val_StatusChangeTimestamp_val = lift_ret_val_StatusChangeTimestamp_val_val
      lift_ret_val_StatusChangeTimestamp.Set(lift_ret_val_StatusChangeTimestamp_val)
    } else {
      lift_ret_val_StatusChangeTimestamp.Unset()
    }
    lift_ret_val.StatusChangeTimestamp = lift_ret_val_StatusChangeTimestamp
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) StatAt(path_flags WasiFilesystem0_2_0_TypesPathFlags, path string) Result[WasiFilesystem0_2_0_TypesDescriptorStat, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  lower_path_flags := C.uint8_t(path_flags)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var ret C.wasi_filesystem_0_2_0_types_result_descriptor_stat_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_stat_at(lower_self , lower_path_flags , &lower_path , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesDescriptorStat, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_descriptor_stat_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesDescriptorStat
    var lift_ret_val_Type WasiFilesystem0_2_0_TypesDescriptorType
    if lift_ret_ptr.type == 0 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeUnknown()
    }
    if lift_ret_ptr.type == 1 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeBlockDevice()
    }
    if lift_ret_ptr.type == 2 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeCharacterDevice()
    }
    if lift_ret_ptr.type == 3 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeDirectory()
    }
    if lift_ret_ptr.type == 4 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeFifo()
    }
    if lift_ret_ptr.type == 5 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeSymbolicLink()
    }
    if lift_ret_ptr.type == 6 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeRegularFile()
    }
    if lift_ret_ptr.type == 7 {
      lift_ret_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeSocket()
    }
    lift_ret_val.Type = lift_ret_val_Type
    var lift_ret_val_LinkCount WasiFilesystem0_2_0_TypesLinkCount
    var lift_ret_val_LinkCount_val uint64
    lift_ret_val_LinkCount_val = uint64(lift_ret_ptr.link_count)
    lift_ret_val_LinkCount = lift_ret_val_LinkCount_val
    lift_ret_val.LinkCount = lift_ret_val_LinkCount
    var lift_ret_val_Size WasiFilesystem0_2_0_TypesFilesize
    var lift_ret_val_Size_val uint64
    lift_ret_val_Size_val = uint64(lift_ret_ptr.size)
    lift_ret_val_Size = lift_ret_val_Size_val
    lift_ret_val.Size = lift_ret_val_Size
    var lift_ret_val_DataAccessTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
    if lift_ret_ptr.data_access_timestamp.is_some {
      var lift_ret_val_DataAccessTimestamp_val WasiFilesystem0_2_0_TypesDatetime
      var lift_ret_val_DataAccessTimestamp_val_val WasiClocks0_2_0_WallClockDatetime
      var lift_ret_val_DataAccessTimestamp_val_val_Seconds uint64
      lift_ret_val_DataAccessTimestamp_val_val_Seconds = uint64(lift_ret_ptr.data_access_timestamp.val.seconds)
      lift_ret_val_DataAccessTimestamp_val_val.Seconds = lift_ret_val_DataAccessTimestamp_val_val_Seconds
      var lift_ret_val_DataAccessTimestamp_val_val_Nanoseconds uint32
      lift_ret_val_DataAccessTimestamp_val_val_Nanoseconds = uint32(lift_ret_ptr.data_access_timestamp.val.nanoseconds)
      lift_ret_val_DataAccessTimestamp_val_val.Nanoseconds = lift_ret_val_DataAccessTimestamp_val_val_Nanoseconds
      lift_ret_val_DataAccessTimestamp_val = lift_ret_val_DataAccessTimestamp_val_val
      lift_ret_val_DataAccessTimestamp.Set(lift_ret_val_DataAccessTimestamp_val)
    } else {
      lift_ret_val_DataAccessTimestamp.Unset()
    }
    lift_ret_val.DataAccessTimestamp = lift_ret_val_DataAccessTimestamp
    var lift_ret_val_DataModificationTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
    if lift_ret_ptr.data_modification_timestamp.is_some {
      var lift_ret_val_DataModificationTimestamp_val WasiFilesystem0_2_0_TypesDatetime
      var lift_ret_val_DataModificationTimestamp_val_val WasiClocks0_2_0_WallClockDatetime
      var lift_ret_val_DataModificationTimestamp_val_val_Seconds uint64
      lift_ret_val_DataModificationTimestamp_val_val_Seconds = uint64(lift_ret_ptr.data_modification_timestamp.val.seconds)
      lift_ret_val_DataModificationTimestamp_val_val.Seconds = lift_ret_val_DataModificationTimestamp_val_val_Seconds
      var lift_ret_val_DataModificationTimestamp_val_val_Nanoseconds uint32
      lift_ret_val_DataModificationTimestamp_val_val_Nanoseconds = uint32(lift_ret_ptr.data_modification_timestamp.val.nanoseconds)
      lift_ret_val_DataModificationTimestamp_val_val.Nanoseconds = lift_ret_val_DataModificationTimestamp_val_val_Nanoseconds
      lift_ret_val_DataModificationTimestamp_val = lift_ret_val_DataModificationTimestamp_val_val
      lift_ret_val_DataModificationTimestamp.Set(lift_ret_val_DataModificationTimestamp_val)
    } else {
      lift_ret_val_DataModificationTimestamp.Unset()
    }
    lift_ret_val.DataModificationTimestamp = lift_ret_val_DataModificationTimestamp
    var lift_ret_val_StatusChangeTimestamp Option[WasiFilesystem0_2_0_TypesDatetime]
    if lift_ret_ptr.status_change_timestamp.is_some {
      var lift_ret_val_StatusChangeTimestamp_val WasiFilesystem0_2_0_TypesDatetime
      var lift_ret_val_StatusChangeTimestamp_val_val WasiClocks0_2_0_WallClockDatetime
      var lift_ret_val_StatusChangeTimestamp_val_val_Seconds uint64
      lift_ret_val_StatusChangeTimestamp_val_val_Seconds = uint64(lift_ret_ptr.status_change_timestamp.val.seconds)
      lift_ret_val_StatusChangeTimestamp_val_val.Seconds = lift_ret_val_StatusChangeTimestamp_val_val_Seconds
      var lift_ret_val_StatusChangeTimestamp_val_val_Nanoseconds uint32
      lift_ret_val_StatusChangeTimestamp_val_val_Nanoseconds = uint32(lift_ret_ptr.status_change_timestamp.val.nanoseconds)
      lift_ret_val_StatusChangeTimestamp_val_val.Nanoseconds = lift_ret_val_StatusChangeTimestamp_val_val_Nanoseconds
      lift_ret_val_StatusChangeTimestamp_val = lift_ret_val_StatusChangeTimestamp_val_val
      lift_ret_val_StatusChangeTimestamp.Set(lift_ret_val_StatusChangeTimestamp_val)
    } else {
      lift_ret_val_StatusChangeTimestamp.Unset()
    }
    lift_ret_val.StatusChangeTimestamp = lift_ret_val_StatusChangeTimestamp
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) SetTimesAt(path_flags WasiFilesystem0_2_0_TypesPathFlags, path string, data_access_timestamp WasiFilesystem0_2_0_TypesNewTimestamp, data_modification_timestamp WasiFilesystem0_2_0_TypesNewTimestamp) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  lower_path_flags := C.uint8_t(path_flags)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var lower_data_access_timestamp C.wasi_filesystem_0_2_0_types_new_timestamp_t
  if data_access_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNoChange {
    lower_data_access_timestamp.tag = 0
  }
  if data_access_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNow {
    lower_data_access_timestamp.tag = 1
  }
  if data_access_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp {

    lower_data_access_timestamp.tag = 2
    lower_data_access_timestamp_ptr := (*C.wasi_filesystem_0_2_0_types_datetime_t)(unsafe.Pointer(&lower_data_access_timestamp.val))
    var lower_data_access_timestamp_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    var lower_data_access_timestamp_val_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    lower_data_access_timestamp_val_val_seconds := C.uint64_t(data_access_timestamp.GetTimestamp().Seconds)
    lower_data_access_timestamp_val_val.seconds = lower_data_access_timestamp_val_val_seconds
    lower_data_access_timestamp_val_val_nanoseconds := C.uint32_t(data_access_timestamp.GetTimestamp().Nanoseconds)
    lower_data_access_timestamp_val_val.nanoseconds = lower_data_access_timestamp_val_val_nanoseconds
    lower_data_access_timestamp_val = lower_data_access_timestamp_val_val
    *lower_data_access_timestamp_ptr = lower_data_access_timestamp_val
  }
  var lower_data_modification_timestamp C.wasi_filesystem_0_2_0_types_new_timestamp_t
  if data_modification_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNoChange {
    lower_data_modification_timestamp.tag = 0
  }
  if data_modification_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindNow {
    lower_data_modification_timestamp.tag = 1
  }
  if data_modification_timestamp.Kind() == WasiFilesystem0_2_0_TypesNewTimestampKindTimestamp {

    lower_data_modification_timestamp.tag = 2
    lower_data_modification_timestamp_ptr := (*C.wasi_filesystem_0_2_0_types_datetime_t)(unsafe.Pointer(&lower_data_modification_timestamp.val))
    var lower_data_modification_timestamp_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    var lower_data_modification_timestamp_val_val C.wasi_clocks_0_2_0_wall_clock_datetime_t
    lower_data_modification_timestamp_val_val_seconds := C.uint64_t(data_modification_timestamp.GetTimestamp().Seconds)
    lower_data_modification_timestamp_val_val.seconds = lower_data_modification_timestamp_val_val_seconds
    lower_data_modification_timestamp_val_val_nanoseconds := C.uint32_t(data_modification_timestamp.GetTimestamp().Nanoseconds)
    lower_data_modification_timestamp_val_val.nanoseconds = lower_data_modification_timestamp_val_val_nanoseconds
    lower_data_modification_timestamp_val = lower_data_modification_timestamp_val_val
    *lower_data_modification_timestamp_ptr = lower_data_modification_timestamp_val
  }
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_set_times_at(lower_self , lower_path_flags , &lower_path , &lower_data_access_timestamp , &lower_data_modification_timestamp , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) LinkAt(old_path_flags WasiFilesystem0_2_0_TypesPathFlags, old_path string, new_descriptor WasiFilesystem0_2_0_TypesDescriptor, new_path string) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  lower_old_path_flags := C.uint8_t(old_path_flags)
  var lower_old_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_old_path.ptr = (*uint8)(unsafe.Pointer(C.CString(old_path)))
  lower_old_path.len = C.size_t(len(old_path))
  var lower_new_descriptor C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_new_descriptor.__handle = C.int32_t(new_descriptor)
  var lower_new_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_new_path.ptr = (*uint8)(unsafe.Pointer(C.CString(new_path)))
  lower_new_path.len = C.size_t(len(new_path))
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_link_at(lower_self , lower_old_path_flags , &lower_old_path , lower_new_descriptor , &lower_new_path , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) OpenAt(path_flags WasiFilesystem0_2_0_TypesPathFlags, path string, open_flags WasiFilesystem0_2_0_TypesOpenFlags, flags WasiFilesystem0_2_0_TypesDescriptorFlags) Result[WasiFilesystem0_2_0_TypesDescriptor, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  lower_path_flags := C.uint8_t(path_flags)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  lower_open_flags := C.uint8_t(open_flags)
  lower_flags := C.uint8_t(flags)
  var ret C.wasi_filesystem_0_2_0_types_result_own_descriptor_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_open_at(lower_self , lower_path_flags , &lower_path , lower_open_flags , lower_flags , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesDescriptor, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_own_descriptor_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesDescriptor
    lift_ret_val = WasiFilesystem0_2_0_TypesDescriptor(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) ReadlinkAt(path string) Result[string, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var ret C.wasi_filesystem_0_2_0_types_result_string_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_readlink_at(lower_self , &lower_path , &ret )
  var lift_ret Result[string, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.http_trigger_string_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val string
    lift_ret_val = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.ptr)), C.int(lift_ret_ptr.len))
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) RemoveDirectoryAt(path string) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_remove_directory_at(lower_self , &lower_path , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) RenameAt(old_path string, new_descriptor WasiFilesystem0_2_0_TypesDescriptor, new_path string) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_old_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_old_path.ptr = (*uint8)(unsafe.Pointer(C.CString(old_path)))
  lower_old_path.len = C.size_t(len(old_path))
  var lower_new_descriptor C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_new_descriptor.__handle = C.int32_t(new_descriptor)
  var lower_new_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_new_path.ptr = (*uint8)(unsafe.Pointer(C.CString(new_path)))
  lower_new_path.len = C.size_t(len(new_path))
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_rename_at(lower_self , &lower_old_path , lower_new_descriptor , &lower_new_path , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) SymlinkAt(old_path string, new_path string) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_old_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_old_path.ptr = (*uint8)(unsafe.Pointer(C.CString(old_path)))
  lower_old_path.len = C.size_t(len(old_path))
  var lower_new_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_new_path.ptr = (*uint8)(unsafe.Pointer(C.CString(new_path)))
  lower_new_path.len = C.size_t(len(new_path))
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_symlink_at(lower_self , &lower_old_path , &lower_new_path , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) UnlinkFileAt(path string) Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var ret C.wasi_filesystem_0_2_0_types_result_void_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_unlink_file_at(lower_self , &lower_path , &ret )
  var lift_ret Result[struct{}, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) IsSameObject(other WasiFilesystem0_2_0_TypesDescriptor) bool {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var lower_other C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_other.__handle = C.int32_t(other)
  ret := C.wasi_filesystem_0_2_0_types_method_descriptor_is_same_object(lower_self , lower_other )
  lift_ret := ret
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) MetadataHash() Result[WasiFilesystem0_2_0_TypesMetadataHashValue, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_metadata_hash_value_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_metadata_hash(lower_self , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesMetadataHashValue, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_metadata_hash_value_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesMetadataHashValue
    var lift_ret_val_Lower uint64
    lift_ret_val_Lower = uint64(lift_ret_ptr.lower)
    lift_ret_val.Lower = lift_ret_val_Lower
    var lift_ret_val_Upper uint64
    lift_ret_val_Upper = uint64(lift_ret_ptr.upper)
    lift_ret_val.Upper = lift_ret_val_Upper
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDescriptor) MetadataHashAt(path_flags WasiFilesystem0_2_0_TypesPathFlags, path string) Result[WasiFilesystem0_2_0_TypesMetadataHashValue, WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_descriptor_t
  lower_self.__handle = C.int32_t(self)
  lower_path_flags := C.uint8_t(path_flags)
  var lower_path C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_path.ptr = (*uint8)(unsafe.Pointer(C.CString(path)))
  lower_path.len = C.size_t(len(path))
  var ret C.wasi_filesystem_0_2_0_types_result_metadata_hash_value_error_code_t
  C.wasi_filesystem_0_2_0_types_method_descriptor_metadata_hash_at(lower_self , lower_path_flags , &lower_path , &ret )
  var lift_ret Result[WasiFilesystem0_2_0_TypesMetadataHashValue, WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_metadata_hash_value_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesMetadataHashValue
    var lift_ret_val_Lower uint64
    lift_ret_val_Lower = uint64(lift_ret_ptr.lower)
    lift_ret_val.Lower = lift_ret_val_Lower
    var lift_ret_val_Upper uint64
    lift_ret_val_Upper = uint64(lift_ret_ptr.upper)
    lift_ret_val.Upper = lift_ret_val_Upper
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiFilesystem0_2_0_TypesDirectoryEntryStream) ReadDirectoryEntry() Result[Option[WasiFilesystem0_2_0_TypesDirectoryEntry], WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_self C.wasi_filesystem_0_2_0_types_borrow_directory_entry_stream_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_filesystem_0_2_0_types_result_option_directory_entry_error_code_t
  C.wasi_filesystem_0_2_0_types_method_directory_entry_stream_read_directory_entry(lower_self , &ret )
  var lift_ret Result[Option[WasiFilesystem0_2_0_TypesDirectoryEntry], WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if lift_ret_ptr == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if lift_ret_ptr == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if lift_ret_ptr == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if lift_ret_ptr == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if lift_ret_ptr == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if lift_ret_ptr == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if lift_ret_ptr == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if lift_ret_ptr == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if lift_ret_ptr == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if lift_ret_ptr == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if lift_ret_ptr == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if lift_ret_ptr == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if lift_ret_ptr == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if lift_ret_ptr == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if lift_ret_ptr == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if lift_ret_ptr == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_types_option_directory_entry_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val Option[WasiFilesystem0_2_0_TypesDirectoryEntry]
    if lift_ret_ptr.is_some {
      var lift_ret_val_val WasiFilesystem0_2_0_TypesDirectoryEntry
      var lift_ret_val_val_Type WasiFilesystem0_2_0_TypesDescriptorType
      if lift_ret_ptr.val.type == 0 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeUnknown()
      }
      if lift_ret_ptr.val.type == 1 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeBlockDevice()
      }
      if lift_ret_ptr.val.type == 2 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeCharacterDevice()
      }
      if lift_ret_ptr.val.type == 3 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeDirectory()
      }
      if lift_ret_ptr.val.type == 4 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeFifo()
      }
      if lift_ret_ptr.val.type == 5 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeSymbolicLink()
      }
      if lift_ret_ptr.val.type == 6 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeRegularFile()
      }
      if lift_ret_ptr.val.type == 7 {
        lift_ret_val_val_Type = WasiFilesystem0_2_0_TypesDescriptorTypeSocket()
      }
      lift_ret_val_val.Type = lift_ret_val_val_Type
      var lift_ret_val_val_Name string
      lift_ret_val_val_Name = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.val.name.ptr)), C.int(lift_ret_ptr.val.name.len))
      lift_ret_val_val.Name = lift_ret_val_val_Name
      lift_ret_val.Set(lift_ret_val_val)
    } else {
      lift_ret_val.Unset()
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func WasiFilesystem0_2_0_TypesFilesystemErrorCode(err WasiFilesystem0_2_0_TypesError) Option[WasiFilesystem0_2_0_TypesErrorCode] {
  var lower_err C.wasi_filesystem_0_2_0_types_borrow_error_t
  lower_err.__handle = C.int32_t(err)
  var ret C.wasi_filesystem_0_2_0_types_option_error_code_t
  C.wasi_filesystem_0_2_0_types_filesystem_error_code(lower_err , &ret )
  var lift_ret Option[WasiFilesystem0_2_0_TypesErrorCode]
  if ret.is_some {
    var lift_ret_val WasiFilesystem0_2_0_TypesErrorCode
    if ret.val == 0 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAccess()
    }
    if ret.val == 1 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeWouldBlock()
    }
    if ret.val == 2 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeAlready()
    }
    if ret.val == 3 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBadDescriptor()
    }
    if ret.val == 4 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeBusy()
    }
    if ret.val == 5 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeDeadlock()
    }
    if ret.val == 6 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeQuota()
    }
    if ret.val == 7 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeExist()
    }
    if ret.val == 8 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeFileTooLarge()
    }
    if ret.val == 9 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIllegalByteSequence()
    }
    if ret.val == 10 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInProgress()
    }
    if ret.val == 11 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInterrupted()
    }
    if ret.val == 12 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalid()
    }
    if ret.val == 13 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIo()
    }
    if ret.val == 14 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeIsDirectory()
    }
    if ret.val == 15 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeLoop()
    }
    if ret.val == 16 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTooManyLinks()
    }
    if ret.val == 17 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeMessageSize()
    }
    if ret.val == 18 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNameTooLong()
    }
    if ret.val == 19 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoDevice()
    }
    if ret.val == 20 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoEntry()
    }
    if ret.val == 21 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoLock()
    }
    if ret.val == 22 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientMemory()
    }
    if ret.val == 23 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInsufficientSpace()
    }
    if ret.val == 24 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotDirectory()
    }
    if ret.val == 25 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotEmpty()
    }
    if ret.val == 26 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotRecoverable()
    }
    if ret.val == 27 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeUnsupported()
    }
    if ret.val == 28 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoTty()
    }
    if ret.val == 29 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNoSuchDevice()
    }
    if ret.val == 30 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeOverflow()
    }
    if ret.val == 31 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeNotPermitted()
    }
    if ret.val == 32 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodePipe()
    }
    if ret.val == 33 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeReadOnly()
    }
    if ret.val == 34 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeInvalidSeek()
    }
    if ret.val == 35 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeTextFileBusy()
    }
    if ret.val == 36 {
      lift_ret_val = WasiFilesystem0_2_0_TypesErrorCodeCrossDevice()
    }
    lift_ret.Set(lift_ret_val)
  } else {
    lift_ret.Unset()
  }
  return lift_ret
}

// Import functions from wasi:filesystem/preopens@0.2.0
type WasiFilesystem0_2_0_PreopensDescriptor = WasiFilesystem0_2_0_TypesDescriptor
type WasiFilesystem0_2_0_PreopensTuple2DescriptorStringT struct {
  F0 WasiFilesystem0_2_0_PreopensDescriptor
  F1 string
}

func WasiFilesystem0_2_0_PreopensGetDirectories() []WasiFilesystem0_2_0_PreopensTuple2DescriptorStringT {
  var ret C.wasi_filesystem_0_2_0_preopens_list_tuple2_own_descriptor_string_t
  C.wasi_filesystem_0_2_0_preopens_get_directories(&ret )
  var lift_ret []WasiFilesystem0_2_0_PreopensTuple2DescriptorStringT
  lift_ret = make([]WasiFilesystem0_2_0_PreopensTuple2DescriptorStringT, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.wasi_filesystem_0_2_0_preopens_tuple2_own_descriptor_string_t
      lift_ret_ptr := *(*C.wasi_filesystem_0_2_0_preopens_tuple2_own_descriptor_string_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret WasiFilesystem0_2_0_PreopensTuple2DescriptorStringT
      var list_lift_ret_F0 WasiFilesystem0_2_0_PreopensDescriptor
      list_lift_ret_F0 = WasiFilesystem0_2_0_PreopensDescriptor(lift_ret_ptr.f0.__handle)
      
      list_lift_ret.F0 = list_lift_ret_F0
      var list_lift_ret_F1 string
      list_lift_ret_F1 = C.GoStringN((*C.char)(unsafe.Pointer(lift_ret_ptr.f1.ptr)), C.int(lift_ret_ptr.f1.len))
      list_lift_ret.F1 = list_lift_ret_F1
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

// Import functions from wasi:sockets/network@0.2.0
// WasiSockets0_2_0_NetworkNetwork is a handle to imported resource network
type WasiSockets0_2_0_NetworkNetwork int32

//go:wasmimport wasi:sockets/network@0.2.0 [resource-drop]network
func _WasiSockets0_2_0_NetworkNetwork_drop(self WasiSockets0_2_0_NetworkNetwork)

func (self WasiSockets0_2_0_NetworkNetwork) Drop() {
  _WasiSockets0_2_0_NetworkNetwork_drop(self)
}

type WasiSockets0_2_0_NetworkErrorCodeKind int

const (
WasiSockets0_2_0_NetworkErrorCodeKindUnknown WasiSockets0_2_0_NetworkErrorCodeKind = iota
WasiSockets0_2_0_NetworkErrorCodeKindAccessDenied
WasiSockets0_2_0_NetworkErrorCodeKindNotSupported
WasiSockets0_2_0_NetworkErrorCodeKindInvalidArgument
WasiSockets0_2_0_NetworkErrorCodeKindOutOfMemory
WasiSockets0_2_0_NetworkErrorCodeKindTimeout
WasiSockets0_2_0_NetworkErrorCodeKindConcurrencyConflict
WasiSockets0_2_0_NetworkErrorCodeKindNotInProgress
WasiSockets0_2_0_NetworkErrorCodeKindWouldBlock
WasiSockets0_2_0_NetworkErrorCodeKindInvalidState
WasiSockets0_2_0_NetworkErrorCodeKindNewSocketLimit
WasiSockets0_2_0_NetworkErrorCodeKindAddressNotBindable
WasiSockets0_2_0_NetworkErrorCodeKindAddressInUse
WasiSockets0_2_0_NetworkErrorCodeKindRemoteUnreachable
WasiSockets0_2_0_NetworkErrorCodeKindConnectionRefused
WasiSockets0_2_0_NetworkErrorCodeKindConnectionReset
WasiSockets0_2_0_NetworkErrorCodeKindConnectionAborted
WasiSockets0_2_0_NetworkErrorCodeKindDatagramTooLarge
WasiSockets0_2_0_NetworkErrorCodeKindNameUnresolvable
WasiSockets0_2_0_NetworkErrorCodeKindTemporaryResolverFailure
WasiSockets0_2_0_NetworkErrorCodeKindPermanentResolverFailure
)

type WasiSockets0_2_0_NetworkErrorCode struct {
  kind WasiSockets0_2_0_NetworkErrorCodeKind
}

func (n WasiSockets0_2_0_NetworkErrorCode) Kind() WasiSockets0_2_0_NetworkErrorCodeKind {
  return n.kind
}

func WasiSockets0_2_0_NetworkErrorCodeUnknown() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindUnknown}
}

func WasiSockets0_2_0_NetworkErrorCodeAccessDenied() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindAccessDenied}
}

func WasiSockets0_2_0_NetworkErrorCodeNotSupported() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindNotSupported}
}

func WasiSockets0_2_0_NetworkErrorCodeInvalidArgument() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindInvalidArgument}
}

func WasiSockets0_2_0_NetworkErrorCodeOutOfMemory() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindOutOfMemory}
}

func WasiSockets0_2_0_NetworkErrorCodeTimeout() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindTimeout}
}

func WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindConcurrencyConflict}
}

func WasiSockets0_2_0_NetworkErrorCodeNotInProgress() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindNotInProgress}
}

func WasiSockets0_2_0_NetworkErrorCodeWouldBlock() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindWouldBlock}
}

func WasiSockets0_2_0_NetworkErrorCodeInvalidState() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindInvalidState}
}

func WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindNewSocketLimit}
}

func WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindAddressNotBindable}
}

func WasiSockets0_2_0_NetworkErrorCodeAddressInUse() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindAddressInUse}
}

func WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindRemoteUnreachable}
}

func WasiSockets0_2_0_NetworkErrorCodeConnectionRefused() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindConnectionRefused}
}

func WasiSockets0_2_0_NetworkErrorCodeConnectionReset() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindConnectionReset}
}

func WasiSockets0_2_0_NetworkErrorCodeConnectionAborted() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindConnectionAborted}
}

func WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindDatagramTooLarge}
}

func WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindNameUnresolvable}
}

func WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindTemporaryResolverFailure}
}

func WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure() WasiSockets0_2_0_NetworkErrorCode{
  return WasiSockets0_2_0_NetworkErrorCode{kind: WasiSockets0_2_0_NetworkErrorCodeKindPermanentResolverFailure}
}

type WasiSockets0_2_0_NetworkIpAddressFamilyKind int

const (
WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv4 WasiSockets0_2_0_NetworkIpAddressFamilyKind = iota
WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv6
)

type WasiSockets0_2_0_NetworkIpAddressFamily struct {
  kind WasiSockets0_2_0_NetworkIpAddressFamilyKind
}

func (n WasiSockets0_2_0_NetworkIpAddressFamily) Kind() WasiSockets0_2_0_NetworkIpAddressFamilyKind {
  return n.kind
}

func WasiSockets0_2_0_NetworkIpAddressFamilyIpv4() WasiSockets0_2_0_NetworkIpAddressFamily{
  return WasiSockets0_2_0_NetworkIpAddressFamily{kind: WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv4}
}

func WasiSockets0_2_0_NetworkIpAddressFamilyIpv6() WasiSockets0_2_0_NetworkIpAddressFamily{
  return WasiSockets0_2_0_NetworkIpAddressFamily{kind: WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv6}
}

type WasiSockets0_2_0_NetworkIpv4Address struct {
  F0 uint8
  F1 uint8
  F2 uint8
  F3 uint8
}

type WasiSockets0_2_0_NetworkIpv6Address struct {
  F0 uint16
  F1 uint16
  F2 uint16
  F3 uint16
  F4 uint16
  F5 uint16
  F6 uint16
  F7 uint16
}

type WasiSockets0_2_0_NetworkIpAddressKind int

const (
WasiSockets0_2_0_NetworkIpAddressKindIpv4 WasiSockets0_2_0_NetworkIpAddressKind = iota
WasiSockets0_2_0_NetworkIpAddressKindIpv6
)

type WasiSockets0_2_0_NetworkIpAddress struct {
  kind WasiSockets0_2_0_NetworkIpAddressKind
  val any
}

func (n WasiSockets0_2_0_NetworkIpAddress) Kind() WasiSockets0_2_0_NetworkIpAddressKind {
  return n.kind
}

func WasiSockets0_2_0_NetworkIpAddressIpv4(v WasiSockets0_2_0_NetworkIpv4Address) WasiSockets0_2_0_NetworkIpAddress{
  return WasiSockets0_2_0_NetworkIpAddress{kind: WasiSockets0_2_0_NetworkIpAddressKindIpv4, val: v}
}

func (n WasiSockets0_2_0_NetworkIpAddress) GetIpv4() WasiSockets0_2_0_NetworkIpv4Address{
  if g, w := n.Kind(), WasiSockets0_2_0_NetworkIpAddressKindIpv4; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiSockets0_2_0_NetworkIpv4Address)
}

func (n *WasiSockets0_2_0_NetworkIpAddress) SetIpv4(v WasiSockets0_2_0_NetworkIpv4Address) {
  n.val = v
  n.kind = WasiSockets0_2_0_NetworkIpAddressKindIpv4
}

func WasiSockets0_2_0_NetworkIpAddressIpv6(v WasiSockets0_2_0_NetworkIpv6Address) WasiSockets0_2_0_NetworkIpAddress{
  return WasiSockets0_2_0_NetworkIpAddress{kind: WasiSockets0_2_0_NetworkIpAddressKindIpv6, val: v}
}

func (n WasiSockets0_2_0_NetworkIpAddress) GetIpv6() WasiSockets0_2_0_NetworkIpv6Address{
  if g, w := n.Kind(), WasiSockets0_2_0_NetworkIpAddressKindIpv6; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiSockets0_2_0_NetworkIpv6Address)
}

func (n *WasiSockets0_2_0_NetworkIpAddress) SetIpv6(v WasiSockets0_2_0_NetworkIpv6Address) {
  n.val = v
  n.kind = WasiSockets0_2_0_NetworkIpAddressKindIpv6
}

type WasiSockets0_2_0_NetworkIpv4SocketAddress struct {
  Port uint16
  Address WasiSockets0_2_0_NetworkIpv4Address
}

type WasiSockets0_2_0_NetworkIpv6SocketAddress struct {
  Port uint16
  FlowInfo uint32
  Address WasiSockets0_2_0_NetworkIpv6Address
  ScopeId uint32
}

type WasiSockets0_2_0_NetworkIpSocketAddressKind int

const (
WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4 WasiSockets0_2_0_NetworkIpSocketAddressKind = iota
WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6
)

type WasiSockets0_2_0_NetworkIpSocketAddress struct {
  kind WasiSockets0_2_0_NetworkIpSocketAddressKind
  val any
}

func (n WasiSockets0_2_0_NetworkIpSocketAddress) Kind() WasiSockets0_2_0_NetworkIpSocketAddressKind {
  return n.kind
}

func WasiSockets0_2_0_NetworkIpSocketAddressIpv4(v WasiSockets0_2_0_NetworkIpv4SocketAddress) WasiSockets0_2_0_NetworkIpSocketAddress{
  return WasiSockets0_2_0_NetworkIpSocketAddress{kind: WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4, val: v}
}

func (n WasiSockets0_2_0_NetworkIpSocketAddress) GetIpv4() WasiSockets0_2_0_NetworkIpv4SocketAddress{
  if g, w := n.Kind(), WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiSockets0_2_0_NetworkIpv4SocketAddress)
}

func (n *WasiSockets0_2_0_NetworkIpSocketAddress) SetIpv4(v WasiSockets0_2_0_NetworkIpv4SocketAddress) {
  n.val = v
  n.kind = WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4
}

func WasiSockets0_2_0_NetworkIpSocketAddressIpv6(v WasiSockets0_2_0_NetworkIpv6SocketAddress) WasiSockets0_2_0_NetworkIpSocketAddress{
  return WasiSockets0_2_0_NetworkIpSocketAddress{kind: WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6, val: v}
}

func (n WasiSockets0_2_0_NetworkIpSocketAddress) GetIpv6() WasiSockets0_2_0_NetworkIpv6SocketAddress{
  if g, w := n.Kind(), WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6; g != w {
    panic(fmt.Sprintf("Attr kind is %v, not %v", g, w))
  }
  return n.val.(WasiSockets0_2_0_NetworkIpv6SocketAddress)
}

func (n *WasiSockets0_2_0_NetworkIpSocketAddress) SetIpv6(v WasiSockets0_2_0_NetworkIpv6SocketAddress) {
  n.val = v
  n.kind = WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6
}

// Import functions from wasi:sockets/instance-network@0.2.0
type WasiSockets0_2_0_InstanceNetworkNetwork = WasiSockets0_2_0_NetworkNetwork
func WasiSockets0_2_0_InstanceNetworkInstanceNetwork() WasiSockets0_2_0_InstanceNetworkNetwork {
  ret := C.wasi_sockets_0_2_0_instance_network_instance_network()
  var lift_ret WasiSockets0_2_0_InstanceNetworkNetwork
  lift_ret = WasiSockets0_2_0_InstanceNetworkNetwork(ret.__handle)

  return lift_ret
}

// Import functions from wasi:sockets/udp@0.2.0
type WasiSockets0_2_0_UdpPollable = WasiIo0_2_0_PollPollable
type WasiSockets0_2_0_UdpNetwork = WasiSockets0_2_0_NetworkNetwork
type WasiSockets0_2_0_UdpErrorCode = WasiSockets0_2_0_NetworkErrorCode
type WasiSockets0_2_0_UdpIpSocketAddress = WasiSockets0_2_0_NetworkIpSocketAddress
type WasiSockets0_2_0_UdpIpAddressFamily = WasiSockets0_2_0_NetworkIpAddressFamily
type WasiSockets0_2_0_UdpIncomingDatagram struct {
  Data []uint8
  RemoteAddress WasiSockets0_2_0_UdpIpSocketAddress
}

type WasiSockets0_2_0_UdpOutgoingDatagram struct {
  Data []uint8
  RemoteAddress Option[WasiSockets0_2_0_UdpIpSocketAddress]
}

// WasiSockets0_2_0_UdpUdpSocket is a handle to imported resource udp-socket
type WasiSockets0_2_0_UdpUdpSocket int32

//go:wasmimport wasi:sockets/udp@0.2.0 [resource-drop]udp-socket
func _WasiSockets0_2_0_UdpUdpSocket_drop(self WasiSockets0_2_0_UdpUdpSocket)

func (self WasiSockets0_2_0_UdpUdpSocket) Drop() {
  _WasiSockets0_2_0_UdpUdpSocket_drop(self)
}

// WasiSockets0_2_0_UdpIncomingDatagramStream is a handle to imported resource incoming-datagram-stream
type WasiSockets0_2_0_UdpIncomingDatagramStream int32

//go:wasmimport wasi:sockets/udp@0.2.0 [resource-drop]incoming-datagram-stream
func _WasiSockets0_2_0_UdpIncomingDatagramStream_drop(self WasiSockets0_2_0_UdpIncomingDatagramStream)

func (self WasiSockets0_2_0_UdpIncomingDatagramStream) Drop() {
  _WasiSockets0_2_0_UdpIncomingDatagramStream_drop(self)
}

// WasiSockets0_2_0_UdpOutgoingDatagramStream is a handle to imported resource outgoing-datagram-stream
type WasiSockets0_2_0_UdpOutgoingDatagramStream int32

//go:wasmimport wasi:sockets/udp@0.2.0 [resource-drop]outgoing-datagram-stream
func _WasiSockets0_2_0_UdpOutgoingDatagramStream_drop(self WasiSockets0_2_0_UdpOutgoingDatagramStream)

func (self WasiSockets0_2_0_UdpOutgoingDatagramStream) Drop() {
  _WasiSockets0_2_0_UdpOutgoingDatagramStream_drop(self)
}

type WasiSockets0_2_0_UdpTuple2IncomingDatagramStreamOutgoingDatagramStreamT struct {
  F0 WasiSockets0_2_0_UdpIncomingDatagramStream
  F1 WasiSockets0_2_0_UdpOutgoingDatagramStream
}

func (self WasiSockets0_2_0_UdpUdpSocket) StartBind(network WasiSockets0_2_0_UdpNetwork, local_address WasiSockets0_2_0_UdpIpSocketAddress) Result[struct{}, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_network C.wasi_sockets_0_2_0_udp_borrow_network_t
  lower_network.__handle = C.int32_t(network)
  var lower_local_address C.wasi_sockets_0_2_0_network_ip_socket_address_t
  var lower_local_address_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
  if local_address.Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4 {

    lower_local_address_val.tag = 0
    lower_local_address_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lower_local_address_val.val))
    var lower_local_address_val_val C.wasi_sockets_0_2_0_network_ipv4_socket_address_t
    lower_local_address_val_val_port := C.uint16_t(local_address.GetIpv4().Port)
    lower_local_address_val_val.port = lower_local_address_val_val_port
    var lower_local_address_val_val_address C.wasi_sockets_0_2_0_network_ipv4_address_t
    lower_local_address_val_val_address_f0 := C.uint8_t(local_address.GetIpv4().Address.F0)
    lower_local_address_val_val_address.f0 = lower_local_address_val_val_address_f0
    lower_local_address_val_val_address_f1 := C.uint8_t(local_address.GetIpv4().Address.F1)
    lower_local_address_val_val_address.f1 = lower_local_address_val_val_address_f1
    lower_local_address_val_val_address_f2 := C.uint8_t(local_address.GetIpv4().Address.F2)
    lower_local_address_val_val_address.f2 = lower_local_address_val_val_address_f2
    lower_local_address_val_val_address_f3 := C.uint8_t(local_address.GetIpv4().Address.F3)
    lower_local_address_val_val_address.f3 = lower_local_address_val_val_address_f3
    lower_local_address_val_val.address = lower_local_address_val_val_address
    *lower_local_address_val_ptr = lower_local_address_val_val
  }
  if local_address.Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6 {

    lower_local_address_val.tag = 1
    lower_local_address_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lower_local_address_val.val))
    var lower_local_address_val_val C.wasi_sockets_0_2_0_network_ipv6_socket_address_t
    lower_local_address_val_val_port := C.uint16_t(local_address.GetIpv6().Port)
    lower_local_address_val_val.port = lower_local_address_val_val_port
    lower_local_address_val_val_flow_info := C.uint32_t(local_address.GetIpv6().FlowInfo)
    lower_local_address_val_val.flow_info = lower_local_address_val_val_flow_info
    var lower_local_address_val_val_address C.wasi_sockets_0_2_0_network_ipv6_address_t
    lower_local_address_val_val_address_f0 := C.uint16_t(local_address.GetIpv6().Address.F0)
    lower_local_address_val_val_address.f0 = lower_local_address_val_val_address_f0
    lower_local_address_val_val_address_f1 := C.uint16_t(local_address.GetIpv6().Address.F1)
    lower_local_address_val_val_address.f1 = lower_local_address_val_val_address_f1
    lower_local_address_val_val_address_f2 := C.uint16_t(local_address.GetIpv6().Address.F2)
    lower_local_address_val_val_address.f2 = lower_local_address_val_val_address_f2
    lower_local_address_val_val_address_f3 := C.uint16_t(local_address.GetIpv6().Address.F3)
    lower_local_address_val_val_address.f3 = lower_local_address_val_val_address_f3
    lower_local_address_val_val_address_f4 := C.uint16_t(local_address.GetIpv6().Address.F4)
    lower_local_address_val_val_address.f4 = lower_local_address_val_val_address_f4
    lower_local_address_val_val_address_f5 := C.uint16_t(local_address.GetIpv6().Address.F5)
    lower_local_address_val_val_address.f5 = lower_local_address_val_val_address_f5
    lower_local_address_val_val_address_f6 := C.uint16_t(local_address.GetIpv6().Address.F6)
    lower_local_address_val_val_address.f6 = lower_local_address_val_val_address_f6
    lower_local_address_val_val_address_f7 := C.uint16_t(local_address.GetIpv6().Address.F7)
    lower_local_address_val_val_address.f7 = lower_local_address_val_val_address_f7
    lower_local_address_val_val.address = lower_local_address_val_val_address
    lower_local_address_val_val_scope_id := C.uint32_t(local_address.GetIpv6().ScopeId)
    lower_local_address_val_val.scope_id = lower_local_address_val_val_scope_id
    *lower_local_address_val_ptr = lower_local_address_val_val
  }
  lower_local_address = lower_local_address_val
  var ret C.wasi_sockets_0_2_0_udp_result_void_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_start_bind(lower_self , lower_network , &lower_local_address , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) FinishBind() Result[struct{}, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_void_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_finish_bind(lower_self , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) Stream(remote_address Option[WasiSockets0_2_0_UdpIpSocketAddress]) Result[WasiSockets0_2_0_UdpTuple2IncomingDatagramStreamOutgoingDatagramStreamT, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_remote_address C.wasi_sockets_0_2_0_udp_option_ip_socket_address_t
  if remote_address.IsSome() {
    var lower_remote_address_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
    var lower_remote_address_val_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
    if remote_address.Unwrap().Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4 {

      lower_remote_address_val_val.tag = 0
      lower_remote_address_val_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lower_remote_address_val_val.val))
      var lower_remote_address_val_val_val C.wasi_sockets_0_2_0_network_ipv4_socket_address_t
      lower_remote_address_val_val_val_port := C.uint16_t(remote_address.Unwrap().GetIpv4().Port)
      lower_remote_address_val_val_val.port = lower_remote_address_val_val_val_port
      var lower_remote_address_val_val_val_address C.wasi_sockets_0_2_0_network_ipv4_address_t
      lower_remote_address_val_val_val_address_f0 := C.uint8_t(remote_address.Unwrap().GetIpv4().Address.F0)
      lower_remote_address_val_val_val_address.f0 = lower_remote_address_val_val_val_address_f0
      lower_remote_address_val_val_val_address_f1 := C.uint8_t(remote_address.Unwrap().GetIpv4().Address.F1)
      lower_remote_address_val_val_val_address.f1 = lower_remote_address_val_val_val_address_f1
      lower_remote_address_val_val_val_address_f2 := C.uint8_t(remote_address.Unwrap().GetIpv4().Address.F2)
      lower_remote_address_val_val_val_address.f2 = lower_remote_address_val_val_val_address_f2
      lower_remote_address_val_val_val_address_f3 := C.uint8_t(remote_address.Unwrap().GetIpv4().Address.F3)
      lower_remote_address_val_val_val_address.f3 = lower_remote_address_val_val_val_address_f3
      lower_remote_address_val_val_val.address = lower_remote_address_val_val_val_address
      *lower_remote_address_val_val_ptr = lower_remote_address_val_val_val
    }
    if remote_address.Unwrap().Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6 {

      lower_remote_address_val_val.tag = 1
      lower_remote_address_val_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lower_remote_address_val_val.val))
      var lower_remote_address_val_val_val C.wasi_sockets_0_2_0_network_ipv6_socket_address_t
      lower_remote_address_val_val_val_port := C.uint16_t(remote_address.Unwrap().GetIpv6().Port)
      lower_remote_address_val_val_val.port = lower_remote_address_val_val_val_port
      lower_remote_address_val_val_val_flow_info := C.uint32_t(remote_address.Unwrap().GetIpv6().FlowInfo)
      lower_remote_address_val_val_val.flow_info = lower_remote_address_val_val_val_flow_info
      var lower_remote_address_val_val_val_address C.wasi_sockets_0_2_0_network_ipv6_address_t
      lower_remote_address_val_val_val_address_f0 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F0)
      lower_remote_address_val_val_val_address.f0 = lower_remote_address_val_val_val_address_f0
      lower_remote_address_val_val_val_address_f1 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F1)
      lower_remote_address_val_val_val_address.f1 = lower_remote_address_val_val_val_address_f1
      lower_remote_address_val_val_val_address_f2 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F2)
      lower_remote_address_val_val_val_address.f2 = lower_remote_address_val_val_val_address_f2
      lower_remote_address_val_val_val_address_f3 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F3)
      lower_remote_address_val_val_val_address.f3 = lower_remote_address_val_val_val_address_f3
      lower_remote_address_val_val_val_address_f4 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F4)
      lower_remote_address_val_val_val_address.f4 = lower_remote_address_val_val_val_address_f4
      lower_remote_address_val_val_val_address_f5 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F5)
      lower_remote_address_val_val_val_address.f5 = lower_remote_address_val_val_val_address_f5
      lower_remote_address_val_val_val_address_f6 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F6)
      lower_remote_address_val_val_val_address.f6 = lower_remote_address_val_val_val_address_f6
      lower_remote_address_val_val_val_address_f7 := C.uint16_t(remote_address.Unwrap().GetIpv6().Address.F7)
      lower_remote_address_val_val_val_address.f7 = lower_remote_address_val_val_val_address_f7
      lower_remote_address_val_val_val.address = lower_remote_address_val_val_val_address
      lower_remote_address_val_val_val_scope_id := C.uint32_t(remote_address.Unwrap().GetIpv6().ScopeId)
      lower_remote_address_val_val_val.scope_id = lower_remote_address_val_val_val_scope_id
      *lower_remote_address_val_val_ptr = lower_remote_address_val_val_val
    }
    lower_remote_address_val = lower_remote_address_val_val
    lower_remote_address.val = lower_remote_address_val
    lower_remote_address.is_some = true
  }
  var ret C.wasi_sockets_0_2_0_udp_result_tuple2_own_incoming_datagram_stream_own_outgoing_datagram_stream_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_stream(lower_self , &lower_remote_address , &ret )
  var lift_ret Result[WasiSockets0_2_0_UdpTuple2IncomingDatagramStreamOutgoingDatagramStreamT, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_tuple2_own_incoming_datagram_stream_own_outgoing_datagram_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpTuple2IncomingDatagramStreamOutgoingDatagramStreamT
    var lift_ret_val_F0 WasiSockets0_2_0_UdpIncomingDatagramStream
    lift_ret_val_F0 = WasiSockets0_2_0_UdpIncomingDatagramStream(lift_ret_ptr.f0.__handle)
    
    lift_ret_val.F0 = lift_ret_val_F0
    var lift_ret_val_F1 WasiSockets0_2_0_UdpOutgoingDatagramStream
    lift_ret_val_F1 = WasiSockets0_2_0_UdpOutgoingDatagramStream(lift_ret_ptr.f1.__handle)
    
    lift_ret_val.F1 = lift_ret_val_F1
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) LocalAddress() Result[WasiSockets0_2_0_UdpIpSocketAddress, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_ip_socket_address_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_local_address(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_UdpIpSocketAddress, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_ip_socket_address_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpIpSocketAddress
    var lift_ret_val_val WasiSockets0_2_0_NetworkIpSocketAddress
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv4SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv4Address
      var lift_ret_val_val_val_Address_F0 uint8
      lift_ret_val_val_val_Address_F0 = uint8(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint8
      lift_ret_val_val_val_Address_F1 = uint8(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint8
      lift_ret_val_val_val_Address_F2 = uint8(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint8
      lift_ret_val_val_val_Address_F3 = uint8(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv4(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv6SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_FlowInfo uint32
      lift_ret_val_val_val_FlowInfo = uint32(lift_ret_val_val_ptr.flow_info)
      lift_ret_val_val_val.FlowInfo = lift_ret_val_val_val_FlowInfo
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv6Address
      var lift_ret_val_val_val_Address_F0 uint16
      lift_ret_val_val_val_Address_F0 = uint16(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint16
      lift_ret_val_val_val_Address_F1 = uint16(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint16
      lift_ret_val_val_val_Address_F2 = uint16(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint16
      lift_ret_val_val_val_Address_F3 = uint16(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      var lift_ret_val_val_val_Address_F4 uint16
      lift_ret_val_val_val_Address_F4 = uint16(lift_ret_val_val_ptr.address.f4)
      lift_ret_val_val_val_Address.F4 = lift_ret_val_val_val_Address_F4
      var lift_ret_val_val_val_Address_F5 uint16
      lift_ret_val_val_val_Address_F5 = uint16(lift_ret_val_val_ptr.address.f5)
      lift_ret_val_val_val_Address.F5 = lift_ret_val_val_val_Address_F5
      var lift_ret_val_val_val_Address_F6 uint16
      lift_ret_val_val_val_Address_F6 = uint16(lift_ret_val_val_ptr.address.f6)
      lift_ret_val_val_val_Address.F6 = lift_ret_val_val_val_Address_F6
      var lift_ret_val_val_val_Address_F7 uint16
      lift_ret_val_val_val_Address_F7 = uint16(lift_ret_val_val_ptr.address.f7)
      lift_ret_val_val_val_Address.F7 = lift_ret_val_val_val_Address_F7
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      var lift_ret_val_val_val_ScopeId uint32
      lift_ret_val_val_val_ScopeId = uint32(lift_ret_val_val_ptr.scope_id)
      lift_ret_val_val_val.ScopeId = lift_ret_val_val_val_ScopeId
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv6(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) RemoteAddress() Result[WasiSockets0_2_0_UdpIpSocketAddress, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_ip_socket_address_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_remote_address(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_UdpIpSocketAddress, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_ip_socket_address_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpIpSocketAddress
    var lift_ret_val_val WasiSockets0_2_0_NetworkIpSocketAddress
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv4SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv4Address
      var lift_ret_val_val_val_Address_F0 uint8
      lift_ret_val_val_val_Address_F0 = uint8(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint8
      lift_ret_val_val_val_Address_F1 = uint8(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint8
      lift_ret_val_val_val_Address_F2 = uint8(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint8
      lift_ret_val_val_val_Address_F3 = uint8(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv4(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv6SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_FlowInfo uint32
      lift_ret_val_val_val_FlowInfo = uint32(lift_ret_val_val_ptr.flow_info)
      lift_ret_val_val_val.FlowInfo = lift_ret_val_val_val_FlowInfo
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv6Address
      var lift_ret_val_val_val_Address_F0 uint16
      lift_ret_val_val_val_Address_F0 = uint16(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint16
      lift_ret_val_val_val_Address_F1 = uint16(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint16
      lift_ret_val_val_val_Address_F2 = uint16(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint16
      lift_ret_val_val_val_Address_F3 = uint16(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      var lift_ret_val_val_val_Address_F4 uint16
      lift_ret_val_val_val_Address_F4 = uint16(lift_ret_val_val_ptr.address.f4)
      lift_ret_val_val_val_Address.F4 = lift_ret_val_val_val_Address_F4
      var lift_ret_val_val_val_Address_F5 uint16
      lift_ret_val_val_val_Address_F5 = uint16(lift_ret_val_val_ptr.address.f5)
      lift_ret_val_val_val_Address.F5 = lift_ret_val_val_val_Address_F5
      var lift_ret_val_val_val_Address_F6 uint16
      lift_ret_val_val_val_Address_F6 = uint16(lift_ret_val_val_ptr.address.f6)
      lift_ret_val_val_val_Address.F6 = lift_ret_val_val_val_Address_F6
      var lift_ret_val_val_val_Address_F7 uint16
      lift_ret_val_val_val_Address_F7 = uint16(lift_ret_val_val_ptr.address.f7)
      lift_ret_val_val_val_Address.F7 = lift_ret_val_val_val_Address_F7
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      var lift_ret_val_val_val_ScopeId uint32
      lift_ret_val_val_val_ScopeId = uint32(lift_ret_val_val_ptr.scope_id)
      lift_ret_val_val_val.ScopeId = lift_ret_val_val_val_ScopeId
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv6(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) AddressFamily() WasiSockets0_2_0_UdpIpAddressFamily {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_udp_method_udp_socket_address_family(lower_self )
  var lift_ret WasiSockets0_2_0_UdpIpAddressFamily
  var lift_ret_val WasiSockets0_2_0_NetworkIpAddressFamily
  if ret == 0 {
    lift_ret_val = WasiSockets0_2_0_NetworkIpAddressFamilyIpv4()
  }
  if ret == 1 {
    lift_ret_val = WasiSockets0_2_0_NetworkIpAddressFamilyIpv6()
  }
  lift_ret = lift_ret_val
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) UnicastHopLimit() Result[uint8, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_u8_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_unicast_hop_limit(lower_self , &ret )
  var lift_ret Result[uint8, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint8_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint8
    lift_ret_val = uint8(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) SetUnicastHopLimit(value uint8) Result[struct{}, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint8_t(value)
  var ret C.wasi_sockets_0_2_0_udp_result_void_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_set_unicast_hop_limit(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) ReceiveBufferSize() Result[uint64, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_u64_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_receive_buffer_size(lower_self , &ret )
  var lift_ret Result[uint64, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) SetReceiveBufferSize(value uint64) Result[struct{}, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint64_t(value)
  var ret C.wasi_sockets_0_2_0_udp_result_void_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_set_receive_buffer_size(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) SendBufferSize() Result[uint64, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_u64_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_send_buffer_size(lower_self , &ret )
  var lift_ret Result[uint64, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) SetSendBufferSize(value uint64) Result[struct{}, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint64_t(value)
  var ret C.wasi_sockets_0_2_0_udp_result_void_error_code_t
  C.wasi_sockets_0_2_0_udp_method_udp_socket_set_send_buffer_size(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpUdpSocket) Subscribe() WasiSockets0_2_0_UdpPollable {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_udp_socket_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_udp_method_udp_socket_subscribe(lower_self )
  var lift_ret WasiSockets0_2_0_UdpPollable
  lift_ret = WasiSockets0_2_0_UdpPollable(ret.__handle)

  return lift_ret
}

func (self WasiSockets0_2_0_UdpIncomingDatagramStream) Receive(max_results uint64) Result[[]WasiSockets0_2_0_UdpIncomingDatagram, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_incoming_datagram_stream_t
  lower_self.__handle = C.int32_t(self)
  lower_max_results := C.uint64_t(max_results)
  var ret C.wasi_sockets_0_2_0_udp_result_list_incoming_datagram_error_code_t
  C.wasi_sockets_0_2_0_udp_method_incoming_datagram_stream_receive(lower_self , lower_max_results , &ret )
  var lift_ret Result[[]WasiSockets0_2_0_UdpIncomingDatagram, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_list_incoming_datagram_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val []WasiSockets0_2_0_UdpIncomingDatagram
    lift_ret_val = make([]WasiSockets0_2_0_UdpIncomingDatagram, lift_ret_ptr.len)
    if lift_ret_ptr.len > 0 {
      for lift_ret_val_i := 0; lift_ret_val_i < int(lift_ret_ptr.len); lift_ret_val_i++ {
        var empty_lift_ret_val C.wasi_sockets_0_2_0_udp_incoming_datagram_t
        lift_ret_val_ptr := *(*C.wasi_sockets_0_2_0_udp_incoming_datagram_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_ptr.ptr)) +
        uintptr(lift_ret_val_i)*unsafe.Sizeof(empty_lift_ret_val)))
        var list_lift_ret_val WasiSockets0_2_0_UdpIncomingDatagram
        var list_lift_ret_val_Data []uint8
        list_lift_ret_val_Data = make([]uint8, lift_ret_val_ptr.data.len)
        if lift_ret_val_ptr.data.len > 0 {
          for list_lift_ret_val_Data_i := 0; list_lift_ret_val_Data_i < int(lift_ret_val_ptr.data.len); list_lift_ret_val_Data_i++ {
            var empty_list_lift_ret_val_Data C.uint8_t
            list_lift_ret_val_Data_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lift_ret_val_ptr.data.ptr)) +
            uintptr(list_lift_ret_val_Data_i)*unsafe.Sizeof(empty_list_lift_ret_val_Data)))
            var list_list_lift_ret_val_Data uint8
            list_list_lift_ret_val_Data = uint8(list_lift_ret_val_Data_ptr)
            list_lift_ret_val_Data[list_lift_ret_val_Data_i] = list_list_lift_ret_val_Data
          }
        }
        list_lift_ret_val.Data = list_lift_ret_val_Data
        var list_lift_ret_val_RemoteAddress WasiSockets0_2_0_UdpIpSocketAddress
        var list_lift_ret_val_RemoteAddress_val WasiSockets0_2_0_NetworkIpSocketAddress
        if lift_ret_val_ptr.remote_address.tag == 0 {
          list_lift_ret_val_RemoteAddress_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lift_ret_val_ptr.remote_address.val))
          var list_lift_ret_val_RemoteAddress_val_val WasiSockets0_2_0_NetworkIpv4SocketAddress
          var list_lift_ret_val_RemoteAddress_val_val_Port uint16
          list_lift_ret_val_RemoteAddress_val_val_Port = uint16(list_lift_ret_val_RemoteAddress_val_ptr.port)
          list_lift_ret_val_RemoteAddress_val_val.Port = list_lift_ret_val_RemoteAddress_val_val_Port
          var list_lift_ret_val_RemoteAddress_val_val_Address WasiSockets0_2_0_NetworkIpv4Address
          var list_lift_ret_val_RemoteAddress_val_val_Address_F0 uint8
          list_lift_ret_val_RemoteAddress_val_val_Address_F0 = uint8(list_lift_ret_val_RemoteAddress_val_ptr.address.f0)
          list_lift_ret_val_RemoteAddress_val_val_Address.F0 = list_lift_ret_val_RemoteAddress_val_val_Address_F0
          var list_lift_ret_val_RemoteAddress_val_val_Address_F1 uint8
          list_lift_ret_val_RemoteAddress_val_val_Address_F1 = uint8(list_lift_ret_val_RemoteAddress_val_ptr.address.f1)
          list_lift_ret_val_RemoteAddress_val_val_Address.F1 = list_lift_ret_val_RemoteAddress_val_val_Address_F1
          var list_lift_ret_val_RemoteAddress_val_val_Address_F2 uint8
          list_lift_ret_val_RemoteAddress_val_val_Address_F2 = uint8(list_lift_ret_val_RemoteAddress_val_ptr.address.f2)
          list_lift_ret_val_RemoteAddress_val_val_Address.F2 = list_lift_ret_val_RemoteAddress_val_val_Address_F2
          var list_lift_ret_val_RemoteAddress_val_val_Address_F3 uint8
          list_lift_ret_val_RemoteAddress_val_val_Address_F3 = uint8(list_lift_ret_val_RemoteAddress_val_ptr.address.f3)
          list_lift_ret_val_RemoteAddress_val_val_Address.F3 = list_lift_ret_val_RemoteAddress_val_val_Address_F3
          list_lift_ret_val_RemoteAddress_val_val.Address = list_lift_ret_val_RemoteAddress_val_val_Address
          list_lift_ret_val_RemoteAddress_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv4(list_lift_ret_val_RemoteAddress_val_val)
        }
        if lift_ret_val_ptr.remote_address.tag == 1 {
          list_lift_ret_val_RemoteAddress_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lift_ret_val_ptr.remote_address.val))
          var list_lift_ret_val_RemoteAddress_val_val WasiSockets0_2_0_NetworkIpv6SocketAddress
          var list_lift_ret_val_RemoteAddress_val_val_Port uint16
          list_lift_ret_val_RemoteAddress_val_val_Port = uint16(list_lift_ret_val_RemoteAddress_val_ptr.port)
          list_lift_ret_val_RemoteAddress_val_val.Port = list_lift_ret_val_RemoteAddress_val_val_Port
          var list_lift_ret_val_RemoteAddress_val_val_FlowInfo uint32
          list_lift_ret_val_RemoteAddress_val_val_FlowInfo = uint32(list_lift_ret_val_RemoteAddress_val_ptr.flow_info)
          list_lift_ret_val_RemoteAddress_val_val.FlowInfo = list_lift_ret_val_RemoteAddress_val_val_FlowInfo
          var list_lift_ret_val_RemoteAddress_val_val_Address WasiSockets0_2_0_NetworkIpv6Address
          var list_lift_ret_val_RemoteAddress_val_val_Address_F0 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F0 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f0)
          list_lift_ret_val_RemoteAddress_val_val_Address.F0 = list_lift_ret_val_RemoteAddress_val_val_Address_F0
          var list_lift_ret_val_RemoteAddress_val_val_Address_F1 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F1 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f1)
          list_lift_ret_val_RemoteAddress_val_val_Address.F1 = list_lift_ret_val_RemoteAddress_val_val_Address_F1
          var list_lift_ret_val_RemoteAddress_val_val_Address_F2 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F2 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f2)
          list_lift_ret_val_RemoteAddress_val_val_Address.F2 = list_lift_ret_val_RemoteAddress_val_val_Address_F2
          var list_lift_ret_val_RemoteAddress_val_val_Address_F3 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F3 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f3)
          list_lift_ret_val_RemoteAddress_val_val_Address.F3 = list_lift_ret_val_RemoteAddress_val_val_Address_F3
          var list_lift_ret_val_RemoteAddress_val_val_Address_F4 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F4 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f4)
          list_lift_ret_val_RemoteAddress_val_val_Address.F4 = list_lift_ret_val_RemoteAddress_val_val_Address_F4
          var list_lift_ret_val_RemoteAddress_val_val_Address_F5 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F5 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f5)
          list_lift_ret_val_RemoteAddress_val_val_Address.F5 = list_lift_ret_val_RemoteAddress_val_val_Address_F5
          var list_lift_ret_val_RemoteAddress_val_val_Address_F6 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F6 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f6)
          list_lift_ret_val_RemoteAddress_val_val_Address.F6 = list_lift_ret_val_RemoteAddress_val_val_Address_F6
          var list_lift_ret_val_RemoteAddress_val_val_Address_F7 uint16
          list_lift_ret_val_RemoteAddress_val_val_Address_F7 = uint16(list_lift_ret_val_RemoteAddress_val_ptr.address.f7)
          list_lift_ret_val_RemoteAddress_val_val_Address.F7 = list_lift_ret_val_RemoteAddress_val_val_Address_F7
          list_lift_ret_val_RemoteAddress_val_val.Address = list_lift_ret_val_RemoteAddress_val_val_Address
          var list_lift_ret_val_RemoteAddress_val_val_ScopeId uint32
          list_lift_ret_val_RemoteAddress_val_val_ScopeId = uint32(list_lift_ret_val_RemoteAddress_val_ptr.scope_id)
          list_lift_ret_val_RemoteAddress_val_val.ScopeId = list_lift_ret_val_RemoteAddress_val_val_ScopeId
          list_lift_ret_val_RemoteAddress_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv6(list_lift_ret_val_RemoteAddress_val_val)
        }
        list_lift_ret_val_RemoteAddress = list_lift_ret_val_RemoteAddress_val
        list_lift_ret_val.RemoteAddress = list_lift_ret_val_RemoteAddress
        lift_ret_val[lift_ret_val_i] = list_lift_ret_val
      }
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpIncomingDatagramStream) Subscribe() WasiSockets0_2_0_UdpPollable {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_incoming_datagram_stream_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_udp_method_incoming_datagram_stream_subscribe(lower_self )
  var lift_ret WasiSockets0_2_0_UdpPollable
  lift_ret = WasiSockets0_2_0_UdpPollable(ret.__handle)

  return lift_ret
}

func (self WasiSockets0_2_0_UdpOutgoingDatagramStream) CheckSend() Result[uint64, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_outgoing_datagram_stream_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_udp_result_u64_error_code_t
  C.wasi_sockets_0_2_0_udp_method_outgoing_datagram_stream_check_send(lower_self , &ret )
  var lift_ret Result[uint64, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpOutgoingDatagramStream) Send(datagrams []WasiSockets0_2_0_UdpOutgoingDatagram) Result[uint64, WasiSockets0_2_0_UdpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_outgoing_datagram_stream_t
  lower_self.__handle = C.int32_t(self)
  var lower_datagrams C.wasi_sockets_0_2_0_udp_list_outgoing_datagram_t
  if len(datagrams) == 0 {
    lower_datagrams.ptr = nil
    lower_datagrams.len = 0
  } else {
    var empty_lower_datagrams C.wasi_sockets_0_2_0_udp_outgoing_datagram_t
    lower_datagrams.ptr = (*C.wasi_sockets_0_2_0_udp_outgoing_datagram_t)(C.malloc(C.size_t(len(datagrams)) * C.size_t(unsafe.Sizeof(empty_lower_datagrams))))
    lower_datagrams.len = C.size_t(len(datagrams))
    for lower_datagrams_i := range datagrams {
      lower_datagrams_ptr := (*C.wasi_sockets_0_2_0_udp_outgoing_datagram_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_datagrams.ptr)) +
      uintptr(lower_datagrams_i)*unsafe.Sizeof(empty_lower_datagrams)))
      var lower_datagrams_ptr_value C.wasi_sockets_0_2_0_udp_outgoing_datagram_t
      var lower_datagrams_ptr_value_data C.http_trigger_list_u8_t
      if len(datagrams[lower_datagrams_i].Data) == 0 {
        lower_datagrams_ptr_value_data.ptr = nil
        lower_datagrams_ptr_value_data.len = 0
      } else {
        var empty_lower_datagrams_ptr_value_data C.uint8_t
        lower_datagrams_ptr_value_data.ptr = (*C.uint8_t)(C.malloc(C.size_t(len(datagrams[lower_datagrams_i].Data)) * C.size_t(unsafe.Sizeof(empty_lower_datagrams_ptr_value_data))))
        lower_datagrams_ptr_value_data.len = C.size_t(len(datagrams[lower_datagrams_i].Data))
        for lower_datagrams_ptr_value_data_i := range datagrams[lower_datagrams_i].Data {
          lower_datagrams_ptr_value_data_ptr := (*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(lower_datagrams_ptr_value_data.ptr)) +
          uintptr(lower_datagrams_ptr_value_data_i)*unsafe.Sizeof(empty_lower_datagrams_ptr_value_data)))
          lower_datagrams_ptr_value_data_ptr_value := C.uint8_t(datagrams[lower_datagrams_i].Data[lower_datagrams_ptr_value_data_i])
          *lower_datagrams_ptr_value_data_ptr = lower_datagrams_ptr_value_data_ptr_value
        }
      }
      lower_datagrams_ptr_value.data = lower_datagrams_ptr_value_data
      var lower_datagrams_ptr_value_remote_address C.wasi_sockets_0_2_0_udp_option_ip_socket_address_t
      if datagrams[lower_datagrams_i].RemoteAddress.IsSome() {
        var lower_datagrams_ptr_value_remote_address_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
        var lower_datagrams_ptr_value_remote_address_val_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
        if datagrams[lower_datagrams_i].RemoteAddress.Unwrap().Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4 {

          lower_datagrams_ptr_value_remote_address_val_val.tag = 0
          lower_datagrams_ptr_value_remote_address_val_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lower_datagrams_ptr_value_remote_address_val_val.val))
          var lower_datagrams_ptr_value_remote_address_val_val_val C.wasi_sockets_0_2_0_network_ipv4_socket_address_t
          lower_datagrams_ptr_value_remote_address_val_val_val_port := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv4().Port)
          lower_datagrams_ptr_value_remote_address_val_val_val.port = lower_datagrams_ptr_value_remote_address_val_val_val_port
          var lower_datagrams_ptr_value_remote_address_val_val_val_address C.wasi_sockets_0_2_0_network_ipv4_address_t
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f0 := C.uint8_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv4().Address.F0)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f0 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f0
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f1 := C.uint8_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv4().Address.F1)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f1 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f1
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f2 := C.uint8_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv4().Address.F2)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f2 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f2
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f3 := C.uint8_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv4().Address.F3)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f3 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f3
          lower_datagrams_ptr_value_remote_address_val_val_val.address = lower_datagrams_ptr_value_remote_address_val_val_val_address
          *lower_datagrams_ptr_value_remote_address_val_val_ptr = lower_datagrams_ptr_value_remote_address_val_val_val
        }
        if datagrams[lower_datagrams_i].RemoteAddress.Unwrap().Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6 {

          lower_datagrams_ptr_value_remote_address_val_val.tag = 1
          lower_datagrams_ptr_value_remote_address_val_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lower_datagrams_ptr_value_remote_address_val_val.val))
          var lower_datagrams_ptr_value_remote_address_val_val_val C.wasi_sockets_0_2_0_network_ipv6_socket_address_t
          lower_datagrams_ptr_value_remote_address_val_val_val_port := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Port)
          lower_datagrams_ptr_value_remote_address_val_val_val.port = lower_datagrams_ptr_value_remote_address_val_val_val_port
          lower_datagrams_ptr_value_remote_address_val_val_val_flow_info := C.uint32_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().FlowInfo)
          lower_datagrams_ptr_value_remote_address_val_val_val.flow_info = lower_datagrams_ptr_value_remote_address_val_val_val_flow_info
          var lower_datagrams_ptr_value_remote_address_val_val_val_address C.wasi_sockets_0_2_0_network_ipv6_address_t
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f0 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F0)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f0 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f0
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f1 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F1)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f1 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f1
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f2 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F2)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f2 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f2
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f3 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F3)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f3 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f3
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f4 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F4)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f4 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f4
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f5 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F5)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f5 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f5
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f6 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F6)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f6 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f6
          lower_datagrams_ptr_value_remote_address_val_val_val_address_f7 := C.uint16_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().Address.F7)
          lower_datagrams_ptr_value_remote_address_val_val_val_address.f7 = lower_datagrams_ptr_value_remote_address_val_val_val_address_f7
          lower_datagrams_ptr_value_remote_address_val_val_val.address = lower_datagrams_ptr_value_remote_address_val_val_val_address
          lower_datagrams_ptr_value_remote_address_val_val_val_scope_id := C.uint32_t(datagrams[lower_datagrams_i].RemoteAddress.Unwrap().GetIpv6().ScopeId)
          lower_datagrams_ptr_value_remote_address_val_val_val.scope_id = lower_datagrams_ptr_value_remote_address_val_val_val_scope_id
          *lower_datagrams_ptr_value_remote_address_val_val_ptr = lower_datagrams_ptr_value_remote_address_val_val_val
        }
        lower_datagrams_ptr_value_remote_address_val = lower_datagrams_ptr_value_remote_address_val_val
        lower_datagrams_ptr_value_remote_address.val = lower_datagrams_ptr_value_remote_address_val
        lower_datagrams_ptr_value_remote_address.is_some = true
      }
      lower_datagrams_ptr_value.remote_address = lower_datagrams_ptr_value_remote_address
      *lower_datagrams_ptr = lower_datagrams_ptr_value
    }
  }
  var ret C.wasi_sockets_0_2_0_udp_result_u64_error_code_t
  C.wasi_sockets_0_2_0_udp_method_outgoing_datagram_stream_send(lower_self , &lower_datagrams , &ret )
  var lift_ret Result[uint64, WasiSockets0_2_0_UdpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_UdpOutgoingDatagramStream) Subscribe() WasiSockets0_2_0_UdpPollable {
  var lower_self C.wasi_sockets_0_2_0_udp_borrow_outgoing_datagram_stream_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_udp_method_outgoing_datagram_stream_subscribe(lower_self )
  var lift_ret WasiSockets0_2_0_UdpPollable
  lift_ret = WasiSockets0_2_0_UdpPollable(ret.__handle)

  return lift_ret
}

// Import functions from wasi:sockets/udp-create-socket@0.2.0
type WasiSockets0_2_0_UdpCreateSocketNetwork = WasiSockets0_2_0_NetworkNetwork
type WasiSockets0_2_0_UdpCreateSocketErrorCode = WasiSockets0_2_0_NetworkErrorCode
type WasiSockets0_2_0_UdpCreateSocketIpAddressFamily = WasiSockets0_2_0_NetworkIpAddressFamily
type WasiSockets0_2_0_UdpCreateSocketUdpSocket = WasiSockets0_2_0_UdpUdpSocket
func WasiSockets0_2_0_UdpCreateSocketCreateUdpSocket(address_family WasiSockets0_2_0_UdpCreateSocketIpAddressFamily) Result[WasiSockets0_2_0_UdpCreateSocketUdpSocket, WasiSockets0_2_0_UdpCreateSocketErrorCode] {
  var lower_address_family C.wasi_sockets_0_2_0_network_ip_address_family_t
  var lower_address_family_val C.wasi_sockets_0_2_0_network_ip_address_family_t
  if address_family.Kind() == WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv4 {
    lower_address_family_val = 0
  }
  if address_family.Kind() == WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv6 {
    lower_address_family_val = 1
  }
  lower_address_family = lower_address_family_val
  var ret C.wasi_sockets_0_2_0_udp_create_socket_result_own_udp_socket_error_code_t
  C.wasi_sockets_0_2_0_udp_create_socket_create_udp_socket(lower_address_family , &ret )
  var lift_ret Result[WasiSockets0_2_0_UdpCreateSocketUdpSocket, WasiSockets0_2_0_UdpCreateSocketErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_create_socket_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpCreateSocketErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_udp_create_socket_own_udp_socket_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_UdpCreateSocketUdpSocket
    lift_ret_val = WasiSockets0_2_0_UdpCreateSocketUdpSocket(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from wasi:sockets/tcp@0.2.0
type WasiSockets0_2_0_TcpInputStream = WasiIo0_2_0_StreamsInputStream
type WasiSockets0_2_0_TcpOutputStream = WasiIo0_2_0_StreamsOutputStream
type WasiSockets0_2_0_TcpPollable = WasiIo0_2_0_PollPollable
type WasiSockets0_2_0_TcpDuration = WasiClocks0_2_0_MonotonicClockDuration
type WasiSockets0_2_0_TcpNetwork = WasiSockets0_2_0_NetworkNetwork
type WasiSockets0_2_0_TcpErrorCode = WasiSockets0_2_0_NetworkErrorCode
type WasiSockets0_2_0_TcpIpSocketAddress = WasiSockets0_2_0_NetworkIpSocketAddress
type WasiSockets0_2_0_TcpIpAddressFamily = WasiSockets0_2_0_NetworkIpAddressFamily
type WasiSockets0_2_0_TcpShutdownTypeKind int

const (
WasiSockets0_2_0_TcpShutdownTypeKindReceive WasiSockets0_2_0_TcpShutdownTypeKind = iota
WasiSockets0_2_0_TcpShutdownTypeKindSend
WasiSockets0_2_0_TcpShutdownTypeKindBoth
)

type WasiSockets0_2_0_TcpShutdownType struct {
  kind WasiSockets0_2_0_TcpShutdownTypeKind
}

func (n WasiSockets0_2_0_TcpShutdownType) Kind() WasiSockets0_2_0_TcpShutdownTypeKind {
  return n.kind
}

func WasiSockets0_2_0_TcpShutdownTypeReceive() WasiSockets0_2_0_TcpShutdownType{
  return WasiSockets0_2_0_TcpShutdownType{kind: WasiSockets0_2_0_TcpShutdownTypeKindReceive}
}

func WasiSockets0_2_0_TcpShutdownTypeSend() WasiSockets0_2_0_TcpShutdownType{
  return WasiSockets0_2_0_TcpShutdownType{kind: WasiSockets0_2_0_TcpShutdownTypeKindSend}
}

func WasiSockets0_2_0_TcpShutdownTypeBoth() WasiSockets0_2_0_TcpShutdownType{
  return WasiSockets0_2_0_TcpShutdownType{kind: WasiSockets0_2_0_TcpShutdownTypeKindBoth}
}

// WasiSockets0_2_0_TcpTcpSocket is a handle to imported resource tcp-socket
type WasiSockets0_2_0_TcpTcpSocket int32

//go:wasmimport wasi:sockets/tcp@0.2.0 [resource-drop]tcp-socket
func _WasiSockets0_2_0_TcpTcpSocket_drop(self WasiSockets0_2_0_TcpTcpSocket)

func (self WasiSockets0_2_0_TcpTcpSocket) Drop() {
  _WasiSockets0_2_0_TcpTcpSocket_drop(self)
}

type WasiSockets0_2_0_TcpTuple2InputStreamOutputStreamT struct {
  F0 WasiSockets0_2_0_TcpInputStream
  F1 WasiSockets0_2_0_TcpOutputStream
}

type WasiSockets0_2_0_TcpTuple3TcpSocketInputStreamOutputStreamT struct {
  F0 WasiSockets0_2_0_TcpTcpSocket
  F1 WasiSockets0_2_0_TcpInputStream
  F2 WasiSockets0_2_0_TcpOutputStream
}

func (self WasiSockets0_2_0_TcpTcpSocket) StartBind(network WasiSockets0_2_0_TcpNetwork, local_address WasiSockets0_2_0_TcpIpSocketAddress) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_network C.wasi_sockets_0_2_0_tcp_borrow_network_t
  lower_network.__handle = C.int32_t(network)
  var lower_local_address C.wasi_sockets_0_2_0_network_ip_socket_address_t
  var lower_local_address_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
  if local_address.Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4 {

    lower_local_address_val.tag = 0
    lower_local_address_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lower_local_address_val.val))
    var lower_local_address_val_val C.wasi_sockets_0_2_0_network_ipv4_socket_address_t
    lower_local_address_val_val_port := C.uint16_t(local_address.GetIpv4().Port)
    lower_local_address_val_val.port = lower_local_address_val_val_port
    var lower_local_address_val_val_address C.wasi_sockets_0_2_0_network_ipv4_address_t
    lower_local_address_val_val_address_f0 := C.uint8_t(local_address.GetIpv4().Address.F0)
    lower_local_address_val_val_address.f0 = lower_local_address_val_val_address_f0
    lower_local_address_val_val_address_f1 := C.uint8_t(local_address.GetIpv4().Address.F1)
    lower_local_address_val_val_address.f1 = lower_local_address_val_val_address_f1
    lower_local_address_val_val_address_f2 := C.uint8_t(local_address.GetIpv4().Address.F2)
    lower_local_address_val_val_address.f2 = lower_local_address_val_val_address_f2
    lower_local_address_val_val_address_f3 := C.uint8_t(local_address.GetIpv4().Address.F3)
    lower_local_address_val_val_address.f3 = lower_local_address_val_val_address_f3
    lower_local_address_val_val.address = lower_local_address_val_val_address
    *lower_local_address_val_ptr = lower_local_address_val_val
  }
  if local_address.Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6 {

    lower_local_address_val.tag = 1
    lower_local_address_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lower_local_address_val.val))
    var lower_local_address_val_val C.wasi_sockets_0_2_0_network_ipv6_socket_address_t
    lower_local_address_val_val_port := C.uint16_t(local_address.GetIpv6().Port)
    lower_local_address_val_val.port = lower_local_address_val_val_port
    lower_local_address_val_val_flow_info := C.uint32_t(local_address.GetIpv6().FlowInfo)
    lower_local_address_val_val.flow_info = lower_local_address_val_val_flow_info
    var lower_local_address_val_val_address C.wasi_sockets_0_2_0_network_ipv6_address_t
    lower_local_address_val_val_address_f0 := C.uint16_t(local_address.GetIpv6().Address.F0)
    lower_local_address_val_val_address.f0 = lower_local_address_val_val_address_f0
    lower_local_address_val_val_address_f1 := C.uint16_t(local_address.GetIpv6().Address.F1)
    lower_local_address_val_val_address.f1 = lower_local_address_val_val_address_f1
    lower_local_address_val_val_address_f2 := C.uint16_t(local_address.GetIpv6().Address.F2)
    lower_local_address_val_val_address.f2 = lower_local_address_val_val_address_f2
    lower_local_address_val_val_address_f3 := C.uint16_t(local_address.GetIpv6().Address.F3)
    lower_local_address_val_val_address.f3 = lower_local_address_val_val_address_f3
    lower_local_address_val_val_address_f4 := C.uint16_t(local_address.GetIpv6().Address.F4)
    lower_local_address_val_val_address.f4 = lower_local_address_val_val_address_f4
    lower_local_address_val_val_address_f5 := C.uint16_t(local_address.GetIpv6().Address.F5)
    lower_local_address_val_val_address.f5 = lower_local_address_val_val_address_f5
    lower_local_address_val_val_address_f6 := C.uint16_t(local_address.GetIpv6().Address.F6)
    lower_local_address_val_val_address.f6 = lower_local_address_val_val_address_f6
    lower_local_address_val_val_address_f7 := C.uint16_t(local_address.GetIpv6().Address.F7)
    lower_local_address_val_val_address.f7 = lower_local_address_val_val_address_f7
    lower_local_address_val_val.address = lower_local_address_val_val_address
    lower_local_address_val_val_scope_id := C.uint32_t(local_address.GetIpv6().ScopeId)
    lower_local_address_val_val.scope_id = lower_local_address_val_val_scope_id
    *lower_local_address_val_ptr = lower_local_address_val_val
  }
  lower_local_address = lower_local_address_val
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_start_bind(lower_self , lower_network , &lower_local_address , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) FinishBind() Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_finish_bind(lower_self , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) StartConnect(network WasiSockets0_2_0_TcpNetwork, remote_address WasiSockets0_2_0_TcpIpSocketAddress) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_network C.wasi_sockets_0_2_0_tcp_borrow_network_t
  lower_network.__handle = C.int32_t(network)
  var lower_remote_address C.wasi_sockets_0_2_0_network_ip_socket_address_t
  var lower_remote_address_val C.wasi_sockets_0_2_0_network_ip_socket_address_t
  if remote_address.Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv4 {

    lower_remote_address_val.tag = 0
    lower_remote_address_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lower_remote_address_val.val))
    var lower_remote_address_val_val C.wasi_sockets_0_2_0_network_ipv4_socket_address_t
    lower_remote_address_val_val_port := C.uint16_t(remote_address.GetIpv4().Port)
    lower_remote_address_val_val.port = lower_remote_address_val_val_port
    var lower_remote_address_val_val_address C.wasi_sockets_0_2_0_network_ipv4_address_t
    lower_remote_address_val_val_address_f0 := C.uint8_t(remote_address.GetIpv4().Address.F0)
    lower_remote_address_val_val_address.f0 = lower_remote_address_val_val_address_f0
    lower_remote_address_val_val_address_f1 := C.uint8_t(remote_address.GetIpv4().Address.F1)
    lower_remote_address_val_val_address.f1 = lower_remote_address_val_val_address_f1
    lower_remote_address_val_val_address_f2 := C.uint8_t(remote_address.GetIpv4().Address.F2)
    lower_remote_address_val_val_address.f2 = lower_remote_address_val_val_address_f2
    lower_remote_address_val_val_address_f3 := C.uint8_t(remote_address.GetIpv4().Address.F3)
    lower_remote_address_val_val_address.f3 = lower_remote_address_val_val_address_f3
    lower_remote_address_val_val.address = lower_remote_address_val_val_address
    *lower_remote_address_val_ptr = lower_remote_address_val_val
  }
  if remote_address.Kind() == WasiSockets0_2_0_NetworkIpSocketAddressKindIpv6 {

    lower_remote_address_val.tag = 1
    lower_remote_address_val_ptr := (*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lower_remote_address_val.val))
    var lower_remote_address_val_val C.wasi_sockets_0_2_0_network_ipv6_socket_address_t
    lower_remote_address_val_val_port := C.uint16_t(remote_address.GetIpv6().Port)
    lower_remote_address_val_val.port = lower_remote_address_val_val_port
    lower_remote_address_val_val_flow_info := C.uint32_t(remote_address.GetIpv6().FlowInfo)
    lower_remote_address_val_val.flow_info = lower_remote_address_val_val_flow_info
    var lower_remote_address_val_val_address C.wasi_sockets_0_2_0_network_ipv6_address_t
    lower_remote_address_val_val_address_f0 := C.uint16_t(remote_address.GetIpv6().Address.F0)
    lower_remote_address_val_val_address.f0 = lower_remote_address_val_val_address_f0
    lower_remote_address_val_val_address_f1 := C.uint16_t(remote_address.GetIpv6().Address.F1)
    lower_remote_address_val_val_address.f1 = lower_remote_address_val_val_address_f1
    lower_remote_address_val_val_address_f2 := C.uint16_t(remote_address.GetIpv6().Address.F2)
    lower_remote_address_val_val_address.f2 = lower_remote_address_val_val_address_f2
    lower_remote_address_val_val_address_f3 := C.uint16_t(remote_address.GetIpv6().Address.F3)
    lower_remote_address_val_val_address.f3 = lower_remote_address_val_val_address_f3
    lower_remote_address_val_val_address_f4 := C.uint16_t(remote_address.GetIpv6().Address.F4)
    lower_remote_address_val_val_address.f4 = lower_remote_address_val_val_address_f4
    lower_remote_address_val_val_address_f5 := C.uint16_t(remote_address.GetIpv6().Address.F5)
    lower_remote_address_val_val_address.f5 = lower_remote_address_val_val_address_f5
    lower_remote_address_val_val_address_f6 := C.uint16_t(remote_address.GetIpv6().Address.F6)
    lower_remote_address_val_val_address.f6 = lower_remote_address_val_val_address_f6
    lower_remote_address_val_val_address_f7 := C.uint16_t(remote_address.GetIpv6().Address.F7)
    lower_remote_address_val_val_address.f7 = lower_remote_address_val_val_address_f7
    lower_remote_address_val_val.address = lower_remote_address_val_val_address
    lower_remote_address_val_val_scope_id := C.uint32_t(remote_address.GetIpv6().ScopeId)
    lower_remote_address_val_val.scope_id = lower_remote_address_val_val_scope_id
    *lower_remote_address_val_ptr = lower_remote_address_val_val
  }
  lower_remote_address = lower_remote_address_val
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_start_connect(lower_self , lower_network , &lower_remote_address , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) FinishConnect() Result[WasiSockets0_2_0_TcpTuple2InputStreamOutputStreamT, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_tuple2_own_input_stream_own_output_stream_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_finish_connect(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpTuple2InputStreamOutputStreamT, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_tuple2_own_input_stream_own_output_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpTuple2InputStreamOutputStreamT
    var lift_ret_val_F0 WasiSockets0_2_0_TcpInputStream
    lift_ret_val_F0 = WasiSockets0_2_0_TcpInputStream(lift_ret_ptr.f0.__handle)
    
    lift_ret_val.F0 = lift_ret_val_F0
    var lift_ret_val_F1 WasiSockets0_2_0_TcpOutputStream
    lift_ret_val_F1 = WasiSockets0_2_0_TcpOutputStream(lift_ret_ptr.f1.__handle)
    
    lift_ret_val.F1 = lift_ret_val_F1
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) StartListen() Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_start_listen(lower_self , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) FinishListen() Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_finish_listen(lower_self , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) Accept() Result[WasiSockets0_2_0_TcpTuple3TcpSocketInputStreamOutputStreamT, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_tuple3_own_tcp_socket_own_input_stream_own_output_stream_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_accept(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpTuple3TcpSocketInputStreamOutputStreamT, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_tuple3_own_tcp_socket_own_input_stream_own_output_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpTuple3TcpSocketInputStreamOutputStreamT
    var lift_ret_val_F0 WasiSockets0_2_0_TcpTcpSocket
    lift_ret_val_F0 = WasiSockets0_2_0_TcpTcpSocket(lift_ret_ptr.f0.__handle)
    
    lift_ret_val.F0 = lift_ret_val_F0
    var lift_ret_val_F1 WasiSockets0_2_0_TcpInputStream
    lift_ret_val_F1 = WasiSockets0_2_0_TcpInputStream(lift_ret_ptr.f1.__handle)
    
    lift_ret_val.F1 = lift_ret_val_F1
    var lift_ret_val_F2 WasiSockets0_2_0_TcpOutputStream
    lift_ret_val_F2 = WasiSockets0_2_0_TcpOutputStream(lift_ret_ptr.f2.__handle)
    
    lift_ret_val.F2 = lift_ret_val_F2
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) LocalAddress() Result[WasiSockets0_2_0_TcpIpSocketAddress, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_ip_socket_address_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_local_address(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpIpSocketAddress, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_ip_socket_address_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpIpSocketAddress
    var lift_ret_val_val WasiSockets0_2_0_NetworkIpSocketAddress
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv4SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv4Address
      var lift_ret_val_val_val_Address_F0 uint8
      lift_ret_val_val_val_Address_F0 = uint8(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint8
      lift_ret_val_val_val_Address_F1 = uint8(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint8
      lift_ret_val_val_val_Address_F2 = uint8(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint8
      lift_ret_val_val_val_Address_F3 = uint8(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv4(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv6SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_FlowInfo uint32
      lift_ret_val_val_val_FlowInfo = uint32(lift_ret_val_val_ptr.flow_info)
      lift_ret_val_val_val.FlowInfo = lift_ret_val_val_val_FlowInfo
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv6Address
      var lift_ret_val_val_val_Address_F0 uint16
      lift_ret_val_val_val_Address_F0 = uint16(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint16
      lift_ret_val_val_val_Address_F1 = uint16(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint16
      lift_ret_val_val_val_Address_F2 = uint16(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint16
      lift_ret_val_val_val_Address_F3 = uint16(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      var lift_ret_val_val_val_Address_F4 uint16
      lift_ret_val_val_val_Address_F4 = uint16(lift_ret_val_val_ptr.address.f4)
      lift_ret_val_val_val_Address.F4 = lift_ret_val_val_val_Address_F4
      var lift_ret_val_val_val_Address_F5 uint16
      lift_ret_val_val_val_Address_F5 = uint16(lift_ret_val_val_ptr.address.f5)
      lift_ret_val_val_val_Address.F5 = lift_ret_val_val_val_Address_F5
      var lift_ret_val_val_val_Address_F6 uint16
      lift_ret_val_val_val_Address_F6 = uint16(lift_ret_val_val_ptr.address.f6)
      lift_ret_val_val_val_Address.F6 = lift_ret_val_val_val_Address_F6
      var lift_ret_val_val_val_Address_F7 uint16
      lift_ret_val_val_val_Address_F7 = uint16(lift_ret_val_val_ptr.address.f7)
      lift_ret_val_val_val_Address.F7 = lift_ret_val_val_val_Address_F7
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      var lift_ret_val_val_val_ScopeId uint32
      lift_ret_val_val_val_ScopeId = uint32(lift_ret_val_val_ptr.scope_id)
      lift_ret_val_val_val.ScopeId = lift_ret_val_val_val_ScopeId
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv6(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) RemoteAddress() Result[WasiSockets0_2_0_TcpIpSocketAddress, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_ip_socket_address_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_remote_address(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpIpSocketAddress, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_ip_socket_address_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpIpSocketAddress
    var lift_ret_val_val WasiSockets0_2_0_NetworkIpSocketAddress
    if lift_ret_ptr.tag == 0 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv4_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv4SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv4Address
      var lift_ret_val_val_val_Address_F0 uint8
      lift_ret_val_val_val_Address_F0 = uint8(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint8
      lift_ret_val_val_val_Address_F1 = uint8(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint8
      lift_ret_val_val_val_Address_F2 = uint8(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint8
      lift_ret_val_val_val_Address_F3 = uint8(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv4(lift_ret_val_val_val)
    }
    if lift_ret_ptr.tag == 1 {
      lift_ret_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv6_socket_address_t)(unsafe.Pointer(&lift_ret_ptr.val))
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpv6SocketAddress
      var lift_ret_val_val_val_Port uint16
      lift_ret_val_val_val_Port = uint16(lift_ret_val_val_ptr.port)
      lift_ret_val_val_val.Port = lift_ret_val_val_val_Port
      var lift_ret_val_val_val_FlowInfo uint32
      lift_ret_val_val_val_FlowInfo = uint32(lift_ret_val_val_ptr.flow_info)
      lift_ret_val_val_val.FlowInfo = lift_ret_val_val_val_FlowInfo
      var lift_ret_val_val_val_Address WasiSockets0_2_0_NetworkIpv6Address
      var lift_ret_val_val_val_Address_F0 uint16
      lift_ret_val_val_val_Address_F0 = uint16(lift_ret_val_val_ptr.address.f0)
      lift_ret_val_val_val_Address.F0 = lift_ret_val_val_val_Address_F0
      var lift_ret_val_val_val_Address_F1 uint16
      lift_ret_val_val_val_Address_F1 = uint16(lift_ret_val_val_ptr.address.f1)
      lift_ret_val_val_val_Address.F1 = lift_ret_val_val_val_Address_F1
      var lift_ret_val_val_val_Address_F2 uint16
      lift_ret_val_val_val_Address_F2 = uint16(lift_ret_val_val_ptr.address.f2)
      lift_ret_val_val_val_Address.F2 = lift_ret_val_val_val_Address_F2
      var lift_ret_val_val_val_Address_F3 uint16
      lift_ret_val_val_val_Address_F3 = uint16(lift_ret_val_val_ptr.address.f3)
      lift_ret_val_val_val_Address.F3 = lift_ret_val_val_val_Address_F3
      var lift_ret_val_val_val_Address_F4 uint16
      lift_ret_val_val_val_Address_F4 = uint16(lift_ret_val_val_ptr.address.f4)
      lift_ret_val_val_val_Address.F4 = lift_ret_val_val_val_Address_F4
      var lift_ret_val_val_val_Address_F5 uint16
      lift_ret_val_val_val_Address_F5 = uint16(lift_ret_val_val_ptr.address.f5)
      lift_ret_val_val_val_Address.F5 = lift_ret_val_val_val_Address_F5
      var lift_ret_val_val_val_Address_F6 uint16
      lift_ret_val_val_val_Address_F6 = uint16(lift_ret_val_val_ptr.address.f6)
      lift_ret_val_val_val_Address.F6 = lift_ret_val_val_val_Address_F6
      var lift_ret_val_val_val_Address_F7 uint16
      lift_ret_val_val_val_Address_F7 = uint16(lift_ret_val_val_ptr.address.f7)
      lift_ret_val_val_val_Address.F7 = lift_ret_val_val_val_Address_F7
      lift_ret_val_val_val.Address = lift_ret_val_val_val_Address
      var lift_ret_val_val_val_ScopeId uint32
      lift_ret_val_val_val_ScopeId = uint32(lift_ret_val_val_ptr.scope_id)
      lift_ret_val_val_val.ScopeId = lift_ret_val_val_val_ScopeId
      lift_ret_val_val = WasiSockets0_2_0_NetworkIpSocketAddressIpv6(lift_ret_val_val_val)
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) IsListening() bool {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_tcp_method_tcp_socket_is_listening(lower_self )
  lift_ret := ret
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) AddressFamily() WasiSockets0_2_0_TcpIpAddressFamily {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_tcp_method_tcp_socket_address_family(lower_self )
  var lift_ret WasiSockets0_2_0_TcpIpAddressFamily
  var lift_ret_val WasiSockets0_2_0_NetworkIpAddressFamily
  if ret == 0 {
    lift_ret_val = WasiSockets0_2_0_NetworkIpAddressFamilyIpv4()
  }
  if ret == 1 {
    lift_ret_val = WasiSockets0_2_0_NetworkIpAddressFamilyIpv6()
  }
  lift_ret = lift_ret_val
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetListenBacklogSize(value uint64) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint64_t(value)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_listen_backlog_size(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) KeepAliveEnabled() Result[bool, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_bool_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_keep_alive_enabled(lower_self , &ret )
  var lift_ret Result[bool, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*bool)(unsafe.Pointer(&ret.val))
    lift_ret_val := lift_ret_ptr
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetKeepAliveEnabled(value bool) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := value
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_keep_alive_enabled(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) KeepAliveIdleTime() Result[WasiSockets0_2_0_TcpDuration, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_duration_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_keep_alive_idle_time(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpDuration, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_duration_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpDuration
    var lift_ret_val_val WasiClocks0_2_0_MonotonicClockDuration
    var lift_ret_val_val_val uint64
    lift_ret_val_val_val = uint64(lift_ret_ptr)
    lift_ret_val_val = lift_ret_val_val_val
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetKeepAliveIdleTime(value WasiSockets0_2_0_TcpDuration) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_value C.wasi_clocks_0_2_0_monotonic_clock_duration_t
  var lower_value_val C.uint64_t
  lower_value_val_val := C.uint64_t(value)
  lower_value_val = lower_value_val_val
  lower_value = lower_value_val
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_keep_alive_idle_time(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) KeepAliveInterval() Result[WasiSockets0_2_0_TcpDuration, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_duration_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_keep_alive_interval(lower_self , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpDuration, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_duration_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpDuration
    var lift_ret_val_val WasiClocks0_2_0_MonotonicClockDuration
    var lift_ret_val_val_val uint64
    lift_ret_val_val_val = uint64(lift_ret_ptr)
    lift_ret_val_val = lift_ret_val_val_val
    lift_ret_val = lift_ret_val_val
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetKeepAliveInterval(value WasiSockets0_2_0_TcpDuration) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_value C.wasi_clocks_0_2_0_monotonic_clock_duration_t
  var lower_value_val C.uint64_t
  lower_value_val_val := C.uint64_t(value)
  lower_value_val = lower_value_val_val
  lower_value = lower_value_val
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_keep_alive_interval(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) KeepAliveCount() Result[uint32, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_u32_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_keep_alive_count(lower_self , &ret )
  var lift_ret Result[uint32, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint32_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint32
    lift_ret_val = uint32(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetKeepAliveCount(value uint32) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint32_t(value)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_keep_alive_count(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) HopLimit() Result[uint8, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_u8_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_hop_limit(lower_self , &ret )
  var lift_ret Result[uint8, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint8_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint8
    lift_ret_val = uint8(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetHopLimit(value uint8) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint8_t(value)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_hop_limit(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) ReceiveBufferSize() Result[uint64, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_u64_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_receive_buffer_size(lower_self , &ret )
  var lift_ret Result[uint64, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetReceiveBufferSize(value uint64) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint64_t(value)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_receive_buffer_size(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SendBufferSize() Result[uint64, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_tcp_result_u64_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_send_buffer_size(lower_self , &ret )
  var lift_ret Result[uint64, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.uint64_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val uint64
    lift_ret_val = uint64(lift_ret_ptr)
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) SetSendBufferSize(value uint64) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  lower_value := C.uint64_t(value)
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_set_send_buffer_size(lower_self , lower_value , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) Subscribe() WasiSockets0_2_0_TcpPollable {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_tcp_method_tcp_socket_subscribe(lower_self )
  var lift_ret WasiSockets0_2_0_TcpPollable
  lift_ret = WasiSockets0_2_0_TcpPollable(ret.__handle)

  return lift_ret
}

func (self WasiSockets0_2_0_TcpTcpSocket) Shutdown(shutdown_type WasiSockets0_2_0_TcpShutdownType) Result[struct{}, WasiSockets0_2_0_TcpErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_tcp_borrow_tcp_socket_t
  lower_self.__handle = C.int32_t(self)
  var lower_shutdown_type C.wasi_sockets_0_2_0_tcp_shutdown_type_t
  if shutdown_type.Kind() == WasiSockets0_2_0_TcpShutdownTypeKindReceive {
    lower_shutdown_type = 0
  }
  if shutdown_type.Kind() == WasiSockets0_2_0_TcpShutdownTypeKindSend {
    lower_shutdown_type = 1
  }
  if shutdown_type.Kind() == WasiSockets0_2_0_TcpShutdownTypeKindBoth {
    lower_shutdown_type = 2
  }
  var ret C.wasi_sockets_0_2_0_tcp_result_void_error_code_t
  C.wasi_sockets_0_2_0_tcp_method_tcp_socket_shutdown(lower_self , lower_shutdown_type , &ret )
  var lift_ret Result[struct{}, WasiSockets0_2_0_TcpErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
  }
  return lift_ret
}

// Import functions from wasi:sockets/tcp-create-socket@0.2.0
type WasiSockets0_2_0_TcpCreateSocketNetwork = WasiSockets0_2_0_NetworkNetwork
type WasiSockets0_2_0_TcpCreateSocketErrorCode = WasiSockets0_2_0_NetworkErrorCode
type WasiSockets0_2_0_TcpCreateSocketIpAddressFamily = WasiSockets0_2_0_NetworkIpAddressFamily
type WasiSockets0_2_0_TcpCreateSocketTcpSocket = WasiSockets0_2_0_TcpTcpSocket
func WasiSockets0_2_0_TcpCreateSocketCreateTcpSocket(address_family WasiSockets0_2_0_TcpCreateSocketIpAddressFamily) Result[WasiSockets0_2_0_TcpCreateSocketTcpSocket, WasiSockets0_2_0_TcpCreateSocketErrorCode] {
  var lower_address_family C.wasi_sockets_0_2_0_network_ip_address_family_t
  var lower_address_family_val C.wasi_sockets_0_2_0_network_ip_address_family_t
  if address_family.Kind() == WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv4 {
    lower_address_family_val = 0
  }
  if address_family.Kind() == WasiSockets0_2_0_NetworkIpAddressFamilyKindIpv6 {
    lower_address_family_val = 1
  }
  lower_address_family = lower_address_family_val
  var ret C.wasi_sockets_0_2_0_tcp_create_socket_result_own_tcp_socket_error_code_t
  C.wasi_sockets_0_2_0_tcp_create_socket_create_tcp_socket(lower_address_family , &ret )
  var lift_ret Result[WasiSockets0_2_0_TcpCreateSocketTcpSocket, WasiSockets0_2_0_TcpCreateSocketErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_create_socket_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpCreateSocketErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_tcp_create_socket_own_tcp_socket_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_TcpCreateSocketTcpSocket
    lift_ret_val = WasiSockets0_2_0_TcpCreateSocketTcpSocket(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

// Import functions from wasi:sockets/ip-name-lookup@0.2.0
type WasiSockets0_2_0_IpNameLookupPollable = WasiIo0_2_0_PollPollable
type WasiSockets0_2_0_IpNameLookupNetwork = WasiSockets0_2_0_NetworkNetwork
type WasiSockets0_2_0_IpNameLookupErrorCode = WasiSockets0_2_0_NetworkErrorCode
type WasiSockets0_2_0_IpNameLookupIpAddress = WasiSockets0_2_0_NetworkIpAddress
// WasiSockets0_2_0_IpNameLookupResolveAddressStream is a handle to imported resource resolve-address-stream
type WasiSockets0_2_0_IpNameLookupResolveAddressStream int32

//go:wasmimport wasi:sockets/ip-name-lookup@0.2.0 [resource-drop]resolve-address-stream
func _WasiSockets0_2_0_IpNameLookupResolveAddressStream_drop(self WasiSockets0_2_0_IpNameLookupResolveAddressStream)

func (self WasiSockets0_2_0_IpNameLookupResolveAddressStream) Drop() {
  _WasiSockets0_2_0_IpNameLookupResolveAddressStream_drop(self)
}

func WasiSockets0_2_0_IpNameLookupResolveAddresses(network WasiSockets0_2_0_IpNameLookupNetwork, name string) Result[WasiSockets0_2_0_IpNameLookupResolveAddressStream, WasiSockets0_2_0_IpNameLookupErrorCode] {
  var lower_network C.wasi_sockets_0_2_0_ip_name_lookup_borrow_network_t
  lower_network.__handle = C.int32_t(network)
  var lower_name C.http_trigger_string_t

  // use unsafe.Pointer to avoid copy
  lower_name.ptr = (*uint8)(unsafe.Pointer(C.CString(name)))
  lower_name.len = C.size_t(len(name))
  var ret C.wasi_sockets_0_2_0_ip_name_lookup_result_own_resolve_address_stream_error_code_t
  C.wasi_sockets_0_2_0_ip_name_lookup_resolve_addresses(lower_network , &lower_name , &ret )
  var lift_ret Result[WasiSockets0_2_0_IpNameLookupResolveAddressStream, WasiSockets0_2_0_IpNameLookupErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_ip_name_lookup_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_IpNameLookupErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_ip_name_lookup_own_resolve_address_stream_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_IpNameLookupResolveAddressStream
    lift_ret_val = WasiSockets0_2_0_IpNameLookupResolveAddressStream(lift_ret_ptr.__handle)
    
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_IpNameLookupResolveAddressStream) ResolveNextAddress() Result[Option[WasiSockets0_2_0_IpNameLookupIpAddress], WasiSockets0_2_0_IpNameLookupErrorCode] {
  var lower_self C.wasi_sockets_0_2_0_ip_name_lookup_borrow_resolve_address_stream_t
  lower_self.__handle = C.int32_t(self)
  var ret C.wasi_sockets_0_2_0_ip_name_lookup_result_option_ip_address_error_code_t
  C.wasi_sockets_0_2_0_ip_name_lookup_method_resolve_address_stream_resolve_next_address(lower_self , &ret )
  var lift_ret Result[Option[WasiSockets0_2_0_IpNameLookupIpAddress], WasiSockets0_2_0_IpNameLookupErrorCode]
  if ret.is_err {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_ip_name_lookup_error_code_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val WasiSockets0_2_0_IpNameLookupErrorCode
    var lift_ret_val_val WasiSockets0_2_0_NetworkErrorCode
    if lift_ret_ptr == 0 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeUnknown()
    }
    if lift_ret_ptr == 1 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAccessDenied()
    }
    if lift_ret_ptr == 2 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotSupported()
    }
    if lift_ret_ptr == 3 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidArgument()
    }
    if lift_ret_ptr == 4 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeOutOfMemory()
    }
    if lift_ret_ptr == 5 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTimeout()
    }
    if lift_ret_ptr == 6 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConcurrencyConflict()
    }
    if lift_ret_ptr == 7 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNotInProgress()
    }
    if lift_ret_ptr == 8 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeWouldBlock()
    }
    if lift_ret_ptr == 9 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeInvalidState()
    }
    if lift_ret_ptr == 10 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNewSocketLimit()
    }
    if lift_ret_ptr == 11 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressNotBindable()
    }
    if lift_ret_ptr == 12 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeAddressInUse()
    }
    if lift_ret_ptr == 13 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeRemoteUnreachable()
    }
    if lift_ret_ptr == 14 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionRefused()
    }
    if lift_ret_ptr == 15 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionReset()
    }
    if lift_ret_ptr == 16 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeConnectionAborted()
    }
    if lift_ret_ptr == 17 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeDatagramTooLarge()
    }
    if lift_ret_ptr == 18 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeNameUnresolvable()
    }
    if lift_ret_ptr == 19 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodeTemporaryResolverFailure()
    }
    if lift_ret_ptr == 20 {
      lift_ret_val_val = WasiSockets0_2_0_NetworkErrorCodePermanentResolverFailure()
    }
    lift_ret_val = lift_ret_val_val
    lift_ret.SetErr(lift_ret_val)
  } else {
    lift_ret_ptr := *(*C.wasi_sockets_0_2_0_ip_name_lookup_option_ip_address_t)(unsafe.Pointer(&ret.val))
    var lift_ret_val Option[WasiSockets0_2_0_IpNameLookupIpAddress]
    if lift_ret_ptr.is_some {
      var lift_ret_val_val WasiSockets0_2_0_IpNameLookupIpAddress
      var lift_ret_val_val_val WasiSockets0_2_0_NetworkIpAddress
      if lift_ret_ptr.val.tag == 0 {
        lift_ret_val_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv4_address_t)(unsafe.Pointer(&lift_ret_ptr.val.val))
        var lift_ret_val_val_val_val WasiSockets0_2_0_NetworkIpv4Address
        var lift_ret_val_val_val_val_F0 uint8
        lift_ret_val_val_val_val_F0 = uint8(lift_ret_val_val_val_ptr.f0)
        lift_ret_val_val_val_val.F0 = lift_ret_val_val_val_val_F0
        var lift_ret_val_val_val_val_F1 uint8
        lift_ret_val_val_val_val_F1 = uint8(lift_ret_val_val_val_ptr.f1)
        lift_ret_val_val_val_val.F1 = lift_ret_val_val_val_val_F1
        var lift_ret_val_val_val_val_F2 uint8
        lift_ret_val_val_val_val_F2 = uint8(lift_ret_val_val_val_ptr.f2)
        lift_ret_val_val_val_val.F2 = lift_ret_val_val_val_val_F2
        var lift_ret_val_val_val_val_F3 uint8
        lift_ret_val_val_val_val_F3 = uint8(lift_ret_val_val_val_ptr.f3)
        lift_ret_val_val_val_val.F3 = lift_ret_val_val_val_val_F3
        lift_ret_val_val_val = WasiSockets0_2_0_NetworkIpAddressIpv4(lift_ret_val_val_val_val)
      }
      if lift_ret_ptr.val.tag == 1 {
        lift_ret_val_val_val_ptr := *(*C.wasi_sockets_0_2_0_network_ipv6_address_t)(unsafe.Pointer(&lift_ret_ptr.val.val))
        var lift_ret_val_val_val_val WasiSockets0_2_0_NetworkIpv6Address
        var lift_ret_val_val_val_val_F0 uint16
        lift_ret_val_val_val_val_F0 = uint16(lift_ret_val_val_val_ptr.f0)
        lift_ret_val_val_val_val.F0 = lift_ret_val_val_val_val_F0
        var lift_ret_val_val_val_val_F1 uint16
        lift_ret_val_val_val_val_F1 = uint16(lift_ret_val_val_val_ptr.f1)
        lift_ret_val_val_val_val.F1 = lift_ret_val_val_val_val_F1
        var lift_ret_val_val_val_val_F2 uint16
        lift_ret_val_val_val_val_F2 = uint16(lift_ret_val_val_val_ptr.f2)
        lift_ret_val_val_val_val.F2 = lift_ret_val_val_val_val_F2
        var lift_ret_val_val_val_val_F3 uint16
        lift_ret_val_val_val_val_F3 = uint16(lift_ret_val_val_val_ptr.f3)
        lift_ret_val_val_val_val.F3 = lift_ret_val_val_val_val_F3
        var lift_ret_val_val_val_val_F4 uint16
        lift_ret_val_val_val_val_F4 = uint16(lift_ret_val_val_val_ptr.f4)
        lift_ret_val_val_val_val.F4 = lift_ret_val_val_val_val_F4
        var lift_ret_val_val_val_val_F5 uint16
        lift_ret_val_val_val_val_F5 = uint16(lift_ret_val_val_val_ptr.f5)
        lift_ret_val_val_val_val.F5 = lift_ret_val_val_val_val_F5
        var lift_ret_val_val_val_val_F6 uint16
        lift_ret_val_val_val_val_F6 = uint16(lift_ret_val_val_val_ptr.f6)
        lift_ret_val_val_val_val.F6 = lift_ret_val_val_val_val_F6
        var lift_ret_val_val_val_val_F7 uint16
        lift_ret_val_val_val_val_F7 = uint16(lift_ret_val_val_val_ptr.f7)
        lift_ret_val_val_val_val.F7 = lift_ret_val_val_val_val_F7
        lift_ret_val_val_val = WasiSockets0_2_0_NetworkIpAddressIpv6(lift_ret_val_val_val_val)
      }
      lift_ret_val_val = lift_ret_val_val_val
      lift_ret_val.Set(lift_ret_val_val)
    } else {
      lift_ret_val.Unset()
    }
    lift_ret.Set(lift_ret_val)
  }
  return lift_ret
}

func (self WasiSockets0_2_0_IpNameLookupResolveAddressStream) Subscribe() WasiSockets0_2_0_IpNameLookupPollable {
  var lower_self C.wasi_sockets_0_2_0_ip_name_lookup_borrow_resolve_address_stream_t
  lower_self.__handle = C.int32_t(self)
  ret := C.wasi_sockets_0_2_0_ip_name_lookup_method_resolve_address_stream_subscribe(lower_self )
  var lift_ret WasiSockets0_2_0_IpNameLookupPollable
  lift_ret = WasiSockets0_2_0_IpNameLookupPollable(ret.__handle)

  return lift_ret
}

// Import functions from wasi:random/random@0.2.0
func WasiRandom0_2_0_RandomGetRandomBytes(len uint64) []uint8 {
  lower_len := C.uint64_t(len)
  var ret C.http_trigger_list_u8_t
  C.wasi_random_0_2_0_random_get_random_bytes(lower_len , &ret )
  var lift_ret []uint8
  lift_ret = make([]uint8, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.uint8_t
      lift_ret_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret uint8
      list_lift_ret = uint8(lift_ret_ptr)
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func WasiRandom0_2_0_RandomGetRandomU64() uint64 {
  ret := C.wasi_random_0_2_0_random_get_random_u64()
  var lift_ret uint64
  lift_ret = uint64(ret)
  return lift_ret
}

// Import functions from wasi:random/insecure@0.2.0
func WasiRandom0_2_0_InsecureGetInsecureRandomBytes(len uint64) []uint8 {
  lower_len := C.uint64_t(len)
  var ret C.http_trigger_list_u8_t
  C.wasi_random_0_2_0_insecure_get_insecure_random_bytes(lower_len , &ret )
  var lift_ret []uint8
  lift_ret = make([]uint8, ret.len)
  if ret.len > 0 {
    for lift_ret_i := 0; lift_ret_i < int(ret.len); lift_ret_i++ {
      var empty_lift_ret C.uint8_t
      lift_ret_ptr := *(*C.uint8_t)(unsafe.Pointer(uintptr(unsafe.Pointer(ret.ptr)) +
      uintptr(lift_ret_i)*unsafe.Sizeof(empty_lift_ret)))
      var list_lift_ret uint8
      list_lift_ret = uint8(lift_ret_ptr)
      lift_ret[lift_ret_i] = list_lift_ret
    }
  }
  return lift_ret
}

func WasiRandom0_2_0_InsecureGetInsecureRandomU64() uint64 {
  ret := C.wasi_random_0_2_0_insecure_get_insecure_random_u64()
  var lift_ret uint64
  lift_ret = uint64(ret)
  return lift_ret
}

// Import functions from wasi:random/insecure-seed@0.2.0
type WasiRandom0_2_0_InsecureSeedTuple2U64U64T struct {
  F0 uint64
  F1 uint64
}

func WasiRandom0_2_0_InsecureSeedInsecureSeed() WasiRandom0_2_0_InsecureSeedTuple2U64U64T {
  var ret C.http_trigger_tuple2_u64_u64_t
  C.wasi_random_0_2_0_insecure_seed_insecure_seed(&ret )
  var lift_ret WasiRandom0_2_0_InsecureSeedTuple2U64U64T
  var lift_ret_F0 uint64
  lift_ret_F0 = uint64(ret.f0)
  lift_ret.F0 = lift_ret_F0
  var lift_ret_F1 uint64
  lift_ret_F1 = uint64(ret.f1)
  lift_ret.F1 = lift_ret_F1
  return lift_ret
}

// Export functions from wasi:http/incoming-handler@0.2.0
type ExportsWasiHttp0_2_0_IncomingHandlerIncomingRequest = WasiHttp0_2_0_TypesIncomingRequest
type ExportsWasiHttp0_2_0_IncomingHandlerResponseOutparam = WasiHttp0_2_0_TypesResponseOutparam
var exports_wasi_http0_2_0_incoming_handler ExportsWasiHttp0_2_0_IncomingHandler = nil
// `SetExportsWasiHttp0_2_0_IncomingHandler` sets the `ExportsWasiHttp0_2_0_IncomingHandler` interface implementation.
// This function will need to be called by the init() function from the guest application.
// It is expected to pass a guest implementation of the `ExportsWasiHttp0_2_0_IncomingHandler` interface.
func SetExportsWasiHttp0_2_0_IncomingHandler(i ExportsWasiHttp0_2_0_IncomingHandler) {
  exports_wasi_http0_2_0_incoming_handler = i
}
type ExportsWasiHttp0_2_0_IncomingHandler interface {
  Handle(request ExportsWasiHttp0_2_0_IncomingHandlerIncomingRequest, response_out ExportsWasiHttp0_2_0_IncomingHandlerResponseOutparam) 
}
//export exports_wasi_http_0_2_0_incoming_handler_handle
func exportsWasiHttp020IncomingHandlerHandle(request C.exports_wasi_http_0_2_0_incoming_handler_own_incoming_request_t, response_out C.exports_wasi_http_0_2_0_incoming_handler_own_response_outparam_t) {
  lift_request := WasiHttp0_2_0_TypesIncomingRequest(request.__handle)
  lift_response_out := WasiHttp0_2_0_TypesResponseOutparam(response_out.__handle)
  exports_wasi_http0_2_0_incoming_handler.Handle(lift_request, lift_response_out)

}
